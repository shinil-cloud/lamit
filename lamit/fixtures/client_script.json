[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Training Event",
  "enabled": 1,
  "modified": "2023-03-23 09:00:54.410396",
  "module": null,
  "name": "Training- Form",
  "script": "frappe.ui.form.on('Training Event',\n{\n    refresh(frm)\n    {\n        if(frm.doc.event_status!=\"Completed\")\n        {\n           setTimeout(() =>\n    \t   {\n                cur_frm.remove_custom_button('Training Result');\n                cur_frm.remove_custom_button('Training Feedback');\n    \t   });\n        }\n        else\n        {\n            setTimeout(() =>\n    \t   {\n                cur_frm.remove_custom_button('Training Feedback');\n    \t   });\n        }\n    },\n    \n\tstart_time(frm)\n\t{\n\t\tif(frm.doc.start_time !=undefined)\n\t\t{\n\t\t    var x=frm.doc.start_time.split(\" \")[0]\n\t\t    frm.set_value(\"start\",x)\n\t\t}\n\t\telse\n\t\t{\n\t\t    frm.set_value(\"start\",undefined)\n\t\t}\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Period",
  "enabled": 1,
  "modified": "2023-03-23 09:00:54.471621",
  "module": null,
  "name": "Leave Period -form",
  "script": "frappe.ui.form.on('Leave Period', \n{\n    onload(frm)\n\t{\n\t\t if(frm.is_new())\n\t\t {\n\t\t     frm.set_value(\"company\",\"Lamit\");\n\t\t }\n\t},\n\t\n\trefresh(frm)\n\t{\n\t\t cur_frm.dashboard.hide();\n\t\t \n\t\t if(frm.is_new())\n\t\t {\n\t\t     frm.set_df_property(\"is_active\",\"hidden\",1);\n\t\t }\n\t\t \n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Type",
  "enabled": 1,
  "modified": "2023-03-23 09:00:54.510533",
  "module": null,
  "name": "Leave Type -Form",
  "script": "frappe.ui.form.on('Leave Type',\n{\n\trefresh(frm)\n\t{\n\t    cur_frm.dashboard.hide();\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Allocation",
  "enabled": 1,
  "modified": "2023-03-23 09:00:54.547153",
  "module": null,
  "name": "Leave Allocation - Form",
  "script": "frappe.ui.form.on('Leave Allocation', \n{\n\trefresh(frm)\n\t{\n\t\tcur_frm.dashboard.hide();\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Training Event",
  "enabled": 1,
  "modified": "2023-03-23 09:00:54.585113",
  "module": null,
  "name": "Training Event -Form",
  "script": "frappe.ui.form.on('Training Event', \n{\n    onload(frm)\n    {\n        frm.set_value(\"company\",\"Lamit\");  \n    },\n    \n\trefresh(frm)\n\t{\n\t\t cur_frm.dashboard.hide();\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "KPI",
  "enabled": 1,
  "modified": "2023-07-12 16:43:12.825103",
  "module": null,
  "name": "KPI - Form",
  "script": "\nvar trigger=0\n\nfrappe.ui.form.on('KPI', \n{\n\trefresh(frm) \n\t{\n\t    if(frm.is_new())\n\t    {\n\t        const month1 = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n    \t\tconst d = new Date();\n            let year = d.getFullYear();\n            let month= month1[d.getMonth()];\n            \n            var n=flt(year)-10\n            var year_list=[]\n            \n            for(var i=flt(n);i<flt(n)+20;i++)\n            {\n                year_list.push(i)\n            }\n            \n            \n            frm.set_df_property('year', 'options',year_list)\n            frm.set_value(\"year\",year)\n             frm.set_value(\"month\",month)\n            frm.refresh_field(\"year\")\n\t    }\n        \n\t},\n\t\n\temployee(frm)\n\t{\n\t    var weightage_total=0\n\t    if(frm.doc.employee !=undefined)\n\t    {\n\t        if(frm.doc.employee.length>0)\n\t        {\n\t            if(trigger==0)\n\t            {\n    \t              frappe.call\n                      ({\n                                        method: \"frappe.client.get_list\",\n                                        args: \n                                            {\n                                                doctype: \"KRA\",\n                                                filters:\n                                                { \n                                                            'designation':frm.doc.designation,\n                                                            \"active\":1\n                                                },\n                                            },\n                                                callback: function(d)\n                                                {\n                                                    if(d.message[0])\n                                                    { \n                                                        $.each(d.message,function(i,v)\n                                                        {\n                                                            console.log(\"v1  \",v.name)\n                                                              cur_frm.clear_table(\"kpi_table\"); \n                                                              \n                                                              frappe.call\n                                                              ({\n                                                                                method: \"frappe.client.get\",\n                                                                                args: \n                                                                                    {\n                                                                                        doctype: \"KRA\",\n                                                                                        filters:\n                                                                                        { \n                                                                                                    'name':v.name,\n                                                                                        },\n                                                                                    },\n                                                                                    callback: function(x)\n                                                                                    {\n                                                                                            if(x.message)\n                                                                                            { \n                                                                                                frm.set_value(\"kra\",x.message.kra_name)\n                                                                                                    $.each(x.message.kpi_table,function(j,u)\n                                                                                                    {\n                                                                                                        console.log(\"v2 \",u.kpi_description)\n                                                                                                        var row = cur_frm.add_child(\"kpi_table\");\n                                                                                                        row.kra=x.message.kra_name\n                                                                                                        row.kpi_description=u.kpi_description\n                                                                                                        \n                                                                                                        row.kra_description=u.kra_description\n                                                                                                        row.maximum=u.weightage\n                                                                                                        weightage_total=flt(weightage_total)+flt(u.weightage);\n                                                                                                    })\n                                                                                                    frm.set_value(\"maximum_weightage\",weightage_total) \n                                                                                                        \n                                                                                                        //  cur_frm.refresh_fields(\"kra\");\n                                                                                                      cur_frm.refresh_fields(\"kpi_table\");\n                                                                                            }\n                                                                                    }\n                                                              });\n                                                            \n                                                        });\n                                                          \n                                                    }\n                                                }\n                      });\n                     frm.set_value(\"maximum_weightage\",weightage_total) ;\n                     trigger=1;\n\t            }\n\t            else\n\t            {\n\t                trigger=0;\n\t            }\n               \n\t        }\n\t        else\n\t        {\n\t            cur_frm.clear_table(\"kpi_table\"); \n\t            cur_frm.refresh_fields(\"kpi_table\");\n\t        }\n\t    }\n\t    else\n\t    {\n\t        cur_frm.clear_table(\"kpi_table\"); \n\t        cur_frm.refresh_fields(\"kpi_table\");\n\t    }\n\t}\n\t\n\t\n});\n\nfrappe.ui.form.on('KPI Table', \n{\n\tweightage(frm,cdt,cdn) \n\t{\n\t    var d=locals [cdt][cdn];\n\t    var weightage_total=0\n\t    \n\t    if (flt(d.weightage)>flt(d.maximum))\n\t    {\n\t        msgprint(\"Weightage can't be more than maximum value\");\n\t        frappe.model.set_value(cdt,cdn,\"weightage\",undefined);\n\t    }\n\t    \n\t    $.each(frm.doc.kpi_table,function(j,u)\n        {\n            weightage_total=flt(weightage_total)+flt(u.weightage);\n        });\n\n        frm.set_value(\"achieved_weightage\",weightage_total) ;\n\t},\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "KRA",
  "enabled": 1,
  "modified": "2023-03-23 09:00:54.663472",
  "module": null,
  "name": "KRA - Form",
  "script": "frappe.ui.form.on('KRA', \n{\n\trefresh(frm)\n\t{\n\t\t// your code here\n\t}\n});\n\nfrappe.ui.form.on('KRA Table', \n{\n\tweightage(frm,cdt,cdn)\n\t{\n\t   \n\t    var total=0;\n\t\t$.each(frm.doc.kpi_table,function(i,v)\n\t\t{\n\t\t    if(v.weightage !=undefined)\n\t\t    {\n\t\t        total=flt(total)+flt(v.weightage);\n\t\t    }\n\t\t});\n\t\t\n\t\tfrm.set_value(\"weightage_total\",total);\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Opening1",
  "enabled": 1,
  "modified": "2023-03-23 09:00:54.701580",
  "module": null,
  "name": "Job Opening1 -Form",
  "script": "var designation_list=[]\n\nfrappe.ui.form.on('Job Opening1',\n{\n    onload(frm)\n    {\n        if(frm.is_new())\n        {\n            frm.set_value(\"company\",\"Lamit\");\n            frm.trigger(\"fiter_designation\");\n        }\n           \n    },\n    \n\trefresh(frm) \n\t{\n\t    if(frm.is_new())\n        {\n            frm.set_df_property(\"status\",\"hidden\",1)\n        }\n        else\n        {\n            frm.set_df_property(\"status\",\"hidden\",0);\n            \n            frm.add_custom_button(__('Job Applicant'), function()\n            {\n                frappe.route_options = \n                {\n                    \"company\":\"Lamit\",\n                    \"job_opening1\":frm.doc.name,\n                    \"designation1\":frm.doc.designation,\n                };\n                \n                document = frappe.new_doc(\"Job Applicant\");\n                frappe.set_route(\"Form\",\"Job Applicant\", document.name);\n            });\n            frm.change_custom_button_type('Job Applicant', null, 'success');\n\n            \n            \n        }\n                if(frm.doc.company ==undefined)\n\t            {\n\t                frm.set_query(\"staffing_plan\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    frm.set_query(\"department\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    frm.set_query(\"designation\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"name\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    \n\t            }\n\t            else\n\t            {\n\t                frm.set_query(\"staffing_plan\", function()\n                    {\n                        return {\n                                \"filters\":{\n                                            \"company\":frm.doc.company,\n                                            \"status1\":\"Open\",\n                                            \"docstatus\":1\n                                          }\n                              };\n                    });  \n\t            }\n\n\n\n\n\t     $('li').removeClass(\"disabled\");\n\t     frm.page.sidebar.remove();\n\t\t frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t\t  cur_frm.dashboard.hide()\n\t},\n\t\n\tstaffing_plan:function(frm)\n\t{\n\t     frm.trigger(\"fiter_designation\")\n\t},\n\t\n\tdesignation:function(frm)\n\t{\n\t    frm.trigger(\"fill_planned_vacancies\")\n\t},\n\t\n\tfiter_designation:function(frm)\n\t{\n\t         if(frm.doc.staffing_plan !=undefined)\n             {\n                if(frm.doc.staffing_plan.length>0)\n                {\n                \tdesignation_list=[]\n                \tvar d2=[]\n\t    \n\t                                                    frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Staffing Plan\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"name\":frm.doc.staffing_plan,\n                                                                        \"docstatus\":1\n                                                                    },\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                             if(doc1.message)\n                                                             {\n                                                                 $.each(doc1.message.staffing_details,function(i,v)\n                                                                 {   \n                                                                     if(v.status==\"Open\")\n                                                                     {\n                                                                        designation_list.push(v.designation)\n                                                                     }\n                                                                      d2=[...new Set(designation_list)];\n                                                                 })\n                                                             }\n                                                         })\n                }\n        \t        frm.set_query(\"designation\", function()\n                    {\n                        return {\n                                \"filters\": {\n                                            \"name\":[\"in\",d2]\n                                          }\n                              };\n                    });\n             }\n             \n             frm.set_value(\"designation\",undefined);\n\t},\n\t\n\tcompany:function(frm)\n\t{\n\t            if(frm.doc.company ==undefined)\n\t            {\n\t                frm.set_query(\"staffing_plan\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    frm.set_query(\"department\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    frm.set_query(\"designation\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"name\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    \n\t            }\n\t            else if(frm.doc.company.length==0)\n\t            {\n\t                frm.set_query(\"staffing_plan\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    frm.set_query(\"department\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    frm.set_query(\"designation\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"name\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    \n\t            }\n\t            else\n\t            {\n                    frm.set_query(\"staffing_plan\", function()\n                    {\n                        return {\n                                \"filters\": {\n                                            \"company\":frm.doc.company,\n                                            \"status1\":\"Open\",\n                                            \"docstatus\":1\n                                          }\n                              };\n                    });\n                    \n                    frm.set_query(\"department\", function()\n                    {\n                        return {\n                                \"filters\": {\n                                            \"company\":frm.doc.company,\n                                            // \"status\":\"Open\"\n                                          }\n                              };\n                    });\n                    frm.set_query(\"designation\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                             [\"name\",\"!=\",undefined],\n                                            // \"status\":\"Open\"\n                                          ]\n                              };\n                    }); \n\t            }\n\t},\n\t\n\tfill_planned_vacancies:function(frm)\n\t{\n\t    var v1=\" \"\n\t         if(frm.doc.staffing_plan !=undefined)\n             {\n                if(frm.doc.staffing_plan.length>0)\n                {\n                    if(frm.doc.designation !=undefined)\n                     {\n                        if(frm.doc.designation.length>0)\n                        {\n\t                                                    frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Staffing Plan\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"name\":frm.doc.staffing_plan,\n                                                                    },\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                             if(doc1.message)\n                                                             {\n                                                                 $.each(doc1.message.staffing_details,function(i,v)\n                                                                 {   \n                                                                     if(v.designation==frm.doc.designation)\n                                                                     {\n                                                                        v1=v.vacancies\n                                                                     }\n                                                                 })\n                                                             }\n                                                              frm.set_value(\"planned_vacancies\",v1);\n                                                             \n                                                         })\n                        }\n                        else\n                        {\n                            frm.set_value(\"planned_vacancies\",v1);\n                        }\n                     }\n                     else\n                     {\n                            frm.set_value(\"planned_vacancies\",v1);\n                     }\n                }\n                else\n                {\n                            frm.set_value(\"planned_vacancies\",v1);\n                }\n\n             }\n             else\n             {\n                            frm.set_value(\"planned_vacancies\",v1);\n             }\n\t},\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Appointment Letter1",
  "enabled": 1,
  "modified": "2023-03-23 09:00:54.746903",
  "module": null,
  "name": "Appointment Letter1 -Form",
  "script": "frappe.ui.form.on('Appointment Letter1',\n{\n    onload(frm,cdt,cdn)\n    {\n        if(frm.is_new())\n        {\n            var today = new Date();\n            var year = today.getFullYear();\n            cur_frm.set_value(\"year\",year);\n            \n            $.each(frm.doc.terms,function(i,v)\n            {\n                   v.title=\"dummy\";\n                   v.description=\"dummy\";\n            });\n            frm.refresh_field(\"terms\");\n        }\n        \n    },\n    \n    refresh(frm)\n    {\n        // frm.set_df_property(\"job_applicant\",\"reqd\",0)\n        // frm.set_df_property(\"applicant_name\",\"reqd\",0)\n        //  frm.set_df_property(\"job_applicant\",\"hidden\",1)\n        frm.set_df_property(\"terms\",\"hidden\",1)\n        frm.set_df_property(\"terms\",\"reqd\",0)\n        frm.set_df_property(\"introduction\",\"hidden\",1)\n        frm.set_df_property(\"introduction\",\"reqd\",0)\n         $('li').removeClass(\"disabled\");\n          cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \n\t    \n\t                frm.set_query(\"salary_structure\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"docstatus\",\"=\",1]\n                                          ]\n                              };\n                    }); \n                    \n             frm.add_custom_button(__(\"Send Appointment Letter\"),\n\t         function()\n\t         {\n                 frm.set_value('send_appointment_letter',1);\n                 frm.save();\n             }).addClass(\"btn-success\").removeClass(\"btn-default\");\n        \n        if(frm.doc.send_appointment_letter==1 || frm.is_new())\n\t    {\n\t        cur_frm.page.remove_inner_button(__('Send Appointment Letter'));\n\t    }\n                    \n                    \n\t    \n    // \tvar bs = frm.doc.basic_salary\n    //     var yr = flt(bs) * 12\n    //     // console.log(\"Yearly\",yr)\n    //     frm.set_value(\"yearly\",yr)\n    //     var bn = frm.doc.bonus\n        \n    //     var gt = frm.doc.gratuity\n    //     var total = flt(yr) + flt(bn) \n    //     // console.log(\"Total\",total)\n    //     frm.set_value(\"total\",total)\n\t    \n    },\n    \n    employee(frm)\n    {\n        if(frm.doc.employee !=undefined)\n        {\n            if(frm.doc.employee.length>0)\n            {\n                          frappe.call\n                          ({\n                                method: \"frappe.client.get_list\",\n                                args: \n                                        {\n                                            doctype:\"Employee\",\n                                            filters: { 'name':frm.doc.employee},\n                                            fields:[\"email_id\",\"prefered_contact_email\",\"personal_email\",\"company_email\"],\n                                        },\n                                        \n                                    callback: function(r)\n                                    {\n                                        console.log(r)\n                                          if(r.message[0])\n                                          {\n                                                 var mail\n                                                if(r.message[0].prefered_contact_email==\"Company Email\")\n                                                {\n                                                    mail=r.message[0].company_email\n                                                }\n                                                else if(r.message[0].prefered_contact_email==\"Personal Email\")\n                                                {\n                                                    mail=r.message[0].personal_email\n                                                }\n                                                else if(r.message[0].prefered_contact_email==\"User ID\")\n                                                {\n                                                    mail=r.message[0].email_id\n                                                }\n                                                else\n                                                {\n                                                     mail=r.message[0].email_id\n                                                }\n                                                frm.set_value(\"email_id\",mail)\n                                          }\n                                    }\n                          });\n            }\n            else\n            {\n                frm.set_value(\"email_id\",undefined);\n            }\n        }\n        else\n        {\n                frm.set_value(\"email_id\",undefined);\n        }\n    },\n    \n    appointment_letter_template(frm)\n    {\n        if(frm.doc.appointment_letter_template !=undefined)\n        {\n            if(frm.doc.appointment_letter_template.length>0)\n            {\n                frappe.call\n    \t        ({\n    \t            method:'frappe.client.get',\n    \t            args:\n    \t            {\n    \t                'doctype':'Appointment Letter Template',\n    \t                filters:\n    \t                {\n    \t                    \n    \t                    name:frm.doc.appointment_letter_template\n    \t                }\n    \t            },\n    \t            \n    \t            callback:function(r)\n    \t            {\n    \t                if(r)\n    \t                {\n    \t                    frm.set_value(\"header\",r.message.header_section);\n    \t                    frm.set_value(\"footer_section\",r.message.footer_section);\n    \t                    frm.set_value(\"package_section_content\",r.message.package_section_content);\n\n    \t                    $.each(r.message.common_salary_details,function(i,v)\n                            {\n                                    var child = cur_frm.add_child(\"common_salary_details\");\n                                    frappe.model.set_value(child.doctype, child.name, \"components\",v.components);\n                                    frappe.model.set_value(child.doctype, child.name, \"comments\",v.comments);\n                                    frappe.model.set_value(child.doctype, child.name, \"amount\",v.amount);\n                            });\n                            cur_frm.refresh_field(\"common_salary_details\");\n    \t                }\n    \t            }\n    \t        });\n            }\n            else\n            {\n                 frm.set_value(\"header\",undefined);\n    \t         frm.set_value(\"footer_section\",undefined);\n    \t         frm.set_value(\"package_section_content\",undefined);\n    \t         cur_frm.clear_table(\"common_salary_details\");\n    \t         cur_frm.refresh_fields(\"common_salary_details\");\n    \t         \n    \t       //  frm.set_value(\"footer_section\",r.message.footer_section);\n            }\n        }\n        else\n        {\n                 frm.set_value(\"header\",undefined);\n    \t         frm.set_value(\"footer_section\",undefined);\n    \t         frm.set_value(\"package_section_content\",undefined);\n    \t         cur_frm.clear_table(\"common_salary_details\");\n    \t         cur_frm.refresh_fields(\"common_salary_details\");\n    \t       //  frm.set_value(\"footer_section\",r.message.footer_section);\n        }\n        \n        if(frm.doc.terms)\n        {\n            if(frm.doc.terms.length>0)\n            {\n                $.each(frm.doc.terms,function(i,v)\n                {\n                      v.title=\"dummy\";\n                      v.description=\"dummy\";\n                });\n            }\n            else\n            {\n                var child = cur_frm.add_child(\"terms\");\n                frappe.model.set_value(child.doctype, child.name, \"title\",\"dummy\");\n                frappe.model.set_value(child.doctype, child.name, \"description\",\"dummy\");\n            }\n        }\n        else\n        {\n            console.log(\"x2\");\n            var child = cur_frm.add_child(\"terms\");\n            frappe.model.set_value(child.doctype, child.name, \"title\",\"dummy\");\n            frappe.model.set_value(child.doctype, child.name, \"description\",\"dummy\");\n        }\n        \n            \n        \n        frm.refresh_field(\"terms\");\n    },\n    \n    salary_structure(frm)\n    {\n        if(frm.doc.salary_structure !=undefined)\n        {\n            if(frm.doc.salary_structure.length>0)\n            {\n                frappe.call\n    \t        ({\n    \t            method:'frappe.client.get',\n    \t            args:\n    \t            {\n    \t                'doctype':'Salary Structure',\n    \t                filters:\n    \t                {\n                             name:frm.doc.salary_structure\n    \t                }\n    \t            },\n    \t            \n    \t            callback:function(r)\n    \t            {\n    \t                if(r)\n    \t                {\n    \t                    cur_frm.clear_table(\"salary_details\");\n    \t                    $.each(r.message.earnings,function(i,v)\n                            {\n                                    var child = cur_frm.add_child(\"salary_details\");\n                                    frappe.model.set_value(child.doctype, child.name, \"salary_component\",v.salary_component);\n                                    frappe.model.set_value(child.doctype, child.name, \"abbr\",v.abbr);\n                                    frappe.model.set_value(child.doctype, child.name, \"per_working_day\",v.per_working_day);\n                                    frappe.model.set_value(child.doctype, child.name, \"amount1\",v.amount1);\n                                    frappe.model.set_value(child.doctype, child.name, \"amount\",v.amount);\n                            });\n                            cur_frm.refresh_field(\"salary_details\");\n    \t                }\n    \t            }\n    \t        });\n            }\n            else\n            {\n    \t         cur_frm.clear_table(\"salary_details\");\n    \t         cur_frm.refresh_fields(\"salary_details\");\n            }\n        }\n        else\n        {\n    \t         cur_frm.clear_table(\"salary_details\");\n    \t         cur_frm.refresh_fields(\"salary_details\");\n        }  \n    },\n    \n    prefered_address(frm)\n    {\n        // if(frm.doc.employee !=undefined)\n        // {\n        //     if(frm.doc.employee.length>0)\n        //     {\n                    frappe.call\n                    ({\n                           \"method\":\"frappe.client.get\",\n                           \"args\":\n                                 {\n                                    \"doctype\":\"Employee\",\n                                    \"filters\":{\"name\":frm.doc.employee},\n                                 },\n                                 callback:function(d)\n                                {\n                                    console.log(d)\n                                        frm.set_value(\"house_name\",undefined);\n                                        frm.set_value(\"address_line_1\",undefined);\n                                        frm.set_value(\"address_line_2\",undefined);\n                                        frm.set_value(\"district\",undefined);\n                                        frm.set_value(\"pin_code\",undefined);\n                                        \n                                    if(d)\n                                    {\n                                        console.log(\"z\")\n                                        if(frm.doc.prefered_address==\"Current Address\")\n                                        {\n                                             console.log(\"z1\")\n                                            frm.set_value(\"house_name\",d.message.house_name1);\n                                            frm.set_value(\"address_line_1\",d.message.address_line1);\n                                            frm.set_value(\"address_line_2\",d.message.address_line2);\n                                            frm.set_value(\"district\",d.message.district1);\n                                            frm.set_value(\"pin_code\",d.message.pin1);\n                                        }\n                                        else\n                                        {\n                                             console.log(\"z2\")\n                                            frm.set_value(\"house_name\",d.message.house_name2);\n                                            frm.set_value(\"address_line_1\",d.message.address_line3);\n                                            frm.set_value(\"address_line_2\",d.message.address_line4);\n                                            frm.set_value(\"district\",d.message.district2);\n                                            frm.set_value(\"pin_code\",d.message.pin2);\n                                        }\n                                    }\n                                }\n                    });\n        //     }\n        // }\n    },\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Appointment Letter1",
  "enabled": 1,
  "modified": "2023-03-23 09:00:54.791402",
  "module": null,
  "name": "Appointment Letter1 - List",
  "script": "frappe.listview_settings['Appointment Letter1'] = {\n hide_name_column: true,\n \n refresh: function(listview) {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t}\n    \n};",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Separation1",
  "enabled": 1,
  "modified": "2023-03-23 09:05:48.729403",
  "module": null,
  "name": "Employee Separation1 -Form",
  "script": "var letter_date;\nvar accepted_date;\nvar relieving_date;\nvar exit_interview;\nvar notice_period\nvar reason\nvar feedback\nvar components=[\"Basic\",\"Dearness Allowance\",\"Travelling Allowance\",\"Bonus\",\"Gratuity\",\"Arrear\"];\nvar field_list=[\"basic\",\"da\",\"ta\",\"bonus\",\"gratuity\",\"arrear\"];\n\n\nfrappe.ui.form.on('Employee Separation1', \n{\n\tonload(frm) \n\t{\n\t\tfrm.trigger(\"Select_Current_values\");\n\t},\n\t\n\tnotice_period:function(frm)\n\t{\n\t    frm.trigger(\"calculate_relieving_date\")\n\t    \n\t},\n\t\n\taccepted_date:function(frm)\n\t{\n\t    frm.trigger(\"calculate_relieving_date\")\n\t    \n\t},\n\t\n\ttotal_incashable_leave:function(frm)\n\t{\n\t    frm.trigger(\"leave_encashable_calculation\")\n\t},\n\t\n\tper_day_amount:function(frm)\n\t{\n\t    frm.trigger(\"leave_encashable_calculation\")\n\t},\n\t\n\temployee_separation_template:function(frm)\n\t{\n\t    if(frm.doc.employee_separation_template !=undefined)\n\t    {\n\t        if(frm.doc.employee_separation_template.length>0)\n    \t    {\n    \t            frappe.call\n        \t        ({\n        \t            method:'frappe.client.get',\n        \t            args:\n        \t            {\n        \t                'doctype':'Employee Separation Template',\n        \t                filters:\n        \t                {\n        \t                    name:frm.doc.employee_separation_template\n        \t                }\n        \t            },\n        \t            \n        \t            callback:function(r)\n        \t            {\n        \t                cur_frm.clear_table(\"separation_template\");\n        \t                \n        \t                if(r)\n        \t                {\n        \t                    $.each(r.message.activities,function(i,v)\n        \t                    {\n        \t                        var row = cur_frm.add_child(\"separation_template\");\n                                    row.activity_name=v.activity_name\n                                    row.status=v.status\n        \t                    });\n        \t                }\n        \t                cur_frm.refresh_fields(\"separation_template\");\n        \t            }\n        \t        });\n    \t    }\n    \t    else\n    \t    {\n    \t         cur_frm.clear_table(\"separation_template\");\n    \t         cur_frm.refresh_fields(\"separation_template\");\n    \t    }\n\t    }\n\t    else\n\t    {\n\t         cur_frm.clear_table(\"separation_template\");\n\t         cur_frm.refresh_fields(\"separation_template\");\n\t    }\n\t},\n\t\n\tafter_save(frm)\n\t{\n\t    if(letter_date!=frm.doc.resignation_letter_date||accepted_date!=frm.doc.accepted_date||relieving_date!=frm.doc.relieving_date||exit_interview!=frm.doc.exit_interview_held_on||notice_period!=frm.doc.notice_period||reason!=frm.doc.reason_for_leaving||feedback!=frm.doc.feedback)\n\t    {\n\t        frappe.db.set_value(\"Employee\",frm.doc.employee,\n\t        {\n\t            \"resignation_letter_date\":frm.doc.resignation_letter_date,\n\t            \"held_on\":frm.doc.exit_interview_held_on,\n\t            \"accepted_date\":frm.doc.accepted_date,\n\t            \"notice_period\":frm.doc.notice_period,\n\t            \"relieving_date\":frm.doc.relieving_date,\n\t            \"reason_for_leaving\":frm.doc.reason_for_leaving,\n\t            \"feedback\":frm.doc.feedback,\n\t        });\n\t        \n\t        frm.trigger(\"Select_Current_values\");\n\t    }\n\t    \n\t},\n\t\n\tleave_encashable_calculation:function(frm)\n\t{\n\t    if(frm.doc.total_incashable_leave !=undefined)\n\t    {\n    \t        if(frm.doc.per_day_amount !=undefined)\n    \t        {\n        \t            var amount=flt(frm.doc.total_incashable_leave)*flt(frm.doc.per_day_amount,2)\n        \t            frm.set_value(\"total_payable\",String(amount));\n    \t        }\n    \t        else\n    \t        {\n    \t            frm.set_value(\"total_payable\",\"0\");\n    \t        }\n\t    }\n\t    else\n\t    {\n\t            frm.set_value(\"total_payable\",\"0\");\n        }\n\t},\n\t\n\tSelect_Current_values:function(frm)\n\t{\n\t     letter_date=frm.doc.resignation_letter_date;\n\t     accepted_date=frm.doc.accepted_date;\n\t     relieving_date=frm.doc.relieving_date;\n\t     exit_interview=frm.doc.exit_interview_held_on;\n\t     notice_period=frm.doc.notice_period;\n\t     reason=frm.doc.reason_for_leaving;\n\t     feedback=frm.doc.feedback;\n\t},\n\t\n\tcalculate_relieving_date:function(frm)\n\t{\n\t    if(frm.doc.notice_period !=undefined)\n\t    {\n\t        if(frm.doc.notice_period.length>0)\n    \t    {\n    \t        if(frm.doc.accepted_date !=undefined)\n    \t        {\n    \t            if(frm.doc.accepted_date.length>0)\n        \t        {\n        \t             var newdate=new Date(frm.doc.accepted_date);\n                         var date2=frappe.datetime.add_days(newdate,flt(frm.doc.notice_period));\n        \t             frm.set_value(\"relieving_date\",date2);\n        \t        }\n        \t        else\n        \t        {\n        \t            frm.set_value(\"relieving_date\",undefined);\n        \t        }\n    \t        }\n    \t        else\n    \t        {\n    \t            frm.set_value(\"relieving_date\",undefined);\n    \t        }\n    \t    }\n    \t    else\n\t        {\n\t            frm.set_value(\"relieving_date\",undefined);\n\t        }\n\t    }\n\t    else\n\t        {\n\t            frm.set_value(\"relieving_date\",undefined);\n\t        }\n\t},\n\t\n\tnotice_period:function(frm)\n\t{\n\t    frm.trigger(\"calculate_relieving_date\")\n\t    \n\t},\n});\n\nfrappe.ui.form.on('Separation Wages Table', \n{\n    no_of_working_days:function(frm,cdt,cdn)\n    {\n        var d=locals [cdt][cdn];\n        \n        if(d.no_of_working_days !=undefined)\n        {\n            if(d.no_of_working_days.length>0)\n            {\n                if(d.per_day !=undefined)\n                {\n                    if(d.per_day.length>0)\n                    {\n                        var amount=flt(d.no_of_working_days)*flt(d.per_day,2)\n                        frappe.model.set_value(cdt,cdn,\"amount\",amount)\n                    }\n                    else\n                    {\n                         frappe.model.set_value(cdt,cdn,\"amount\",undefined)\n                    }\n                }\n                else\n                {\n                    frappe.model.set_value(cdt,cdn,\"amount\",undefined)\n                }\n            }\n            else\n            {\n                frappe.model.set_value(cdt,cdn,\"amount\",undefined)\n            }\n        }\n        else\n        {\n            frappe.model.set_value(cdt,cdn,\"amount\",undefined);\n        }\n    },\n    \n    per_day:function(frm,cdt,cdn)\n    {\n        var d=locals [cdt][cdn];\n        console.log(\"s1\")\n        \n        if(d.no_of_working_days !=undefined)\n        {\n            console.log(\"s2\")\n            if(d.no_of_working_days.length>0)\n            {\n                console.log(\"s3\")\n                if(d.per_day !=undefined)\n                {\n                    console.log(\"s4\")\n                    if(d.per_day.length>0)\n                    {\n                        console.log(\"s5\")\n                        var amount=flt(d.no_of_working_days)*flt(d.per_day,2)\n                        frappe.model.set_value(cdt,cdn,\"amount\",amount)\n                    }\n                    else\n                    {\n                        console.log(\"s6\")\n                         frappe.model.set_value(cdt,cdn,\"amount\",undefined)\n                    }\n                }\n                else\n                {\n                    console.log(\"s7\")\n                    frappe.model.set_value(cdt,cdn,\"amount\",undefined)\n                }\n            }\n            else\n            {\n                console.log(\"s8\")\n                frappe.model.set_value(cdt,cdn,\"amount\",undefined)\n            }\n        }\n        else\n        {\n            console.log(\"s9\")\n            frappe.model.set_value(cdt,cdn,\"amount\",undefined);\n        }\n        frm.refresh_field(\"attach_salary_slip\")\n    },\n    \n    amount:function(frm,cdt,cdn)\n    {\n        console.log(\"y2\")\n        var total1=0\n        for(var j=0;j<components.length;j++)\n        {\n            var total=0\n            $.each(frm.doc.attach_salary_slip,function(i,v)\n            {\n                if(v.salary_component==components[j])\n                {\n                    if(v.amount !=undefined)\n                    {\n                            total=flt(total,2)+flt(v.amount,2);\n                    }\n                }\n            });\n            total1=flt(total1,2)+flt(total,2);\n            frm.set_value(field_list[j],total);\n        }\n        frm.set_value(\"total\",total1);\n    },\n    \n    salary_component:function(frm,cdt,cdn)\n    {\n        var total1=0\n        for(var j=0;j<components.length;j++)\n        {\n            var total=0\n            $.each(frm.doc.attach_salary_slip,function(i,v)\n            {\n                if(v.salary_component==components[j])\n                {\n                    if(v.amount !=undefined)\n                    {\n                            total=flt(total,2)+flt(v.amount,2);\n                    }\n                }\n            });\n            total1=flt(total1,2)+flt(total,2);\n            frm.set_value(field_list[j],total);\n        }\n        frm.set_value(\"total\",total1);\n    }\n});\n\nfrappe.ui.form.on('Separation Incentive Table', \n{\n    total:function(frm,cdt,cdn)\n    {\n        var d=locals [cdt][cdn];\n        \n        if(d.total !=undefined)\n        {\n            if(d.total.length>0)\n            {\n                if(d.released !=undefined)\n                {\n                    if(d.released.length>0)\n                    {\n                        var amount=flt(d.total)-flt(d.released,2)\n                        frappe.model.set_value(cdt,cdn,\"outstanding\",amount)\n                    }\n                    else\n                    {\n                         frappe.model.set_value(cdt,cdn,\"outstanding\",undefined)\n                    }\n                }\n                else\n                {\n                    frappe.model.set_value(cdt,cdn,\"outstanding\",undefined)\n                }\n            }\n            else\n            {\n                frappe.model.set_value(cdt,cdn,\"outstanding\",undefined)\n            }\n        }\n        else\n        {\n            frappe.model.set_value(cdt,cdn,\"outstanding\",undefined);\n        }\n    },\n    \n    released:function(frm,cdt,cdn)\n    {\n        var d=locals [cdt][cdn];\n        \n        if(d.total !=undefined)\n        {\n            if(d.total.length>0)\n            {\n                if(d.released !=undefined)\n                {\n                    if(d.released.length>0)\n                    {\n                        var amount=flt(d.total)-flt(d.released,2)\n                        frappe.model.set_value(cdt,cdn,\"outstanding\",amount)\n                    }\n                    else\n                    {\n                         frappe.model.set_value(cdt,cdn,\"outstanding\",undefined)\n                    }\n                }\n                else\n                {\n                    frappe.model.set_value(cdt,cdn,\"outstanding\",undefined)\n                }\n            }\n            else\n            {\n                frappe.model.set_value(cdt,cdn,\"outstanding\",undefined)\n            }\n        }\n        else\n        {\n            frappe.model.set_value(cdt,cdn,\"outstanding\",undefined);\n        }\n    },\n    \n    outstanding:function(frm,cdt,cdn)\n    {\n            var total=0\n            $.each(frm.doc.attach_incentive_doc,function(i,v)\n            {\n                    if(v.outstanding !=undefined)\n                    {\n                            total=flt(total,2)+flt(v.outstanding,2);\n                    }\n                    \n            });\n          frm.set_value(\"total_incentive\",total);  \n    },\n\n});\n\nfrappe.ui.form.on('Separation Deduction Table', \n{\n    amount:function(frm,cdt,cdn)\n    {\n            var total=0\n            $.each(frm.doc.deduction_details,function(i,v)\n            {\n                    if(v.amount !=undefined)\n                    {\n                            total=flt(total,2)+flt(v.amount,2);\n                    }\n                    \n            });\n          frm.set_value(\"total_deduction\",total);  \n    },\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Loan Type",
  "enabled": 0,
  "modified": "2023-03-23 09:00:54.869043",
  "module": null,
  "name": "Loan Type -Form",
  "script": "frappe.ui.form.on('Loan Type', \n{\n\trefresh(frm) \n\t{\n\t\tfrm.set_df_property(\"mode_of_payment\",\"reqd\",0)\n        frm.set_df_property(\"disbursement_account\",\"reqd\",0)\n        frm.set_df_property(\"payment_account\",\"reqd\",0)\n        frm.set_df_property(\"loan_account\",\"reqd\",0)\n        frm.set_df_property(\"interest_income_account\",\"reqd\",0)\n        frm.set_df_property(\"penalty_income_account\",\"reqd\",0)\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Appointment Letter Template",
  "enabled": 1,
  "modified": "2023-05-16 11:20:13.122297",
  "module": null,
  "name": "Appointment Letter Template -Form",
  "script": "frappe.ui.form.on('Appointment Letter Template', \n{\n\trefresh(frm)\n\t{\n// \t\tfrm.set_df_property(\"terms\",\"hidden\",1)\n        frm.set_df_property(\"terms\",\"reqd\",0)\n        frm.set_df_property(\"introduction\",\"hidden\",1)\n        frm.set_df_property(\"introduction\",\"reqd\",0)\n        frm.set_value(\"introduction\",\"nothing\")\n        \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 0,
  "modified": "2023-03-23 09:00:54.946369",
  "module": null,
  "name": "p1",
  "script": "frappe.ui.form.on('Purchase Order', {\n\trefresh(frm) {\n\t    console.log(\"ssssssss\")\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Incentive",
  "enabled": 0,
  "modified": "2023-03-23 09:00:54.986500",
  "module": null,
  "name": "incentive- form",
  "script": "frappe.ui.form.on('Incentive', {\n\tonload(frm) {\n\t     console.log(\"aaaaaa\",frm.doc.employee)\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Invoice",
  "enabled": 1,
  "modified": "2023-06-05 18:22:47.552265",
  "module": null,
  "name": "Purchase Invoice",
  "script": "\nvar qty_aportion=[]\n\nfrappe.ui.form.on('Purchase Invoice', {\n\trefresh(frm) \n\t{\n\t    \n\t    frm.fields_dict.items.grid.get_field('sales_order_id').get_query = function(doc, cdt, cdn) {\n                  return {\n                    filters: {\n                      'company': 'Lamit'\n                    }\n                  };\n                };\n\t\t// your code here\n\t},\n\t\n\tonload(frm)\n\t{\n\t     if(frm.is_new())\n            \n                 {\n           \n            \n            \n                console.log(frm.doc.posting_date,\"------------\")\n                var g=flt(frm.doc.posting_date.split(\"-\")[1])\n                console.log(g,\"--------------\")\n                \n                // \n                \n                if(g==\"1\")\n                {\n                frm.set_value(\"month\",\"January\")\n                }\n                \n                else if(g==\"2\")\n                {\n                frm.set_value(\"month\",\"February\")\n                }\n                else if(g==\"3\")\n                {\n                frm.set_value(\"month\",\"March\")\n                }\n                else if(g==\"4\")\n                {\n                frm.set_value(\"month\",\"April\")\n                }\n                else if(g==\"5\")\n                {\n                frm.set_value(\"month\",\"May\")\n                }\n                else if(g==\"6\")\n                {\n                frm.set_value(\"month\",\"June\")\n                }\n                else if(g==\"7\")\n                {\n                frm.set_value(\"month\",\"July\")\n                }\n                else if(g==\"8\")\n                {\n                frm.set_value(\"month\",\"August\")\n                }\n                else if(g==\"9\")\n                {\n                frm.set_value(\"month\",\"September\")\n                }\n                else if(g==\"10\")\n                {\n                frm.set_value(\"month\",\"October\")\n                }\n                else if(g==\"11\")\n                {\n                frm.set_value(\"month\",\"November\")\n                }\n                else if(g==\"12\")\n                {\n                frm.set_value(\"month\",\"December\")\n                }\n                \n                \n                \n                \n             \n    \t    \n        \t    if(frm.doc.update_stock==1)\n        \t    {\n        \t        frappe.call\n        \t        ({\n        \t            method:'frappe.client.get_list',\n        \t            args:\n        \t            {\n        \t                'doctype':'Company',\n        \t                'fields':['name','default_inventory_account'],\n        \t                filters:\n        \t                {\n        \t                    \n        \t                    name:frm.doc.company\n        \t                }\n        \t            },\n        \t            \n        \t            callback:function(r)\n        \t            {\n        \t                if(r)\n        \t                {\n        \t                    \n        \t                   \n        \t                    \n        \t                    var default_inventory_account=r.message[0].default_inventory_account\n        \t                    \n        \t                    $.each(frm.doc.items,function(i,v)\n                                {\n                                    v.expense_account=r.message[0].default_inventory_account  \n                                    // console.log(\"YES\")\n                                })\n        \t                }\n        \t            }\n        \t        })\n        \t    }\n    \t\n    \t\t    \n            }\n\t},\n\t\n\t\n\n\n\n\n// after_save(frm)\n// {\n    \n//     if(frm.doc.company==\"Lamit\")\n//     {\n//     // Example array of products\n//             var products =frm.doc.items\n            \n//             var type=frm.doc.purchase_type\n//             var usd_rate=frm.doc.conversion_rate\n//             var totalqty=frm.doc.total_qty\n//             var grand_total_usd=frm.doc.total\n//             // var t=frm.doc.items\n            \n//             function findDuplicatesAndAddQuantities(productsArray) {\n//               var duplicates = {};\n//             //   var duplicates1 = {};\n            \n            \n            \n//               for (var i = 0; i < productsArray.length; i++) \n//               {\n//                 var product = productsArray[i];\n//                 // console.log(product,\"product\")\n//                 var productId = product.item_code;\n//                 // console.log(productId,\"productId\")\n            \n                \n//                 if (duplicates[productId]) \n//                 {\n                  \n//                   duplicates[productId].qty += product.qty;\n//                 //   duplicates[productId].amount += product.amount;\n//                 } \n//                 else \n//                 {\n                 \n//                   duplicates[productId] ={\n//                     item_code: product.item_code,\n//                     // name: product.name,\n//                     qty: product.qty,\n//                     usdrate:product.rate,\n//                     usdamount:product.amount,\n//                     inrrate:product.base_rate,\n//                     inramount:product.base_amount,\n//                     parent:product.parent,\n//                     purchase_type:type,\n//                     total_qty:totalqty,\n//                     usd_rate:usd_rate,\n//                     aportion:(product.qty/totalqty)*100,\n//                     value_based_aportion:(product.amount/grand_total_usd)*100\n//                   };\n//                 }\n//               }\n            \n//               return Object.values(duplicates);\n//             }\n\n\n//  var duplicateProducts = findDuplicatesAndAddQuantities(products);\n//  console.log(duplicateProducts);\n \n \n \n \n \n// //   $.each(duplicateProducts,function(i,v)\n// //      {\n// //         frappe.db.insert\n// //             ({\n// //                       \"doctype\": \"Landing Cost Calculation\",\n// //                       \"item\": v.item_code,\n// //                       \"purchase_invoice_id\": frm.doc.name,\n// //                       \"purchase_type\": frm.doc.purchase_type,\n// //                       \"date\":frm.doc.posting_date,\n// //                       \"month\":frm.doc.month,\n// //                       \"number_of_pieces\":v.qty,\n// //                       \"qty_per_aportion\":v.aportion.toFixed(2),\n// //                       \"usd_rate_per_pcs\":v.usdrate.toFixed(2),\n// //                       \"total_invoice_value_usd\":v.usdamount.toFixed(2),\n// //                       \"usd_rate_in_customs_bill\":frm.doc.conversion_rate.toFixed(2),\n// //                       \"inr_rate_1_usd\":v.inrrate.toFixed(2),\n// //                       \"total_inr_1_usd\":v.inramount.toFixed(2),\n// //                       \"total_invoice_value\":frm.doc.total,\n// //                     //   \"value_based_aportion\":value_based_aportion.toFixed(2)\n                       \n// //             });                                           \n       \n// //      })\n//     //  console.log(qty_aportion)\n                                                      \n                                                       \n                                                        \n \n \n \n//     }\n\n// }\n\n\non_submit(frm)\n{\n    \n    // var items = \n    //     [\n    //       { name: 'item1', qty: 1, amount: 10 },\n    //       { name: 'item2', qty: 2, amount: 5 },\n    //       { name: 'item1', qty: 3, amount: 20 },\n    //       { name: 'item3', qty: 1, amount: 15 },\n    //       { name: 'item2', qty: 2, amount: 8 }\n    //     ];\n    \n    \nif(frm.doc.company==\"Lamit\")\n    {\n   \n            var type=frm.doc.purchase_type\n            var usd_rate=frm.doc.conversion_rate\n            var totalqty=frm.doc.total_qty\n            var grand_total_usd=frm.doc.total\n    \n    \n    var items=frm.doc.items\n    \n    function mergeDuplicates(arr) {\n  var mergedItems = {};\n\n  // Iterate through the array\n  for (var i = 0; i < arr.length; i++) {\n    var item = arr[i];\n\n    \n    if (mergedItems.hasOwnProperty(item.item_code)) \n    {\n     \n      mergedItems[item.item_code].qty += item.qty;\n      mergedItems[item.item_code].amount += item.amount;\n      mergedItems[item.item_code].base_amount += item.base_amount;\n    } \n    else \n    {\n      \n      mergedItems[item.item_code] = { \n          \n          item_code: item.item_code, \n          qty: item.qty, \n          amount: item.amount ,\n          base_amount:item.base_amount,\n          rate:item.rate,\n          base_rate:item.base_rate,\n        //   aportion:(item.qty/totalqty)*100,\n        \n          \n      };\n    }\n  }\n\n  // Convert the mergedItems object back into an array\n  var mergedArray = Object.values(mergedItems);\n\n  return mergedArray;\n}\n\n// Example usage\n\n\nvar mergedItems = mergeDuplicates(items);\nconsole.log(mergedItems);\n\n\n\n  $.each(mergedItems,function(i,v)\n     {\n         \n        \n        frappe.db.insert\n            ({\n                      \"doctype\": \"Landing Cost Calculation\",\n                      \"item\": v.item_code,\n                      \"purchase_invoice_id\": frm.doc.name,\n                      \"purchase_type\": frm.doc.purchase_type,\n                      \"date\":frm.doc.posting_date,\n                      \"month\":frm.doc.month,\n                      \"number_of_pieces\":v.qty,\n                      \"qty_per_aportion\":((v.qty/frm.doc.total_qty)*100).toFixed(2),\n                      \"usd_rate_per_pcs\":v.rate.toFixed(2),\n                      \"total_invoice_value_usd\":v.amount.toFixed(2),\n                      \"usd_rate_in_customs_bill\":frm.doc.conversion_rate.toFixed(2),\n                      \"inr_rate_1_usd\":v.base_rate.toFixed(2),\n                      \"total_inr_1_usd\":v.base_amount.toFixed(2),\n                      \"total_invoice_value\":frm.doc.total,\n                      \"value_based_aportion\":((v.base_amount/frm.doc.base_total)*100).toFixed(2),\n                      \"total_qty\":frm.doc.total_qty,\n                      \"total_invoice_inr_value\":frm.doc.base_total\n                       \n            });                                           \n       \n     })\n\n\n\n\n}\n\n},\n\nposting_date:function(frm)\n{\n\n    if(frm.is_new())\n            \n                 {\n           \n            \n            \n                console.log(frm.doc.posting_date,\"------------\")\n                var g=flt(frm.doc.posting_date.split(\"-\")[1])\n                console.log(g,\"--------------\")\n                \n                // \n                \n                if(g==\"1\")\n                {\n                frm.set_value(\"month\",\"January\")\n                }\n                \n                else if(g==\"2\")\n                {\n                frm.set_value(\"month\",\"February\")\n                }\n                else if(g==\"3\")\n                {\n                frm.set_value(\"month\",\"March\")\n                }\n                else if(g==\"4\")\n                {\n                frm.set_value(\"month\",\"April\")\n                }\n                else if(g==\"5\")\n                {\n                frm.set_value(\"month\",\"May\")\n                }\n                else if(g==\"6\")\n                {\n                frm.set_value(\"month\",\"June\")\n                }\n                else if(g==\"7\")\n                {\n                frm.set_value(\"month\",\"July\")\n                }\n                else if(g==\"8\")\n                {\n                frm.set_value(\"month\",\"August\")\n                }\n                else if(g==\"9\")\n                {\n                frm.set_value(\"month\",\"September\")\n                }\n                else if(g==\"10\")\n                {\n                frm.set_value(\"month\",\"October\")\n                }\n                else if(g==\"11\")\n                {\n                frm.set_value(\"month\",\"November\")\n                }\n                else if(g==\"12\")\n                {\n                frm.set_value(\"month\",\"December\")\n                }\n                \n                 }\n                 \n}\n\n\n\n\n\n\n\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item Price",
  "enabled": 1,
  "modified": "2023-03-23 09:00:55.072746",
  "module": null,
  "name": "Item price",
  "script": "frappe.ui.form.on('Item Price', {\n\tonload(frm)\n\t{\n\t    \n\t    if(frm.doc.price_list==\"Lamit Buying\")\n\t    {\n\t        frm.set_df_property('sub_dealer_price',  'hidden',1); \n\t        frm.set_df_property('dealer_delivery_price',  'hidden',1);\n\t        frm.set_df_property('mrp',  'hidden',1);\n\t        frm.set_df_property('mop',  'hidden',1);\n\t         frm.set_df_property('super_stockist_price',  'hidden',1);\n\t        \n\t        \n\t    }\n\t    \n\t    else if(frm.doc.price_list==\"Super Stockist Selling\")\n\t    {\n\t         frm.set_df_property('sub_dealer_price',  'hidden',0); \n\t        frm.set_df_property('dealer_delivery_price',  'hidden',0);\n\t        frm.set_df_property('mrp',  'hidden',1);\n\t        frm.set_df_property('mop',  'hidden',0);\n\t        \n\t    }\n\t    \n\t    else if(frm.doc.price_list==\"Super Stockist Buying Lamit Selling\")\n\t    {\n\t         frm.set_df_property('sub_dealer_price',  'hidden',1); \n\t        frm.set_df_property('dealer_delivery_price',  'hidden',1);\n\t        frm.set_df_property('mrp',  'hidden',1);\n\t        frm.set_df_property('mop',  'hidden',1);\n\t        frm.set_df_property('super_stockist_price',  'hidden',1);\n\t        \n\t    }\n\t\t// your code here\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 1,
  "modified": "2023-09-23 15:39:18.569572",
  "module": null,
  "name": "Lead -Form",
  "script": "var u=[];\n\nvar employee_name;\nvar employee;\nvar email1;\n\nvar t1;\nvar f1=[];\nvar u1;\nvar g1;\nvar date;\nvar owner;\nvar t;\nvar mobile_number_list=[];\n\nvar g1;\nvar g2;\n\nvar customer_name=[];\nvar date=[];\nvar time=[];\nvar locations=[];\nvar data;\nvar trigger_count=1;\nvar sales_officer;\nvar sales_officer_name;\nvar h1;\n\nvar am_name=[];\nvar am_subject=[];\nvar am_contact_time=[];\nvar am_customer_name=[];\nvar am_customer_location=[];\n\nvar pm_name=[];\nvar pm_subject=[];\nvar pm_contact_time=[]   ;  \nvar pm_customer_name=[];\nvar pm_customer_location=[];\nvar address_line1\nvar address_line2\nvar city\nvar pin\nvar allowed_area=[]\nvar change_area\nvar change_lac\nvar current_lac\nvar update_address=undefined\nvar new_doc=\" \"\nvar push_sales_officer\nvar push_sales_officer_name\nvar push_sales_officer_email\nvar event_add=[]\nvar event_remove=[]\n\n\n    frappe.ui.form.on('Lead',\n    {\n        onload(frm)\n        {\n            \n             h1=frappe.session.user;\n             \n             \n             \n             \n             \n             \n             \n             \n             \n            // console.log(\"IOP\")\n            \n            if(frm.doc.first_name==undefined)\n            {\n                new_doc=\"true\"\n            }\n            else\n            {\n                new_doc=\" \"\n            }\n            \n            setTimeout(() =>\n            {\n    \t\t\tfrm.remove_custom_button(\"Customer\", 'Create');\n    \t\t\tfrm.remove_custom_button(\"Quotation\", 'Create'); \n    \t\t\tfrm.remove_custom_button(\"Prospect\", 'Create'); \n    \t\t\tfrm.remove_custom_button(\"Opportunity\",'Create');\n    \t\t\tfrm.remove_custom_button(\"Add to Prospect\",'Action');\n\t\t    },1000)\n            \n            \n            \n            change_lac=undefined\n            change_area=undefined\n            frm.trigger(\"field_filters\");\n            frm.trigger(\"basic_settings\");\n            frm.trigger(\"allowed_area\");\n            \n            let n1=cur_frm.doc.enter_meeting_time;\n            owner=frm.doc.owner;\n            var date=frappe.datetime.nowdate()\n            \n            if(frm.doc.lac !=undefined)\n            {\n                current_lac=frm.doc.lac\n            }\n            else\n            {\n                current_lac=undefined\n            }\n            \n            frappe.call\n              ({\n                                                                                                \n                                method: \"frappe.client.get_list\",\n                                args: \n                                    {\n                                        doctype: \"Employee\",\n                                        \n                                        filters: { 'user_id':h1},\n                                        \n                                        'fields': ['designation','name','employee_number'],\n                                    },\n                                    \n                                    callback: function(res)\n                                        {\n                                            if(res.message[0])\n                                            { \n                                                if (frm.is_new()) \n                                                {\n                                                    \n                                                    \n                                                    frm.set_value(\"lead_owners\",res.message[0].name)\n                                                    frm.set_value(\"created_by\",res.message[0].name)\n                                                    \n                                                    \n                                                }\n                                                \n                                               \n                                            }\n                                        }\n                });\n        },\n\n        refresh:function(frm,cdt,cdn)\n        { \n            \n            \n            // frappe.call\n            //   ({\n                                                                                                \n            //                     method: \"frappe.client.get_list\",\n            //                     args: \n            //                         {\n            //                             doctype: \"Employee\",\n                                        \n            //                             filters: { 'user_id':h1},\n                                        \n            //                             'fields': ['designation','name','employee_number'],\n            //                         },\n                                    \n            //                         callback: function(res)\n            //                             {\n            //                                 if(res.message[0])\n            //                                 { \n            //                                     if (frm.is_new()) \n            //                                     {\n                                                    \n                                                    \n            //                                         frm.set_value(\"lead_owners\",res.message[0].name)\n                                                    \n                                                    \n            //                                     }\n                                                \n                                               \n            //                                 }\n            //                             }\n            //     });\n            \n            \n            \n            \n            // console.log(\"jiji\")\n                \n                frm.fields_dict.customer_requirements.grid.get_field('product').get_query = function(doc, cdt, cdn) {\n                  return {\n                    filters: {\n                      'has_variants': '0'\n                    }\n                  };\n                };\n            \n            \n            \n            \n            \n            \n            \n             $('li').removeClass(\"disabled\");\n           \n           \n//           frappe.route_options = {\"interview\": frm.doc.name};\n// \t\t\tdocument = frappe.new_doc(\"Job Offer\");\n// \t\t\tfrappe.set_route(\"Form\", \"Job Offer\", document.name); \n\n\n        // if(frm.is_new)\n        // {\n        //     console.log(\"KKKK\")\n        // }\n\n        if (!frm.is_new())\n            {\n                 console.log(\"HI\")\n                 frm.add_custom_button('Create Task', () => \n                 {\n                     \n                    frappe.route_options = {\"select_lead_name\": frm.doc.name};\n            \t\t\tdocument = frappe.new_doc(\"Task\");\n            \t\t\tfrappe.set_route(\"Form\", \"Task\", document.name); \n                     \n                 })\n                 \n                  if (frm.doc.lead_category==\"Shop\")\n          \n                    {\n                        if (frm.doc.created_shop1==0)\n                        {\n                        \n                             frm.add_custom_button('Converted To Shop', () => \n                             {\n                                 \n                                frappe.db.insert\n                                ({\n                                       \"doctype\": \"Shop\",\n                                       \"organization_name\": frm.doc.first_name,\n                                       \"mobile\": frm.doc.mobile_no,\n                                       \"email\":frm.doc.email_id,\n                                       \"lead_id\":frm.doc.name\n                                });\n                                \n                                frappe.db.set_value('Lead', frm.doc.name, \"created_shop1\",1)\n            \n                                 \n                             })\n                        }\n                    }\n                    \n                    // if (frm.doc.lead_category==\"Contractor\")\n                  \n                    // {\n                    //     if (frm.doc.created_contractor==0)\n                    //     {\n                        \n                    //      frm.add_custom_button('Converted To Contractor', () => \n                    //      {\n                             \n                    //         frappe.db.insert({\n                    //               \"doctype\": \"Contractor\",\n                    //               \"name1\": frm.doc.first_name,\n                    //               \"mobile\": frm.doc.mobile_no,\n                    //               \"email\":frm.doc.email_id,\n                    //               \"lead_id\":frm.doc.name\n                    //             });\n                    //             frappe.db.set_value('Lead', frm.doc.name, \"created_contractor\",1)\n        \n                             \n                    //      })\n                    //     }\n                    // }\n                    \n                    // if (frm.doc.lead_category==\"Engineer\")\n          \n                    //  {\n                    //         if (frm.doc.created_engineer==0)\n                    //         {\n                            \n                    //          frm.add_custom_button('Converted To Engineer', () => \n                    //          {\n                                 \n                    //             frappe.db.insert({\n                    //                   \"doctype\": \"Engineer\",\n                    //                   \"name1\": frm.doc.first_name,\n                    //                   \"mobile\": frm.doc.mobile_no,\n                    //                   \"email\":frm.doc.email_id,\n                    //                   \"lead_id\":frm.doc.name\n                    //                 });\n                    //                 frappe.db.set_value('Lead', frm.doc.name, \"created_engineer\",1)\n            \n                                 \n                    //          })\n                    //         }\n                    // }\n                 \n                 \n                 \n            }\n            \n             frm.set_query(\"assign_to_marketing_officer\", function() \n            {\n    \t\t\treturn {\n    \t\t\t\t\"filters\": {\n    \t\t\t\t\t\"designation\":\"Marketing Officer\",\n    \t\t\t\t}\n    \t\t\t};\n    \t\t});\n    \t\t\n    \t\tfrm.set_query(\"assigned_to1\", function() \n            {\n    \t\t\treturn {\n    \t\t\t\t\"filters\": {\n    \t\t\t\t\t\"designation\":\"Sales Officer\",\n    \t\t\t\t}\n    \t\t\t};\n    \t\t});\n    \t\t\n    \t\tfrm.set_query(\"emp_id\", function() \n            {\n    \t\t\treturn {\n    \t\t\t\t\"filters\": {\n    \t\t\t\t\t\"designation\":\"Sales Officer\",\n    \t\t\t\t}\n    \t\t\t};\n    \t\t});\n            \n            \n             frm.change_custom_button_type('Create Task', null, 'primary');\n            \n            \n            \n            setTimeout(() =>\n            {\n    \t\t\tfrm.remove_custom_button(\"Customer\", 'Create');\n    \t\t\tfrm.remove_custom_button(\"Quotation\", 'Create'); \n    \t\t\tfrm.remove_custom_button(\"Prospect\", 'Create'); \n    \t\t\tfrm.remove_custom_button(\"Opportunity\",'Create');\n    \t\t\tfrm.remove_custom_button(\"Add to Prospect\",'Action');\n\t\t    }, 1000);\n\t\t    \n\t\t    \n\t\t    \n\t\t    \n\t\t    \n\t\t    address_line1=frm.doc.address_line1\n\t\t    address_line2=frm.doc.address_line2\n\t\t    city=frm.doc.city\n\t\t    pin=frm.doc.pin_code\n\n\t\t  //  if(frm.doc.first_name !=undefined)\n\t\t  //  {\n    // \t\t    if(frappe.user.has_role(\"Marketing Officer\"))\n    // \t\t    {\n    //     \t\t    frm.add_custom_button('Assign To Sales Officer', () =>\n    //                 {   \n    //                         frm.trigger(\"check_availability\");\n    //                         trigger_count=1;\n    //                 });\n    // \t\t    }\n\t\t  //  }\n              //  $('input[data-fieldname=\"check_availability\"]').css(\"background-color\",\"red\") \n            // frm.change_custom_button_type('Assign To Sales Officer', null, 'primary');\n            // document.querySelectorAll(\"[data-fieldname='Assign To Sales Officer']\").style.backgroundColor =\"red\";\n            \n            h1=frappe.session.user;\n              \n              frappe.call\n              ({\n                                                                                                \n                                method: \"frappe.client.get_list\",\n                                args: \n                                    {\n                                        doctype: \"Employee\",\n                                        \n                                        filters: { 'user_id':h1},\n                                        \n                                        'fields': ['designation','name','employee_number'],\n                                    },\n                                        callback: function(res)\n                                        {\n                                            if(res.message[0])\n                                            { \n                                                if (frm.is_new()) \n                                                {\n                                                    frm.set_value(\"lead_owners\",res.message[0].name)\n                                                }\n                                                \n                                                if(res.message[0].designation==\"Sales Officer\" || res.message[0].designation==\"Marketing Officer\" )\n                                                {\n                                                   \tfrm.remove_custom_button(\"Assign To Marketing Officer\");\n                                                }\n                                            }\n                                        }\n                });\n\n            set_css(frm);\n            frm.get_field(\"lead_assign_table\").grid.cannot_add_rows = true;\n            $('*[data-fieldname=\"lead_assign_table\"]').find('.grid-remove-rows').hide();\n            cur_frm.fields_dict['lead_assign_table'].grid.wrapper.find('.btn-open-row').hide();\n            frm.get_field(\"meeting_updates2\").grid.cannot_add_rows = true;\n            $('*[data-fieldname=\"meeting_updates2\"]').find('.grid-remove-rows').hide();\n            cur_frm.fields_dict['meeting_updates2'].grid.wrapper.find('.btn-open-row').hide();\n            //  frm.get_field(\"sales_executive_availability\").grid.cannot_add_rows = true;\n            // $('*[data-fieldname=\"sales_executive_availability\"]').find('.grid-remove-rows').hide();\n            // cur_frm.fields_dict['sales_executive_availability'].grid.wrapper.find('.btn-open-row').hide();\n            // cur_frm.fields_dict['task_table1'].grid.wrapper.find('.btn-open-row').hide();\n    \n            var g1=frm.doc.next_contact_employee\n            setTimeout(() =>\n            {\n                \n            frm.remove_custom_button('Prospect','Create');\n            frm.remove_custom_button('Opportunity','Create');\n            frm.remove_custom_button('Add to Prospect','Action');\n       \n            }, 10);\n\n            // if (!frm.is_new())\n            // {\n            //      frm.add_custom_button('Assign To Marketing Officer', () => \n            //      {\n            //         //   date=frappe.datetime.nowdate()\n            //         //   frappe.call\n            //         //   ({\n            //         //                 method: 'frappe.client.get_list',\n            //         //                 args:\n            //         //                     {\n            //         //                     'doctype': 'Employee',\n            //         //                     'fields': ['employee_name','sales_area'],\n            //         //             \t\tfilters:\n            //         //                     \t{\n            //         //                             // designation:\"Marketing Officer\",\n                                                \n            //         //                             'designation': [\"in\", ['Marketing Officer','Customer Care Executive']]\n            //         //                             // designation:\"Customer Care Executive\",\n            //         //             \t       \t}               \n            //         //             \t\t},\n            //         //                 callback: function(r)\n            //         //                 {\n            //         //                     $.each(r.message, function(i, d)\n            //         //                     {\n            //         //                         mobile_number_list.push(d.employee_name)\n            //         //                     })\n            //         //                     var d = new frappe.ui.Dialog\n            //         //                     ({\n            //         //                         title: 'Select Marketing Officer Or Customer Care Executive',\n            //         //                         'fields': \n            //         //                         [\n            //         //                             {'fieldname': 'ht_assign_to', 'fieldtype': 'HTML',label: __('Company')},\n            //         //                                  {\"fieldtype\":\"Column Break\",},\n            //         //                             {   \"fieldtype\": \"Check\",\n            //         //                                 \"label\": \"Marketing Officer\" ,\n            //         //                                 \"fieldname\": \"chck_marketing_officer\",\n            //         //                                 \t'onchange': () =>\n            //         //                                      {  \n            //         //                                           var field = d.get_field(\"chck_marketing_officer\");\n            //         //                             // field.df.options=\n            //         //                             // field.refresh();\n            //         //                                         console.log(\"bbbb\",field)  \n            //         //                                         //   var values = d.get_values();\n            //         //                                         //   console.log(\"bbbb\",values.chck_marketing_officer)  \n            //         //                                      },\n            //         //                             },\n            //         //                                  {\"fieldtype\":\"Column Break\",},\n            //         //                             {\"fieldtype\": \"Check\", \"label\": \"Customer Care Executive\" ,\"fieldname\": \"chck_marketing_officer\"},  \n            //         //                                  {\"fieldtype\":\"Section Break\",},\n            //         //                             {\n            //         //                                 \t\tfieldtype: \"Link\",\n            //         //                                 \t\tfieldname: \"marketing_officer1\",\n            //         //                                 \t\tlabel: __(\"Marketing Officer\"),\n            //         //                                 \t\toptions:\"Employee\",\n            //         //                                 \t\tdefault:sales_officer,\n            //         //                                     \t'depends_on': \"d.fields_dict.chck_marketing_officer.value\"\n\n            //         //                             },\n            //         //                             {          \"fieldtype\": \"Select\", \n            //         //                                         \"label\": \"Customer Care Executive\" , \n            //         //                                         \"fieldname\": \"customer_care_executive1\",\n            //         //                                         \"options\":mobile_number_list,\n            //         //                                         \"reqd\": 1\n                                                    \n            //         //                             },\n            //         //                                  {\"fieldtype\":\"Column Break\",},\n                                                \n            //         //                             {\n            //         //                                 \t\tfieldtype: \"Data\",\n            //         //                                 \t\tfieldname: \"marketing_officer_name\",\n            //         //                                 \t\tlabel: __(\"Name\"),\n            //         //                                 \t\tdefault:sales_officer_name,\n            //         //                                 \t\tread_only:1\n            //         //                             },\n            //         //                              {\n            //         //                                 \t\tfieldtype: \"Data\",\n            //         //                                 \t\tfieldname: \"customer_care_executive_name\",\n            //         //                                 \t\tlabel: __(\"Name\"),\n            //         //                                 \t\tdefault:sales_officer_name,\n            //         //                                 \t\tread_only:1\n            //         //                             },\n            //         //                                 {\"fieldtype\":\"Section Break\",},\n            //         //                             {\"fieldtype\": \"Date\", \"label\": \"Contact Date\" , \"fieldname\": \"date\",\t\"reqd\": 1},\n            //         //                             {\"fieldtype\": \"Data\", \"label\": \"Subject\" , \"fieldname\": \"subject\",\t\"reqd\": 1},\n            //         //                             {\"fieldtype\": \"SmallText\", \"label\": \"remark\" , \"fieldname\": \"subject\",\t\"reqd\": 1},\n            //         //                         ],\n            //         //                         primary_action_label: 'Submit',\n            //         //                         primary_action(values)\n            //         //                         {\n            //         //                              frappe.call\n            //         //                              ({\n            //         //                                     method: 'frappe.client.get',\n            //         //                                     args:\n            //         //                                     {\n            //         //                                         'doctype': 'Employee',\n            //         //                                         // 'fields': ['employee_name','sales_area','name'],\n            //         //                                 \t\tfilters:\n            //         //                                         \t{\n            //         //                                                 employee_name:values.assign_to,\n            //         //                                               'designation': [\"in\", ['Marketing Officer','Customer Care Executive']]\n            //         //                                 \t       \t}               \n            //         //                                 \t\t},\n            //         //                                     callback: function( r)\n            //         //                                     {\n            //         //                             //             var time_24=0\n                      \n            //         //                             // \t\t\tif(values.time1==\"PM\")\n            //         //                             // \t\t\t{\n            //         //                             // \t\t\t      time_24=flt(12.00+flt((values.next_contact_time).replace(\":\",\".\"),2),2)\n            //         //                             // \t\t\t}\n            //         //                             // \t\t\telse\n            //         //                             // \t\t\t{\n            //         //                             // \t\t\t    time_24=values.next_contact_time\n            //         //                             // \t\t\t}\n                                                \t\t\t\n            //         //                                         frappe.db.insert\n            //         //                                         ({\n            //         //                                                   \"doctype\": \"Task\",\n            //         //                                                   \"subject\": \"Follow Up Lead\"+\"\"+\"-\"+frm.doc.lead_name,\n            //         //                                                   \"assign\":r.message.name,\n            //         //                                                   \"due_date\":values.date,\n            //         //                                                   \"description\":values.subject,\n            //         //                                                   \"lead\":frm.doc.name,\n            //         //                                                   \"lead_name\":frm.doc.lead_name,\n            //         //                                                   \"lead_location\":frm.doc.lac,\n            //         //                                                  // \"time_in_24\":parseFloat(time_24).toFixed(2)       \n            //         //                                                 //   \"last_name\": frm.doc,last_name\n            //         //                                         });\n                                                            \n            //         //                                         if(r.message.designation==\"Marketing Officer\")\n            //         //                                         {\n            //         //                                             frm.set_value(\"assign_to_marketing_officer\",r.message.name)\n            //         //                                         }\n            //         //                                         else if(r.message.designation==\"Customer Care Executive\")\n            //         //                                         {\n            //         //                                              frm.set_value(\"assign_to_customer_care_executive\",r.message.name)\n            //         //                                         }\n                                                            \n                                                            \n            //         //                                         // frm.set_value(\"status\",\"Assigned\")\n                                                            \n            //         //                                          var child = cur_frm.add_child(\"lead_assign_table\");\n            //         //                                          frappe.model.set_value(child.doctype, child.name, \"employee\",r.message.employee_name);\n            //         //                                          frappe.model.set_value(child.doctype, child.name, \"meeting_date\",values.date);\n            //         //                                          frappe.model.set_value(child.doctype, child.name, \"remark\",values.subject);\n            //         //                                          frappe.model.set_value(child.doctype, child.name, \"date\",date);\n            //         //                                          frappe.model.set_value(child.doctype, child.name, \"designation\",r.message.designation);\n            //         //                                          cur_frm.refresh_field(\"lead_assign_table\");\n            //         //                                          frm.save();            \n            //         //                                     }\n            //         //                              })\n                                                \n                                                 \n            //         //                               d.hide();\n                                                 \n                                                  \n                                            \n                                                 \n            //         //                          }\n                                            \n            //         //                     });\n                                        \n            //         //                     d.fields_dict.ht_assign_to.$wrapper.html('Assign To :');\n            //         //                      d.$wrapper.find('.modal-content').css({\"width\":\"700px\"});\n            //         //                     d.show();\n                                        \n                                        \n                                        \n                                    \n            //         //                  mobile_number_list=[]\n                                     \n                                       \n                  \n            //         // \t\t\t}\n                       \n            //         //             });\n                    \n                    \n                    \n            //         var d = new frappe.ui.Dialog\n            //                             ({\n            //                                 title: 'Select Marketing Officer Or Customer Care Executive',\n            //                                 'fields': \n            //                                 [\n                                                \n            //                                     {           \"fieldtype\": \"Link\", \n            //                                                 \"label\": \"Customer Care Executive\" , \n            //                                                 \"fieldname\": \"customer_care_executive1\",\n            //                                                 \"options\":\"Employee\",\n            //                                                 // \"filters\":{\"designation\":\"Customer Care Executive\"},\n                                                            \n            //                                                  'onchange':()=>\n            //                                                       {\n            //                                                           console.log(d.fields_dict.customer_care_executive1.value)\n            //                                                             frappe.call\n            //                                                               ({\n            //                                                                             method: 'frappe.client.get',\n            //                                                                             args:\n            //                                                                                 {\n            //                                                                                 'doctype':'Employee',\n            //                                                                                 // 'fields': ['name,\"employee_name'],\n            //                                                                         \t\tfilters:\n            //                                                                                 \t{\n            //                                                                                          'name':d.fields_dict.customer_care_executive1.value,\n            //                                                                         \t       \t}  \n            //                                                                                 },\n            //                                                                                 callback:function(r)\n            //                                                                                     {\n            //                                                                                         if(r)\n            //                                                                                         {\n            //                                                                                             console.log(r.message.employee_name,\"+++++++++++++++\")\n                                                                                                        \n            //                                                                                             d.fields_dict.employee_name.set_value(r.message.employee_name);\n            //                                                                                             d.fields_dict.employee_name.refresh();\n                                                                                                        \n            //                                                                                         }\n            //                                                                                     }\n            //                                                               })\n            //                                                       }\n                                                    \n            //                                     },   \n            //                                     {           \"fieldtype\": \"Data\", \n            //                                                 \"label\": \"Employee Name\" , \n            //                                                 \"fieldname\": \"employee_name\",\n                                                            \n                                                            \n                                                    \n            //                                     },   \n                                                     \n                                               \n                                                    \n            //                                      {\"fieldtype\":\"Column Break\",},\n                                                 \n                                                 \n                                                 \n            //                                     {           \"fieldtype\": \"Link\", \n            //                                                 \"label\": \"Marketing Officer\" , \n            //                                                 \"fieldname\": \"marketing_officer\",\n            //                                                 \"options\":\"Employee\",\n            //                                                 \"filters\":{\"designation\":\"Marketing Officer\"},\n                                                    \n            //                                     },  \n            //                                     {           \"fieldtype\": \"Data\", \n            //                                                 \"label\": \"Employee Name\" , \n            //                                                 \"fieldname\": \"employee_name1\",\n                                                            \n                                                            \n                                                    \n            //                                     }, \n                                                \n                                                \n            //                                     {\"fieldtype\":\"Section Break\",},\n                                                     \n                                                     \n                                                \n                                                \n            //                                     {\"fieldtype\": \"Date\", \"label\": \"Contact Date\" , \"fieldname\": \"date\",\t\"reqd\": 1},\n            //                                     {\"fieldtype\": \"Data\", \"label\": \"Subject\" , \"fieldname\": \"subject\",\t\"reqd\": 1},\n            //                                     {\"fieldtype\": \"SmallText\", \"label\": \"remark\" , \"fieldname\": \"subject\",\t\"reqd\": 1},\n            //                                 ],\n            //                                 primary_action_label: 'Submit',\n            //                                 primary_action(values)\n            //                                 {\n            //                                     //  frappe.call\n            //                                     //  ({\n            //                                     //         method: 'frappe.client.get',\n            //                                     //         args:\n            //                                     //         {\n            //                                     //             'doctype': 'Employee',\n            //                                     //             // 'fields': ['employee_name','sales_area','name'],\n            //                                     //     \t\tfilters:\n            //                                     //             \t{\n            //                                     //                     employee_name:values.assign_to,\n            //                                     //                   'designation': [\"in\", ['Marketing Officer','Customer Care Executive']]\n            //                                     //     \t       \t}               \n            //                                     //     \t\t},\n            //                                     //         callback: function( r)\n            //                                     //         {\n            //                                     // //             var time_24=0\n                      \n            //                                     // // \t\t\tif(values.time1==\"PM\")\n            //                                     // // \t\t\t{\n            //                                     // // \t\t\t      time_24=flt(12.00+flt((values.next_contact_time).replace(\":\",\".\"),2),2)\n            //                                     // // \t\t\t}\n            //                                     // // \t\t\telse\n            //                                     // // \t\t\t{\n            //                                     // // \t\t\t    time_24=values.next_contact_time\n            //                                     // // \t\t\t}\n                                                \t\t\t\n            //                                     //             frappe.db.insert\n            //                                     //             ({\n            //                                     //                       \"doctype\": \"Task\",\n            //                                     //                       \"subject\": \"Follow Up Lead\"+\"\"+\"-\"+frm.doc.lead_name,\n            //                                     //                       \"assign\":r.message.name,\n            //                                     //                       \"due_date\":values.date,\n            //                                     //                       \"description\":values.subject,\n            //                                     //                       \"lead\":frm.doc.name,\n            //                                     //                       \"lead_name\":frm.doc.lead_name,\n            //                                     //                       \"lead_location\":frm.doc.lac,\n            //                                     //                      // \"time_in_24\":parseFloat(time_24).toFixed(2)       \n            //                                     //                     //   \"last_name\": frm.doc,last_name\n            //                                     //             });\n                                                            \n            //                                     //             if(r.message.designation==\"Marketing Officer\")\n            //                                     //             {\n            //                                     //                 frm.set_value(\"assign_to_marketing_officer\",r.message.name)\n            //                                     //             }\n            //                                     //             else if(r.message.designation==\"Customer Care Executive\")\n            //                                     //             {\n            //                                     //                  frm.set_value(\"assign_to_customer_care_executive\",r.message.name)\n            //                                     //             }\n                                                            \n                                                            \n            //                                     //             // frm.set_value(\"status\",\"Assigned\")\n                                                            \n            //                                     //              var child = cur_frm.add_child(\"lead_assign_table\");\n            //                                     //              frappe.model.set_value(child.doctype, child.name, \"employee\",r.message.employee_name);\n            //                                     //              frappe.model.set_value(child.doctype, child.name, \"meeting_date\",values.date);\n            //                                     //              frappe.model.set_value(child.doctype, child.name, \"remark\",values.subject);\n            //                                     //              frappe.model.set_value(child.doctype, child.name, \"date\",date);\n            //                                     //              frappe.model.set_value(child.doctype, child.name, \"designation\",r.message.designation);\n            //                                     //              cur_frm.refresh_field(\"lead_assign_table\");\n            //                                     //              frm.save();            \n            //                                     //         }\n            //                                     //  })\n                                                \n                                                 \n            //                                     //   d.hide();\n                                                 \n                                                  \n                                            \n                                                 \n            //                                  }\n                                            \n            //                             });\n                                        \n                                        \n            //                             d.show();\n                    \n                    \n                    \n                    \n                    \n                    \n                    \n                     \n                    \n                     \n                     \n                      \n            //             })\n                    \n                    \n            // }       \n            // frm.change_custom_button_type('Assign To Marketing Officer', null, 'primary');\n\n            // if (!frm.is_new())\n            // {\n            //     frm.add_custom_button(\"Meeting Updates\", () =>\n            //     {\n            //         u1=frm.doc.meeting_updates\n            //         f1.push(u1)\n            //         var u2=frm.doc.next_contact_employee\n            //         let d = new frappe.ui.Dialog\n            //         ({\n            //                             title: 'Meeting Updates',\n            //                             fields: [\n                                            \n            //                                 {\n            //                                     label: 'Contact Date',\n            //                                     fieldname: 'contact_date',\n            //                                     fieldtype: 'Date',\n            //                                     default: frappe.datetime.nowdate()\n            //                                 },\n            //                                     {\"fieldtype\":\"Column Break\",},\n            //                                 {\n            //                                     label: 'Task',\n            //                                     fieldname: 'task',\n            //                                     fieldtype: 'Link',\n            //                                     options: 'Task',\n            //                                     filters:{\"status\":\"Open\",\"assigned_to\":frappe.session.user,\"lead\":frm.doc.name},\n            //                                   'onchange':()=>\n            //                                   {\n            //                                         frappe.call\n            //                                           ({\n            //                                                         method: 'frappe.client.get_list',\n            //                                                         args:\n            //                                                             {\n            //                                                             'doctype':'Task',\n            //                                                             'fields': ['subject'],\n            //                                                     \t\tfilters:\n            //                                                             \t{\n            //                                                                      'name':d.fields_dict.task.value,\n            //                                                     \t       \t}  \n            //                                                             },\n            //                                                             callback:function(r)\n            //                                                                 {\n            //                                                                     if(r.message[0])\n            //                                                                     {\n            //                                                                      d.fields_dict.subject1.set_value(r.message[0].subject);\n            //                                                                      d.fields_dict.subject1.refresh();\n            //                                                                     }\n            //                                                                     else\n            //                                                                     {\n            //                                                                         d.fields_dict.subject1.set_value(\"\");\n            //                                                                      d.fields_dict.subject1.refresh();\n            //                                                                     }\n            //                                                                 }\n            //                                           })\n                                                    \n            //                                     },\n            //                                 },\n            //                                     {\"fieldtype\":\"Column Break\",},\n            //                                 {\n            //                                     label: 'Subject',\n            //                                     fieldname: 'subject1',\n            //                                     fieldtype: 'Data',\n            //                                     // read_only:1,\n            //                                     //'fetch_from':'task1.subject',\n            //                                   // fetch_from:'task.subject',\n            //                                 },\n            //                                     {\"fieldtype\":\"Section Break\"},\n            //                                 {\n            //                                     \"description\": \"Format must be 12:00\",\n            //                                     label: 'From Time',\n            //                                     fieldname: 'from_time',\n            //                                     fieldtype: 'Data',\n            //                                     \"reqd\": 1\n            //                                 },\n                                            \n            //                                 {\"fieldtype\":\"Column Break\",},\n            //                                 {\n            //                                 \t\tfieldtype: \"Select\",\n            //                                 \t\tfieldname: \"time1\",\n            //                                 \t\tlabel: __(\"\"),\n            //                                 \t\tdefault:\"AM\",\n            //                                 \t\toptions:[\"AM\",\"PM\"],\n            //                                 },\n                                            \n            //                                     {\"fieldtype\":\"Column Break\"},\n            //                                 {\n            //                                     \"description\": \"Format must be 12:00\",\n            //                                     label: 'To Time',\n            //                                     fieldname: 'to_time',\n            //                                     fieldtype: 'Data',\n            //                                     \"reqd\": 1\n                                                \n            //                                 },\n                                            \n            //                                     {\"fieldtype\":\"Column Break\",},\n            //                                 {\n            //                                 \t\tfieldtype: \"Select\",\n            //                                 \t\tfieldname: \"time2\",\n            //                                 \t\tlabel: __(\"\"),\n            //                                 \t\tdefault:\"AM\",\n            //                                 \t\toptions:[\"AM\",\"PM\"],\n            //                                 },\n            //                                      {\"fieldtype\":\"Section Break\"},\n            //                                 {\n            //                                     label: 'Meeting Updates',\n            //                                     fieldname: 'meeting_updates',\n            //                                     fieldtype: 'Small Text',\n            //                                     \"reqd\": 1\n            //                                 },     \n            //                                      {\"fieldtype\":\"Section Break\",label:'Schedule Next Meeting',},\n            //                                  {\n            //                                     label: 'Next Contact Date',\n            //                                     fieldname: 'next_contact_date',\n            //                                     fieldtype: 'Date',\n                                                \n            //                                 },\n            //                                     {\"fieldtype\":\"Column Break\",},\n            //                                  {\n            //                                     label: 'Next Contact Time',\n            //                                     fieldname: 'next_contact_time',\n            //                                     fieldtype: 'Data',\n            //                                     \"description\": \"Format must be 12:00\",\n            //                                 },\n            //                                      {\"fieldtype\":\"Column Break\",},\n            //                                 {\n            //                                 \t\tfieldtype: \"Select\",\n            //                                 \t\tfieldname: \"time3\",\n            //                                 \t\tlabel: __(\"\"),\n            //                                 \t\tdefault:\"AM\",\n            //                                 \t\toptions:[\"AM\",\"PM\"],\n            //                                 },\n                                            \n            //                                      {\"fieldtype\":\"Section Break\",},\n            //                                 {\n            //                                     label: 'Subject',\n            //                                     fieldname: 'subject',\n            //                                     fieldtype: 'Data',\n            //                                 },\n                                            \n            //                             ],\n            //                             primary_action_label: 'Submit',\n            //                             primary_action(values)\n            //                             {\n                                            \n                                            \n            //                                 console.log(values.task)\n                                            \n            //                                 if(values.task)\n            //                                 {\n            //                                     frappe.db.set_value('Task',values.task, 'status', 'Closed')\n            //                                 }\n                                            \n                                            \n            //                                         frappe.call\n            //                                         ({\n            //                                             \"method\":\"frappe.client.get\",\n            //                                             \"args\":\n            //                                             {\n            //                                                 \"doctype\":\"Employee\",\n            //                                                 \"filters\":\n            //                                                 \t{\n            //                                                     \t\"user_id\":frappe.session.user,\n            //                                                     },\n            //                                                     fields:[\"name\",\"employee_name\"]\n            //                                             },\n            //                                             callback:function(r)\n            //                                             {\n            //                                                 if(r.message)\n            //                                                 {\n            //                                                     employee_name=r.message.name\n            //                                                     employee=r.message.employee_name\n            //                                                     var v1=values.contact_date+\":\"+\"-\"+values.meeting_updates\n            //                                                     f1.push(v1)\n            //                                                     // frm.set_value(\"meeting_updates\",undefined)\n            //                                                     // frm.set_value(\"meeting_updates\",f1.join('\\r\\n'))\n                                                                \n            //                                                     var child = cur_frm.add_child(\"meeting_updates2\");\n            //                                                     frappe.model.set_value(child.doctype, child.name, \"employee_id\",employee_name);\n            //                                                     frappe.model.set_value(child.doctype, child.name, \"name1\",employee);\n            //                                                     frappe.model.set_value(child.doctype, child.name, \"contact_date\",values.contact_date);\n            //                                                     frappe.model.set_value(child.doctype, child.name, \"fromtime\",values.from_time);\n            //                                                     frappe.model.set_value(child.doctype, child.name, \"totime\",values.to_time);\n            //                                                     frappe.model.set_value(child.doctype, child.name, \"next_contact_date\",values.next_contact_date);\n            //                                                     frappe.model.set_value(child.doctype, child.name, \"notes\",values.meeting_updates);\n            //                                                     cur_frm.refresh_field(\"meeting_updates2\");\n\n            //                                                     if(values.next_contact_date)\n            //                                                     {\n            //                                                         var time_24=0\n                      \n            //                                             \t\t\tif(values.time1==\"PM\")\n            //                                             \t\t\t{\n                                                        \t\t\t      \n            //                                             \t\t\t      time_24=flt(12.00+flt((values.next_contact_time).replace(\":\",\".\"),2),2)\n                                                        \t\t\t      \n            //                                             \t\t\t}\n                                                        \t\t\t\n                                                        \t\t\t\n            //                                             \t\t\telse\n            //                                             \t\t\t{\n                                                        \t\t\t    \n            //                                             \t\t\t    time_24=values.next_contact_time\n                                                        \t\t\t    \n            //                                             \t\t\t}\n            //                                                                 frappe.db.insert\n            //                                                                 ({\n            //                                                                           \"doctype\": \"Task\",\n            //                                                                           \"subject\": values.subject,\n            //                                                                           \"assign\":employee_name,\n            //                                                                           \"due_date\":values.next_contact_date,\n            //                                                                           \"description\":values.meeting_updates,\n            //                                                                           \"lead\":frm.doc.name,\n            //                                                                           \"lead_name\":frm.doc.lead_name,\n            //                                                                           \"lead_location\":frm.doc.lac,\n            //                                                                           \"contact_time\":values.next_contact_time,\n            //                                                                           \"time1\":values.time3,\n            //                                                                           \"time_in_24\":parseFloat(time_24).toFixed(2)    \n            //                                                                 });\n            //                                                     }\n\n            //                                                             frappe.call\n            //                                                             ({\n            //                                                                 \"method\":\"frappe.client.get_list\",\n            //                                                                 \"args\":\n            //                                                                 {\n            //                                                                     \"doctype\":\"Timesheet\",\n            //                                                                     \"filters\":\n            //                                                                     \t{\n            //                                                                         \t\"employee\":employee_name,\n            //                                                 \t\t\t\t\t\t\t \"date\":values.contact_date,\n            //                                                 \t\t\t\t\t\t\t \"status\":\"Draft\",\n            //                                                                         },\n            //                                                                 },\n            //                                                                 callback:function(r)\n            //                                                                 {\n            //                                                                     if(r.message[0])\n            //                                                                     {\n            //                                                 \t                    frappe.call\n            //                                                 \t                    ({\n            //                                                                             \"method\":\"timesheet_row_add\",\n            //                                                                             \"args\":{\n            //                                                                                      timesheet:r.message[0].name,\n            //                                                                                      type:\"Lead\",\n            //                                                                                      doc_id:frm.doc.name,\n            //                                                                                      from_time:values.from_time,\n            //                                                                                      to_time:values.to_time,\n            //                                                                                      date1:values.contact_date,\n            //                                                                                      employee:employee_name\n            //                                                                                     },\n            //                                                                         });\n            //                                                                     }\n            //                                                                     else\n            //                                                                     {\n            //                                                                               frappe.db.insert\n            //                                                     \t                       ({\n            //                                                                                     doctype:'Timesheet',    \n            //                                                                                     date:values.contact_date,\n            //                                                                                     employee:employee_name,\n            //                                                                                     employee_name:employee,\n            //                                                                                     time_logs:\n            //                                                                                     [\n            //                                                                                       {\n            //                                                                                              type:\"Lead\",\n            //                                                                                              doc_id:frm.doc.name,\n            //                                                                                              from:values.from_time,\n            //                                                                                              to:values.to_time,\n            //                                                                                              date1:values.contact_date,\n            //                                                                                              employee:employee\n            //                                                                                       },\n            //                                                                                     ]\n            //                                                                                 });\n            //                                                                     }\n            //                                                                 }\n            //                                                             });\n            //                                                       frm.save();\n            //                                                 }\n            //                                                 f1=[]\n            //                                             }\n            //                                         })\n            //                                          frm.set_value(\"next_contact_date\",values.next_contact_date)\n                                                    \n                                                    \n                                                    \n                                                    \n            //                                  d.hide();\n            //                             }\n            //                         });\n            //                         d.$wrapper.find('.modal-content').css({\"width\":\"800px\"});\n            //                         d.show();\n            //         })\n            // }\n\n        // //  frm.change_custom_button_type('Follow Up', null, 'primary');\n            frm.change_custom_button_type('Meeting Updates', null, 'primary');\n    },\n        \n        timer_style:function(frm)\n        {\n           $('input[data-fieldname=\"timer\"]').css(\"color\",\"white\")\n              $('input[data-fieldname=\"timer\"]').css(\"background-color\",\"#1c75bc\") \n              $('input[data-fieldname=\"timer\"]').css(\"width\",\"100px\")\n               $('input[data-fieldname=\"timer\"]').css(\"font-weight\",\"bold\")\n                $('input[data-fieldname=\"timer\"]').css(\"font-weight\",\"bold\") //text-align: center\n                $('input[data-fieldname=\"timer\"]').css(\"text-align\",\"center\")  \n        },\n        \n        allowed_area:function(frm)\n        {\n                        frappe.call\n                        ({\n                            method: \"frappe.client.get_list\",\n                            args: \n                            {\n                                doctype: \"User Permission\",\n                                fields: [\"for_value\"],\n                                filters:{\n                                    \"allow\":\"Assign Sale Area\",\n                                    \"user\":frappe.session.user,\n                                },\n                               \n                            },\n                            callback:function(r) \n                            {\n                                if(r.message[0])\n                                {\n                                     $.each(r.message,function(i,v)\n                                     {\n                                         allowed_area[i]=v.for_value;\n                                     });\n                                }\n                            }\n                        })  \n        },\n     \n        check_availability: function (frm) \n        {\n                     data=[]\n                     frappe.call\n                     ({\n                            method: \"frappe.client.get_list\",\n                            args: \n                            {\n                                doctype: \"Assign Sale Area\",\n                                fields: [\"sales_officer\",\"sales_officer_name\"],\n                                filters: { 'name':frm.doc.lac},\n                            },\n                                callback: function(r)\n                                {\n                                    if(r.message[0])\n                                    {\n                                        sales_officer=r.message[0].sales_officer\n                                        sales_officer_name=r.message[0].sales_officer_name\n                                        //d.show();\n                                    }\n                                }\n                     })\n                     .then(function(doc)\n                     {\n                        \tvar fields =\n                         \t[\n            \t                {\n                                \t\tfieldtype: \"Link\",\n                                \t\tfieldname: \"employee\",\n                                \t\tlabel: __(\"Sales Officer\"),\n                                \t\toptions:\"Employee\",\n                                \t\tdefault:sales_officer\n                                },\n                                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"lead_name\",\n                                \t\tlabel: __(\"Lead Name\"),\n                                \t\tdefault:frm.doc.name,\n                                \t\tread_only:1\n                                },\n        \n                                     {\"fieldtype\":\"Column Break\",},\n                                \n                                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"employee_name\",\n                                \t\tlabel: __(\"Sales Officer Name\"),\n                                \t\tdefault:sales_officer_name,\n                                \t\tread_only:1\n                                },\n                                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"customer_area\",\n                                \t\tlabel: __(\"Lead Area\"),\n                                \t\tdefault:frm.doc.lac,\n                                \t\tread_only:1\n                                },\n                                    {\"fieldtype\":\"Section Break\",},\n                                {\n                                \t\tfieldtype: \"Date\",\n                                \t\tfieldname: \"date\",\n                                \t\tlabel: __(\"Meeting Date\"),\n                                \t\tdefault:frappe.datetime.nowdate(),\n                                \t\treqd: 1,\n                                \t\t'onchange': () =>\n                                        {  \n                                          // d.fields_dict.employee.text=\"SOF-5\"\n                                          // d.fields_dict.employee.value=\"SOF-5\"\n                                              //.fields_dict.items.grid.refresh();\n                                            if(trigger_count==\"1\")\n                                            {\n                                                    while(d.fields_dict.items.df.data[0] !=undefined)\n                                                    {\n                                                        //  while(d.fields_dict.items.df.data[0].name!=undefined)\n                                                        //  {\n                                                            d.fields_dict.items.grid.grid_rows.forEach(function(row)\n                                                            {\n                                                                row.remove();\n                                                            }); \n                                                        // }\n                                                    }\n    \n                                                    frappe.call\n                                                    ({\n                                                        \"method\":\"frappe.client.get_list\",\n                                                        \"args\":\n                                                            {\n                                                                \"doctype\":\"Task\",\n                                                                \"filters\":\n                                                                {\n                                                                    \"assign\":d.fields_dict.employee.value,\n                                                                    \"due_date\":d.fields_dict.date.value\n                                                                },\n                                                                fields:[\"name\",\"subject\",\"contact_time\",\"customer_name\",\"customer_location\",\"time1\",\"lead_location\"],\n                                                                order_by:\"time_in_24\",\n                                                            },\n                                                    })\n                                                    .then(function(doc1)\n                                                     {\n                                                         if(doc1.message.length>0)\n                                                         {\n                                                                      for(var j=0;j<doc1.message.length;j++)\n                                                                        {\n                                                                                    d.fields_dict.items.df.data.push({\"suject\":\"uuuuuuu\"})\n                                                                                    d.fields_dict.items.df.data[j].name=doc1.message[j].name\n                                                                                    //d.fields_dict.items.df.data[j].customer_name=doc1.message[j].customer_name\n                                                                                    if(doc1.message[j].lead_location !=undefined)\n                                                                                    {\n                                                                                        d.fields_dict.items.df.data[j].customer_location=doc1.message[j].lead_location\n                                                                                    }\n                                                                                    else\n                                                                                    {\n                                                                                         d.fields_dict.items.df.data[j].customer_location=doc1.message[j].customer_location\n                                                                                    }\n                                                                                    d.fields_dict.items.df.data[j].subject=doc1.message[j].subject\n                                                                                    d.fields_dict.items.df.data[j].contact_time=doc1.message[j].contact_time\n                                                                                    d.fields_dict.items.df.data[j].time1=doc1.message[j].time1\n                                                                        }\n                                                                          \n                                                         }\n                                                         d.fields_dict.items.grid.refresh();\n                                                     });\n                                                     trigger_count=2\n                                            }\n                                            else\n                                            {\n                                                trigger_count=1\n                                            }\n                                        },\n                                },\n                                    {\"fieldtype\":\"Column Break\",},\n                                {\n                                \t\tfieldtype: \"Select\",\n                                \t\tfieldname: \"time\",\n                                \t\tlabel: __(\"Meeting Time\"),\n                                \t\treqd:1,\n                                \t\toptions:[\" \",\"07:00\",\"07:15\",\"07:30\",\"07:45\",\"08:00\",\"08:15\",\"08:30\",\"08:45\",\"09:00\",\"09:15\",\"09:30\",\"09:45\",\"10:00\",\"10:15\",\"10:30\",\"10:45\",\"11:00\",\"11:15\",\"11:30\",\"11:45\",\"12:00\"],\n                                },\n                                    {\"fieldtype\":\"Column Break\",},\n                                {\n                                \t\tfieldtype: \"Select\",\n                                \t\tfieldname: \"time1\",\n                                \t\tlabel: __(\"\"),\n                                \t\tdefault:\"AM\",\n                                \t\toptions:[\"AM\",\"PM\"],\n                                        'onchange':()=>{\n                                \t\t    if (d.fields_dict.time1.value=='PM')\n                                \t\t    {\n                                \t\t        var field = d.get_field(\"time\");\n                                                field.df.options=[\"01:00\",\"01:15\",\"01:30\",\"01:45\",\"02:00\",\"02:15\",\"02:30\",\"02:45\",\"03:00\",\"03:15\",\"03:30\",\"03:45\",\"04:00\",\"04:15\",\"04:30\",\"04:45\",\"05:00\",\"05:15\",\"05:30\",\"05:45\",\"06:00\",\"06:15\",\"06:30\",\"06:45\",\"07:00\",\"07:15\",\"07:30\",\"07:45\",\"08:00\",\"08:15\",\"08:30\",\"08:45\",\"09:00\",\"09:15\",\"09:30\",\"09:45\",\"10:00\"]\n                                                field.refresh();\n                                \t\t    }\n                                \t\t    else if(d.fields_dict.time1.value=='AM')\n                                \t\t    {\n                                \t\t        var field = d.get_field(\"time\");\n                                                field.df.options=[\"07:00\",\"07:15\",\"07:30\",\"07:45\",\"08:00\",\"08:15\",\"08:30\",\"08:45\",\"09:00\",\"09:15\",\"09:30\",\"09:45\",\"10:00\",\"10:15\",\"10:30\",\"10:45\",\"11:00\",\"11:15\",\"11:30\",\"11:45\",\"12:00\"]\n                                                field.refresh();\n                                \t\t    }\n                                \t\t}\n                                },\n                                     {\"fieldtype\":\"Section Break\",},\n                                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"subject\",\n                                \t\tlabel: __(\"Subject\"),\n                                \t\treqd:1\n                                },\n            \t                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"remarks\",\n                                \t\tlabel: __(\"Remark\"),\n                                // \t\treqd:1\n                                },\n                                    {\"fieldtype\":\"Section Break\",},\n                        \t\t{\n                        \t\t\tfieldtype:'Table', fieldname: 'items', read_only:1,\n                        \t\t\tdescription: __('Existing Task'),\n                        \t\t\tfields:[\n                        \t\t\t\t{fieldtype:'Read Only', fieldname:'name',label: __('Task'), in_list_view:1,columns:2},\n                        \t\t\t\t{fieldtype:'Read Only', fieldname:'subject',label: __('Subject'), in_list_view:1,columns:2},\n                        \t\t\t\t// {fieldtype:'Read Only', fieldname:'customer_name',label: __('Customer Name'), in_list_view:1,columns: 2},\n                        \t\t\t\t{fieldtype:'Read Only', fieldname:'customer_location',label: __('Lead/Customer Area'), in_list_view:1,columns:2},\n                        \t\t\t\t\n                        \t\t\t\t{fieldtype:'read Only', fieldname:'contact_time',label: __('Contact Time'), in_list_view:1,columns: 1},\n                        \t\t\t\t{fieldtype:'Read Only', fieldname:'time1',label: __('time'), in_list_view:1,columns: 1},\n                        \t\t\t],\n                        \t\t\tcannot_add_rows: 1,\n                                    cannot_delete_rows : 1,\n                                    //cannot_edit_row:1,\n                        \t\t\tdata: data,\n                        \t\t\tget_data: function() \n                        \t\t\t{\n                        \t\t\t\treturn data\n                        \t\t\t}\n                        \t\t\n                                },\n                            ]\n                    \t\n                    \t    \tvar d = new frappe.ui.Dialog\n                            \t({\n                            \t\ttitle: __(\"Check Availability & Assign Task\"),\n                            \t\tfields: fields,\n                            \t\tprimary_action: function(values) \n                            \t\t{\n                            \t\t    var time_24=0\n                            \t\t    var remark1=undefined\n                            \t\t\t\n                            \t\t\tif(values.time1==\"PM\")\n                            \t\t\t{\n                            \t\t\t      time_24=flt(12.00+flt((values.time).replace(\":\",\".\"),2),2)\n                            \t\t\t}\n                            \t\t\telse\n                            \t\t\t{\n                            \t\t\t    time_24=values.time\n                            \t\t\t}\n                            \t\t\t\n                            \t\t\tif(values.remarks==undefined)\n                            \t\t\t{\n                            \t\t\t   remark1=values.subject\n                            \t\t\t}\n                            \t\t\telse\n                            \t\t\t{\n                            \t\t\t     remark1=values.remarks\n                            \t\t\t}\n                            \t\t\t\n                            \t\t\t\n                            \t\t\t                                   frappe.db.insert\n                                                                          ({\n                                                                              \"doctype\": \"Task\",\n                                                                              \"subject\":values.subject,\n                                                                              \"assign\":values.employee,\n                                                                              \"due_date\":values.date,\n                                                                              \"description\":remark1,\n                                                                              \"contact_time\":values.time,\n                                                                              \"lead\":frm.doc.name,\n                                                                              \"lead_name\":frm.doc.lead_name,\n                                                                              \"lead_location\":frm.doc.lac,\n                                                                              \"time1\":values.time1,\n                                                                              \"time_in_24\":parseFloat(time_24).toFixed(2)       \n                                                                              });\n                                                                              \n                                                                             \n                                                                              \n                                                                              frm.set_value(\"assigned_to1\",values.employee)\n                                                                                 frm.set_value(\"emp_id\",values.employee)\n                                                                           \n                                                                                 var child = cur_frm.add_child(\"task_table1\");\n                                                                                 frappe.model.set_value(child.doctype, child.name, \"date\",values.date);\n                                                                                 frappe.model.set_value(child.doctype, child.name, \"time\",values.time);\n                                                                                 frappe.model.set_value(child.doctype, child.name, \"subject\",values.subject);\n                                                                                 frappe.model.set_value(child.doctype, child.name, \"emp_id\",values.employee);\n                                                                                 frappe.model.set_value(child.doctype, child.name, \"note\",remark1);\n                    \n                                                                                 cur_frm.refresh_field(\"task_table1\");\n                                                                                 trigger_count=1\n                                                                                 d.hide();\n                                                                                 frm.save(); \n                            \t\t},\n                            \t\tprimary_action_label: __('Assign')\n                            \t});\n                            \t\n                            \tvar field1 = d.get_field(\"employee\");\n                            \tfield1.df.read_only = 1;\n                            \tfield1.refresh();\n                            \t\n                            \t   //   d.fields_dict.lead.$input.on('change', function()\n                                // {\n                                //     console.log(\"ffff\")\n                                //         time_array=[\"1\",\"2\"]\n                                //          d.fields_dict.time.options(time_array)\n                                //       d.fields_dict.time.refresh();\n                                //     }); \n\n                            \td.$wrapper.find('.modal-content').css({\"width\":\"800px\"});\n                                d.show();   \n                                \n                              \n                     })\n        },\n        \n        date_add:function(frm,cdt,cdn)\n        {\n            console.log(\"ssss\")\n            // var d=locals [cdt][cdn]\n            // console.log(d.idx)\n        },\n        \n        // mobile_no:function(frm)\n        // {\n        //     frm.set_df_property('mobile_no','description',\"mobile number must be 10 digit\")\n        //     frappe.validated=false;\n            \n        // },\n        \n        districts:function(frm)\n        {\n            update_address=\"true\"  \n        },\n        \n        address_line1(frm)\n        {\n            update_address=\"true\"  \n        },\n        address_line2(frm)\n        {\n            update_address=\"true\"  \n        },\n        po(frm)\n        {\n            update_address=\"true\"  \n        },\n        pin_code(frm)\n        {\n            update_address=\"true\"  \n        },\n        city(frm)\n        {\n            update_address=\"true\"  \n        },\n        \n        \n        \n        validate(frm)\n        {\n           \n            if(frm.doc.mobile_no==undefined)\n            {\n                // frappe.msgprint((\"Enter  phone Number\"));\n                    frappe.validated = true;\n            }\n            else if (frm.doc.mobile_no.length < 8)\n            {\n                    frappe.msgprint((\"Enter a valid phone Number\"));\n                    frappe.validated = false;\n            }\n            else if (frm.doc.mobile_no.length > 13)\n            {\n                    frappe.msgprint((\"Enter a valid phone Number\"));\n                    frappe.validated = false;\n            }\n            \n            // frappe.validated=false;\n            \n            \n            \n            \n             if (frm.doc.expected_time_to_purchase < frappe.datetime.get_today()) \n            {\n                frappe.msgprint(__(\"You can't select past date\"));\n                frappe.validated = false;\n            }\n        },\n        \n        \n \n              \n           \n        \n        \n       \n\n        // states1(frm)\n        // {\n        //     frm.set_value(\"district\",undefined)  \n        //     frm.set_value(\"lac\",undefined)  \n        //     frm.set_value(\"sale_district\",undefined)  \n        //     frm.set_value(\"sale_area\",undefined)  \n        // },\n     \n        // district:function(frm)\n        // {\n        //     frm.set_value(\"lac\",undefined)\n        //     frm.set_value(\"sale_area\",undefined)  \n        //     frm.set_value(\"sale_district\",frm.doc.district)  \n        // },\n        \n        lac:function(frm)\n        {\n            frm.set_value(\"sale_area\",frm.doc.lac)  \n        },\n        \n        // sale_district:function(frm)\n        // {\n        //     frm.set_value(\"sale_area\",undefined)\n        // },\n     \n        field_filters:function(frm)\n        {\n            frm.trigger(\"field_triggers\")\n            \n            frm.set_query(\"lead_category\", function() \n                {\n                return {\n                    \"filters\": \n                    {\n                        \"is_group\":0,\n                        // \"group_or_ledger\": \"Ledger\"\n                    }\n                };\n            });  \n\n            //  frm.set_query(\"district\", function() \n            //     {\n            //     return {\n            //         \"filters\": \n            //         {\n            //             \"state\": frm.doc.states,\n            //             // \"group_or_ledger\": \"Ledger\"\n            //         }\n            //     };\n            // });\n            \n            // frm.set_query(\"lac\", function() \n            //     {\n            //     return {\n            //         \"filters\": \n            //         {\n            //             \"district\": frm.doc.district,\n            //             // \"group_or_ledger\": \"Ledger\"\n            //         }\n            //     };\n            // });\n\n            //  frm.set_query(\"sale_district\", function() \n            //     {\n            //     return {\n            //         \"filters\": \n            //         {\n            //             \"state\": frm.doc.states,\n            //             // \"group_or_ledger\": \"Ledger\" \n            //         }\n            //     };\n            // });\n            \n            // frm.set_query(\"sale_area\", function() \n            //     {\n            //     return {\n            //         \"filters\": \n            //         {\n            //             \"district\": frm.doc.sale_district,\n            //             // \"group_or_ledger\": \"Ledger\"\n            //         }\n            //     };\n            // });\n            \n            frm.set_query(\"assign_to_marketing_officer\", function() \n                {\n                return {\n                    \"filters\": \n                    {\n                        \"designation\": \"Marketing Officer\",\n                        // \"group_or_ledger\": \"Ledger\"\n                    }\n                };\n            });\n            \n            frm.set_query(\"assign_to_customer_care_executive\", function() \n                {\n                return {\n                    \"filters\": \n                    {\n                        \"designation\": \"Customer Care Executive\",\n                        // \"group_or_ledger\": \"Ledger\"\n                    }\n                };\n            });\n            \n        },\n        \n        basic_settings:function(frm)\n        {\n            setTimeout(() =>\n            {\n\t\t\t\n    \t\t\tfrm.remove_custom_button(\"Customer\", 'Create');\n    \t\t\tfrm.remove_custom_button(\"Quotation\", 'Create'); \n    \t\t\tfrm.remove_custom_button(\"Prospect\", 'Create'); \n    \t\t\tfrm.remove_custom_button(\"Opportunity\",'Create');\n    \t\t\tfrm.remove_custom_button(\"Add to Prospect\",'Action');\n\t\t\t\n\t\t    }, 1);\n\t\t    \n\t\t    setTimeout(() =>\n            {\n                 frm.remove_custom_button('Add to Prospect','Action');\n                 frm.remove_custom_button('Quotation','Create');\n            }, 1000);\n            \n                     frm.page.sidebar.remove();\n\n   \n        },\n        \n        notes_html:function(frm)\n        {\n            console.log(\"dddddddiiiiiiiiii\")\n        },\n        \n        expected_time_to_purchase:function(frm)\n        {\n            console.log(\"mmmmmmmmmm....\")\n            var date=frappe.datetime.nowdate()\n            // console.log(date,\"LLLLLLLLLLLLLLLLLLL\")\n            \n            var purchase_date=frm.doc.expected_time_to_purchase\n            // console.log(purchase_date)\n            \n            var t1=frappe.datetime.get_day_diff(purchase_date,date );\n            \n            // console.log(t1)\n            \n            if(t1<31)\n            {\n                frm.set_value(\"status\",\"Hot\")\n            }\n            else\n            {\n                frm.set_value(\"status\",\"Lead\")\n            }\n        },\n        \n        // check_availability: function (frm) \n        // {\n        //              data=[]\n        //              frappe.call\n        //              ({\n        //                     method: \"frappe.client.get_list\",\n        //                     args: \n        //                     {\n        //                         doctype: \"Sale Area\",\n        //                         fields: [\"allocated_by\",\"emp_name\"],\n        //                         filters: { 'name_of_lac':frm.doc.lac},\n        //                     },\n        //                         callback: function(r)\n        //                         {\n        //                             if(r.message[0])\n        //                             {\n        //                                 sales_officer=r.message[0].allocated_by\n        //                                 sales_officer_name=r.message[0].emp_name\n        //                                 //d.show();\n        //                             }\n        //                         }\n        //              })\n        //              .then(function(doc)\n        //              {\n        //                  \tvar fields =\n        //                  \t[\n        //     \t                {\n        //                         \t\tfieldtype: \"Link\",\n        //                         \t\tfieldname: \"employee\",\n        //                         \t\tlabel: __(\"Sales Officer\"),\n        //                         \t\toptions:\"Employee\",\n        //                         \t\tdefault:sales_officer\n        //                         },\n        //                         {\n        //                         \t\tfieldtype: \"Data\",\n        //                         \t\tfieldname: \"lead_name\",\n        //                         \t\tlabel: __(\"Lead Name\"),\n        //                         \t\tdefault:frm.doc.name,\n        //                         \t\tread_only:1\n        //                         },\n        \n        //                              {\"fieldtype\":\"Column Break\",},\n                                \n        //                         {\n        //                         \t\tfieldtype: \"Data\",\n        //                         \t\tfieldname: \"employee_name\",\n        //                         \t\tlabel: __(\"Sales Officer Name\"),\n        //                         \t\tdefault:sales_officer_name,\n        //                         \t\tread_only:1\n        //                         },\n        //                         {\n        //                         \t\tfieldtype: \"Data\",\n        //                         \t\tfieldname: \"customer_area\",\n        //                         \t\tlabel: __(\"Sale Area\"),\n        //                         \t\tdefault:frm.doc.lac,\n        //                         \t\tread_only:1\n        //                         },\n        //                             {\"fieldtype\":\"Section Break\",},\n        //                         {\n        //                         \t\tfieldtype: \"Date\",\n        //                         \t\tfieldname: \"date\",\n        //                         \t\tlabel: __(\"Meeting Date\"),\n        //                         \t\tdefault:frappe.datetime.nowdate(),\n        //                         \t\treqd: 1,\n        //                         \t\t'onchange': () =>\n        //                                 {  \n        //                                   // d.fields_dict.employee.text=\"SOF-5\"\n        //                                   // d.fields_dict.employee.value=\"SOF-5\"\n        //                                       //.fields_dict.items.grid.refresh();\n                                              \n        //                                     if(trigger_count==\"1\")\n        //                                     {\n        //                                             while(d.fields_dict.items.df.data[0] !=undefined)\n        //                                             {\n        //                                                 //  while(d.fields_dict.items.df.data[0].name!=undefined)\n        //                                                 //  {\n        //                                                     d.fields_dict.items.grid.grid_rows.forEach(function(row)\n        //                                                     {\n        //                                                         row.remove();\n        //                                                     }); \n        //                                                 // }\n        //                                             }\n    \n        //                                             frappe.call\n        //                                             ({\n        //                                                 \"method\":\"frappe.client.get_list\",\n        //                                                 \"args\":\n        //                                                     {\n        //                                                         \"doctype\":\"Task\",\n        //                                                         \"filters\":\n        //                                                         {\n        //                                                             \"assign\":d.fields_dict.employee.value,\n        //                                                             \"due_date\":d.fields_dict.date.value\n        //                                                         },\n        //                                                         fields:[\"name\",\"subject\",\"contact_time\",\"customer_name\",\"customer_location\",\"time1\"]\n        //                                                     },\n        //                                             })\n        //                                             .then(function(doc1)\n        //                                              {\n        //                                                  if(doc1.message.length>0)\n        //                                                  {\n        //                                                               for(var j=0;j<doc1.message.length;j++)\n        //                                                                 {\n        //                                                                             d.fields_dict.items.df.data.push({\"suject\":\"uuuuuuu\"})\n        //                                                                             d.fields_dict.items.df.data[j].name=doc1.message[j].name\n        //                                                                             d.fields_dict.items.df.data[j].customer_name=doc1.message[j].customer_name\n        //                                                                             d.fields_dict.items.df.data[j].customer_location=doc1.message[j].customer_location\n        //                                                                             d.fields_dict.items.df.data[j].subject=doc1.message[j].subject\n        //                                                                             d.fields_dict.items.df.data[j].contact_time=doc1.message[j].contact_time\n        //                                                                             d.fields_dict.items.df.data[j].time1=doc1.message[j].time1\n        //                                                                 }\n                                                                          \n        //                                                  }\n        //                                                  d.fields_dict.items.grid.refresh();\n        //                                              });\n        //                                              trigger_count=2\n        //                                     }\n        //                                     else\n        //                                     {\n        //                                         trigger_count=1\n        //                                     }\n        //                                 },\n        //                         },\n        //                             {\"fieldtype\":\"Column Break\",},\n        //                         // {\n        //                         // \t\tfieldtype: \"Time\",\n        //                         // \t\tfieldname: \"time\",\n        //                         // \t\tlabel: __(\"Meeting Time\"),\n        //                         // \t\treqd:1,\n        //                         // \t\t\"description\": \"Time format must be 12:00\",\n        //                         // \t\t'onchange':()=>\n        //                         // \t\t{\n        //                         // \t\t     console.log(\"sss\",d.fields_dict.time.value) \n        //                         // \t\t},\n        //                         // },\n        //                         {\n        //                         \t\tfieldtype: \"Select\",\n        //                         \t\tfieldname: \"time\",\n        //                         \t\tlabel: __(\"Meeting Time\"),\n        //                         \t\treqd:1,\n        //                         \t\toptions:[\" \",\"01:00\",\"01:15\",\"01:30\",\"01:45\",\"02:00\",\"02:15\",\"02:30\",\"02:45\",\"03:00\",\"03:15\",\"03:30\",\"03:45\",\"04:00\",\"04:15\",\"04:30\",\"04:45\",\"05:15\",\"05:30\",\"05:45\",\"06:15\",\"06:30\",\"06:45\",\"07:15\",\"07:30\",\"07:45\",\"08:00\",\"08:15\",\"08:30\",\"08:45\",\"09:00\",\"09:15\",\"09:30\",\"09:45\",\"10:00\",\"10:15\",\"10:30\",\"10:45\",\"11:00\",\"11:15\",\"11:30\",\"11:45\",\"12:00\",\"12:15\",\"12:30\",\"12:45\"],\n        //                         // \t\t\"description\": \"Time format must be 12:00\",\n        //                         // \t\t'onchange':()=>\n        //                         // \t\t{\n        //                         // \t\t     console.log(\"sss\",d.fields_dict.time.value) \n        //                         // \t\t},\n        //                         },\n        //                             {\"fieldtype\":\"Column Break\",},\n        //                         {\n        //                         \t\tfieldtype: \"Select\",\n        //                         \t\tfieldname: \"time1\",\n        //                         \t\tlabel: __(\"\"),\n        //                         \t\tdefault:\"AM\",\n        //                         \t\toptions:[\"AM\",\"PM\"],\n        //                         },\n        //                              {\"fieldtype\":\"Section Break\",},\n        //                         {\n        //                         \t\tfieldtype: \"Data\",\n        //                         \t\tfieldname: \"subject\",\n        //                         \t\tlabel: __(\"Subject\"),\n        //                         \t\treqd:1\n        //                         },\n        //     \t                {\n        //                         \t\tfieldtype: \"Data\",\n        //                         \t\tfieldname: \"remarks\",\n        //                         \t\tlabel: __(\"Remark\"),\n        //                         \t\treqd:1\n        //                         },\n        //                             {\"fieldtype\":\"Section Break\",},\n        //                 \t\t{\n        //                 \t\t\tfieldtype:'Table', fieldname: 'items', read_only:1,\n        //                 \t\t\tdescription: __('Existing Task'),\n        //                 \t\t\tfields:[\n        //                 \t\t\t\t{fieldtype:'Read Only', fieldname:'name',label: __('Task'), in_list_view:1,columns:2},\n        //                 \t\t\t\t{fieldtype:'Read Only', fieldname:'customer_name',label: __('Customer Name'), in_list_view:1,columns: 2},\n        //                 \t\t\t\t{fieldtype:'Read Only', fieldname:'customer_location',label: __('Customer Location'), in_list_view:1,columns:2},\n        //                 \t\t\t\t{fieldtype:'Read Only', fieldname:'subject',label: __('Subject'), in_list_view:1,columns:2},\n        //                 \t\t\t\t{fieldtype:'read Only', fieldname:'contact_time',label: __('Contact Time'), in_list_view:1,columns: 1},\n        //                 \t\t\t\t{fieldtype:'Read Only', fieldname:'time1',label: __('time'), in_list_view:1,columns: 1},\n        //                 \t\t\t],\n        //                 \t\t\tcannot_add_rows: 1,\n        //                             cannot_delete_rows : 1,\n        //                             //cannot_edit_row:1,\n        //                 \t\t\tdata: data,\n        //                 \t\t\tget_data: function() \n        //                 \t\t\t{\n        //                 \t\t\t\treturn data\n        //                 \t\t\t}\n                        \t\t\n        //                         },\n        //                     ]\n                    \t\n        //             \t    \tvar d = new frappe.ui.Dialog\n        //                     \t({\n        //                     \t\ttitle: __(\"Check Availability & Assign Task\"),\n        //                     \t\tfields: fields,\n        //                     \t\tprimary_action: function(values) \n        //                     \t\t{\n        //                     // \t\t\tvar values = d.get_values();\n        //                     // \t\t\tlet selected_items = d.fields_dict.items.grid.get_selected_children();\n                            \t\t\t\n        //                     \t\t\t                                   frappe.db.insert\n        //                                                                   ({\n        //                                                                       \"doctype\": \"Task\",\n        //                                                                       \"subject\":values.subject,\n        //                                                                       \"assign\":values.employee,\n        //                                                                       \"due_date\":values.date,\n        //                                                                       \"description\":values.remarks,\n        //                                                                       \"contact_time\":values.time,\n        //                                                                       \"customer_name\":frm.doc.lead_name,\n        //                                                                       \"customer_location\":frm.doc.lac,\n        //                                                                       \"time1\":values.time1,\n                                                                                                            \n        //                                                                       });\n                                                                              \n                                                                             \n                                                                              \n        //                                                                       frm.set_value(\"assigned_to1\",values.employee)\n                                                                           \n        //                                                                          var child = cur_frm.add_child(\"task_table1\");\n        //                                                                          frappe.model.set_value(child.doctype, child.name, \"date\",values.date);\n        //                                                                          frappe.model.set_value(child.doctype, child.name, \"time\",values.time);\n        //                                                                          frappe.model.set_value(child.doctype, child.name, \"emp_id\",values.employee);\n        //                                                                          frappe.model.set_value(child.doctype, child.name, \"note\",values.remarks);\n                    \n        //                                                                          cur_frm.refresh_field(\"task_table1\");\n        //                                                                          trigger_count=1\n        //                                                                          d.hide();\n        //                                                                          frm.save(); \n        //                     \t\t},\n        //                     \t\tprimary_action_label: __('Assign')\n        //                     \t});\n                            \t\n        //                     \tvar field1 = d.get_field(\"employee\");\n        //                     \tfield1.df.read_only = 1;\n        //                     \tfield1.refresh();\n\n        //                     \td.$wrapper.find('.modal-content').css({\"width\":\"800px\"});\n        //                         d.show();   \n                                \n                              \n        //              })\n        // },\n\n        //  take_appointment:function(frm)\n        //  {\n             \n             \n             \n             \n           \n            \n        //     var area=frm.doc.lac\n            \n        //     console.log(area,\"=========\")\n            \n            \n            \n            \n            \n            \n        //     // console.log(frm.doc.lac.length,\"--------\")\n            \n        //      if(frm.doc.lac==undefined)\n        //      {\n        //          msgprint(\"PLZ SELECT SALE AREA IN DETAILS SECTION\")\n        //      }\n        //      else\n        //      {\n        //           let d = new frappe.ui.Dialog({\n        //             title: 'Enter details',\n        //             fields: [\n        //                 {\n        //                     label: 'Meeting Date',\n        //                     fieldname: 'meeting_date',\n        //                     fieldtype: 'Date',\n        //                     \"reqd\": 1,\n        //                     // default:date\n        //                 },\n        //                 {\n        //                     label: 'Meeting Time',\n        //                     fieldname: 'meeting_time',\n        //                     fieldtype: 'Data',\n        //                     \"reqd\": 1,\n        //                     \"description\": \"Time format must be 12:00\",\n        //                 },\n        //                 {\n        //                     label: 'Remarks',\n        //                     fieldname: 'remarks',\n        //                     fieldtype: 'Small Text',\n        //                     \"reqd\": 1\n        //                 }\n        //             ],\n        //             primary_action_label: 'Submit',\n        //             primary_action(values) \n        //             {\n        //                 console.log(values);\n                        \n        //                 frappe.call\n        //                      ({\n        //                             method: \"frappe.client.get\",\n        //                             args: \n        //                             {\n        //                                 doctype: \"Sale Area\",\n        //                                 // fields: [\"employee_name\"],\n        //                                 filters: { 'name_of_lac':area},\n        //                             },\n        //                                 callback: function(res)\n        //                                 {\n        //                                     if(res)\n        //                                     {\n                                                \n        //                                         // console.log(res.message.allocated_by,\"000000000000\")\n                                                \n        //                                         console.log(\"MEETING WITH THE LEAD\"+frm.doc.lead_name,\"===================\")\n                                                \n        //                                         frappe.db.insert\n        //                                               ({\n        //                                                   \"doctype\": \"Task\",\n        //                                                   \"subject\": \"Meeting With \"+frm.doc.lead_name,\n        //                                                   \"assign\":res.message.allocated_by,\n        //                                                   \"due_date\":values.meeting_date,\n        //                                                   \"description\":values.remarks,\n        //                                                   \"contact_time\":values.meeting_time,\n        //                                                   \"customer_name\":frm.doc.lead_name,\n        //                                                   \"customer_location\":frm.doc.lac\n                                                                                        \n        //                                                   });\n                                                          \n                                                         \n                                                          \n        //                                                   frm.set_value(\"assigned_to1\",res.message.allocated_by)\n                                                       \n                                                          \n                                                          \n        //                                                   var child = cur_frm.add_child(\"task_table1\");\n        //                                                      frappe.model.set_value(child.doctype, child.name, \"date\",values.meeting_date);\n        //                                                      frappe.model.set_value(child.doctype, child.name, \"time\",values.meeting_time);\n        //                                                      frappe.model.set_value(child.doctype, child.name, \"emp_id\",res.message.allocated_by);\n        //                                                      frappe.model.set_value(child.doctype, child.name, \"note\",values.remarks);\n        //                                                     //  frappe.model.set_value(child.doctype, child.name, \"note\",values.remark);\n                                                            \n        //                                                      cur_frm.refresh_field(\"task_table1\");\n                                                          \n                                                       \n                                                        \n                                                        \n        //                                                 frm.save(); \n                                                \n        //                                     }\n        //                                 }\n                                        \n        //                      })\n                        \n                        \n                       \n                        \n                        \n                        \n                        \n                        \n                        \n        //                 d.hide();\n        //             }\n        //                 });\n                        \n        //                 d.show();\n                 \n        //      }\n            \n            \n             \n            \n             \n             \n             \n        //  },\n    \n        // assign:function(frm)\n        // {\n            \n        //       cur_frm.clear_table(\"sales_executive_availability\");\n        //               cur_frm.refresh_fields(); \n                \n                \n        //          frappe.call\n        //          ({\n        //                 method: \"frappe.client.get\",\n        //                 args: \n        //                 {\n        //                     doctype: \"Sale Area\",\n        //                     // fields: [\"employee_name\"],\n        //                     filters: { 'name_of_lac':frm.doc.lac},\n        //                 },\n        //                     callback: function(res)\n        //                     {\n        //                         if(res)\n        //                         {\n                                  \n                                    \n        //                             g1=res.message.allocated_by\n        //                             g2=res.message.emp_name\n                                   \n                                    \n        //                               var d = new frappe.ui.Dialog\n        //                                      ({\n                                                                            \n        //                                             'fields': [\n                                                       \n        //                                                 {\"fieldtype\": \"Data\", \"label\":\"Location\" , \"fieldname\": \"location\",default:cur_frm.doc.lac,\t\"reqd\": 1,\"read_only\":1},\n        //                                                 {\"fieldtype\": \"Date\", \"label\": \"Date\" , \"fieldname\": \"date\",\"reqd\": 1},\n        //                                                 {\"fieldtype\": \"Data\", \"label\": \"Employee\" , \"fieldname\": \"employee\",\"reqd\": 1,default:g2,\"read_only\":1},\n                                                                                \n                                                                                \n        //                                                         ],\n        //                                                     primary_action_label: 'Submit',\n        //                                                     primary_action(values) \n        //                                                     {\n        //                                                         console.log(values)\n                                                                \n        //                                                         var k2=values.date\n                                                              \n                                                                \n                                                                 \n        //                                                  frappe.call\n        //                                                  ({\n        //                                                         method: \"frappe.client.get_list\",\n        //                                                         args: \n        //                                                         {\n        //                                                             doctype: \"Task\",\n        //                                                          fields: [\"employee_name1\",\"due_date\",\"customer_location\",\"contact_time\",\"customer_name\"],\n        //                                                             filters: { 'assign':g1,\"due_date\":values.date},\n        //                                                         },\n        //                                                             callback: function(res)\n        //                                                             {\n        //                                                                 if(res)\n        //                                                                 {\n                                                                            \n        //                                                                     console.log(res,\"OOOKKKKKKKKKK\")\n                                                                            \n        //                                                                     $.each(res.message, function(i, d)\n        //                                                                             {\n        //                                                                                 customer_name[i]=d.customer_name\n        //                                                                                 date[i]=d.due_date\n        //                                                                                 time[i]=d.contact_time\n        //                                                                                 locations[i]=d.customer_location\n                                                                                      \n                                                                                     \n                                                                                        \n        //                                                                             })\n                                                                                    \n                                                                                    \n                                                                                    \n        //                                                                             console.log(customer_name)\n        //                                                                             console.log(date)\n        //                                                                             console.log(time)\n        //                                                                             console.log(locations)\n                                                                                    \n        //                                                                             if(customer_name.length==0)\n        //                                                                             {\n        //                                                                                 msgprint(\"No Task Is Assigned To Employee\"+g2)\n        //                                                                             }\n                                                                                    \n        //                                                                             else\n        //                                                                             {\n                                                                                        \n        //                                                                                 // console.log(\"KKKKKK\")\n        //                                                                                 // console.log(customer_name.length)\n        //                                                                                 for(var i=0;i<customer_name.length;i++)\n        //                                                                               {\n                                                                                          \n        //                                                                                 var child = cur_frm.add_child(\"sales_executive_availability\");\n        //                                                                                     frappe.model.set_value(child.doctype, child.name, \"location\",locations[i]);\n        //                                                                                     frappe.model.set_value(child.doctype, child.name, \"time\",time[i]);\n        //                                                                                     frappe.model.set_value(child.doctype, child.name, \"meeting_date\",date[i]);\n        //                                                                                     frappe.model.set_value(child.doctype, child.name, \"customer_name\",customer_name[i]);\n        //                                                                                 //  frappe.model.set_value(child.doctype, child.name, \"note\",values.remark);\n                                                                                        \n        //                                                                                 cur_frm.refresh_field(\"sales_executive_availability\");\n                                                                                          \n        //                                                                               }\n        //                                                                             }\n                                                                                      \n                                                                                 \n                                                                            \n        //                                                                 }\n        //                                                             }\n        //                                                  })\n                                                                \n                                                                \n        //                                                         customer_name=[];\n        //                                                         date=[];\n        //                                                          time=[];\n        //                                                          locations=[];\n                                                                \n                                                                \n        //                                                          d.hide();  \n                                                                \n                                                                \n        //                                                     }\n                                                            \n                                                          \n                                                            \n                                                            \n        //                                      })\n                                             \n        //                                      d.show()\n                                    \n                                    \n        //                         }\n                                \n        //                     }\n                            \n        //          })\n            \n            \n            \n            \n        //     //  frm.get_field(\"sales_executive_availability\").grid.cannot_add_rows = true;\n        //     // $('*[data-fieldname=\"sales_executive_availability\"]').find('.grid-remove-rows').hide();\n            \n            \n            \n            \n        // },\n        \n        limited_vehicle_permissible(frm)\n        {\n            if (frm.doc.limited_vehicle_permissible ==1)\n            {\n                frm.set_value(\"all_vehicle_permissible\",0)\n                // frm.set_df_property(\"all_vehicle_permissible\", \"read_only\", 1);\n            }\n        },\n        \n        all_vehicle_permissible(frm)\n        {\n            if (frm.doc.all_vehicle_permissible ==1)\n            {\n                frm.set_value(\"limited_vehicle_permissible\",0)\n                // frm.set_df_property(\"limited_vehicle_permissible\", \"read_only\", 1);\n            }\n        },\n        \n        // lac:function(frm)\n        // {\n        //     if(current_lac==frm.doc.lac)\n        //     {\n        //         change_lac=undefined\n        //     }\n        //     else\n        //     {\n        //         change_lac=\"true\"\n        //     }\n        // },\n\n        before_save(frm)\n        {\n            if(frm.doc.address_line1==undefined)\n            {\n                \n            }\n              \n//address\n            //  cur_frm.clear_table(\"sales_executive_availability\");\n            //  cur_frm.refresh_fields();\n            //  frappe.db.insert\n            //                                                             //                 ({   \n            //                                                             //                     \"doctype\": \"User Permission\", \n            //                                                             //                     \"user\":doc.message[0].sales_admin_email,\n            //                                                             //                     \"allow\":\"Assign Sale Area\",\n            //                                                             //                     \"for_value\":frm.doc.name\n            //                                                             //                 });\n            // if(change_lac==\"true\")\n            // {\n            //     if(allowed_area.includes(frm.doc.lac))\n            //     {\n            //         frm.set_value(\"sale_area\",frm.doc.lac)\n            //         change_area=undefined\n            //     }\n            //     else\n            //     {\n            //         change_area=\"true\"\n            //     }\n            // }\n            // else\n            // {\n            //     change_area=undefined\n            // }\n             \n         },\n         \n        after_save(frm)\n        {\n            console.log(\"c1\")\n            if(new_doc==\"true\")\n            {\n                 console.log(\"c2\")\n                             frappe.call\n                             ({\n                                    method: \"frappe.client.get_list\",\n                                    args: \n                                    {\n                                        doctype: \"Assign Sale Area\",\n                                         fields: [\"sales_officer\",\"sales_officer_email\",\"sales_officer_name\"],\n                                        filters: { 'name':frm.doc.lac},\n                                    },\n                                        callback: function(res)\n                                        {\n                                            if(res.message[0])\n                                            {\n                                                if(frappe.session.user !=res.message[0].sales_officer_email)\n                                                {\n                                                     push_sales_officer=res.message[0].sales_officer\n                                                     push_sales_officer_name=res.message[0].sales_officer_name\n                                                     push_sales_officer_email=res.message[0].sales_officer_email\n                                                     frm.trigger(\"push_notification\")\n                                                }\n                                            }\n                                        }\n                             })\n            }\n            \n            \n            \n            var lead_name=frm.doc.first_name+\"-\"+\"Billing\"\n            if(frm.doc.address_line1)\n            {\n                // if(frm.doc.city)\n                // {\n                             frappe.call\n                             ({\n                                    method: \"frappe.client.get_list\",\n                                    args: \n                                    {\n                                        doctype: \"Address\",\n                                         fields: [\"name\",\"address_title\",\"state\",\"address_line1\",\"address_line2\"],\n                                        filters: { 'name':lead_name,\"address_type\":\"Billing\"},\n                                    },\n                                        callback: function(res)\n                                        {\n                                            if(res.message.length==0)\n                                            {\n                                                if(frm.doc.states1==\"Kerala\")\n                                                {\n                                                    frappe.db.insert\n                                                    ({\n                                                      \"doctype\": \"Address\",\n                                                      \"address_title\": frm.doc.first_name,\n                                                      \"address_line1\": frm.doc.address_line1,\n                                                      \"address_line2\":frm.doc.address_line2,\n                                                      \"city\":frm.doc.city,\n                                                      \"po\":frm.doc.po,\n                                                      \"district\":frm.doc.districts,\n                                                      \"state\":frm.doc.states1,\n                                                      \"pincode\":frm.doc.pin_code,\n                                                      \"tax_category\":\"INSTATE\",\n                                                      \n                                                      \"links\" : [ { \"link_doctype\":\"Lead\", \"link_name\":frm.doc.name} ]\n                                                    });\n                                                \n                                                }\n                                                else\n                                                {\n                                                    frappe.db.insert\n                                                    ({\n                                                      \"doctype\": \"Address\",\n                                                      \"address_title\": frm.doc.first_name,\n                                                      \"address_line1\": frm.doc.address_line1,\n                                                      \"address_line2\":frm.doc.address_line2,\n                                                      \"city\":frm.doc.city,\n                                                      \"po\":frm.doc.po,\n                                                      \"district\":frm.doc.districts,\n                                                      \"state\":frm.doc.states1,\n                                                      \"pincode\":frm.doc.pin_code,\n                                                      \"tax_category\":\"OUTSTATE\",\n                                                      \n                                                      \"links\" : [ { \"link_doctype\":\"Lead\", \"link_name\":frm.doc.name} ]\n                                                    });\n                                                    \n                                                }\n                                                update_address=\"false\"\n                                            }\n                                            else\n                                            {\n                                                if(update_address==\"true\")\n                                                {\n                                                    if(frm.doc.states1==\"Kerala\")\n                                                    {\n                                                        frappe.db.set_value(\"Address\",res.message[0].name,\n                                                        {\n                                                              \"address_line1\": frm.doc.address_line1,\n                                                              \"address_line2\":frm.doc.address_line2,\n                                                              \"city\":frm.doc.city,\n                                                              \"po\":frm.doc.po,\n                                                              \"district\":frm.doc.districts,\n                                                              \"state\":frm.doc.states1,\n                                                              \"pincode\":frm.doc.pin_code,\n                                                              \"tax_category\":\"INSTATE\",       \n                                                        })\n                                                    }\n                                                    else\n                                                    {\n                                                         frappe.db.set_value(\"Address\",res.message[0].name,\n                                                        {\n                                                              \"address_line1\": frm.doc.address_line1,\n                                                              \"address_line2\":frm.doc.address_line2,\n                                                              \"city\":frm.doc.city,\n                                                              \"po\":frm.doc.po,\n                                                              \"district\":frm.doc.districts,\n                                                              \"state\":frm.doc.states1,\n                                                              \"pincode\":frm.doc.pin_code,\n                                                              \"tax_category\":\"OUTSTATE\",       \n                                                        })\n                                                    }\n                                                }\n                                            }\n                                        }\n                             })\n                // }\n            \n            }\n            \n                //     if(change_area==\"true\")\n                //     {\n                //                         frappe.call\n                // \t                    ({\n                //                             \"method\":\"update_sale_area\",\n                //                             \"args\":{\n                //                                      docname:frm.doc.name,\n                //                                     },\n                //                         })\n                //                         .then(function(doc)\n                //                         {\n                //                             frappe.set_route(\"List\",\"Lead\");\n                //                       })\n                //                       change_area=undefined\n                //                       change_lac=undefined\n                //     }\n                //     else\n                //     {\n                //         change_area=undefined\n                //         change_lac=undefined\n                //     }\n                //  current_lac=frm.doc.lac\n                \n            // frappe.set_route(\"List\",\"Lead\");\n    \n        },\n        \n        push_notification:function(frm)\n        {\n            var employee_name;\n            var obj={}\n              \n              frappe.call\n              ({\n                                method: \"frappe.client.get_list\",\n                                args: \n                                    {\n                                        doctype: \"Employee\",\n                                        \n                                        filters: { 'email_id':frappe.session.user},\n                                        \n                                        'fields': ['employee_name'],\n                                    },\n                                        callback: function(res)\n                                        {\n                                            if(res.message[0])\n                                            { \n                                                employee_name=res.message[0].employee_name\n                                                \n                                                 obj.notification=\n                                                  {\n                                                        \"docname\":frm.doc.name,\n                                                        \"key\":frm.doc.name,\n                                                        \"body\":\"New lead \"+frm.doc.lead_name+\" is created by \"+employee_name,\n                                                        \"title\":push_sales_officer_name+\" \"+\"You have a new lead\"\n                                                  }\n                                                \n                                            }\n                                        }\n                })\n                .then(function(doc)\n                {\n                      frappe.call\n                      ({\n                          \n                                        method: \"frappe.client.get_list\",\n                                        args: \n                                            {\n                                                doctype: \"User\",\n                                                \n                                                filters: { 'name':push_sales_officer_email},\n                                                \n                                                'fields': ['fcm_token'],\n                                            },\n                                                callback: function(res)\n                                                {\n                                                    if(res.message[0])\n                                                    { \n                                                        obj.to=res.message[0].fcm_token\n                                                        \n                                                        console.log(\"fcm_token---   \",res.message[0].fcm_token)\n                                                    }\n                                                }\n                        })\n                      .then(function(doc)\n                      {\n                          \n                              var serverKey=\"AAAA7i72nSA:APA91bFVkyguvpCvIHM6IUZwqzLrqK8ZWjlBhSJ6MupORQbLJKAGIeaLhvCjK1xQAKrRpGl-J3qCYJ_GULF6w36gMtXmT5YA3CdoeE6AJtcPA7ApC90Ozi4czj0C1BXj1vWG1Vl0cuIq\"\n                                $.ajax({\n                                          type: 'POST',\n                                          url: 'https://fcm.googleapis.com/fcm/send',\n                                          headers: {\n                                            'Content-Type': 'application/json',\n                                            'Authorization': 'key='+serverKey\n                                          },\n                                          data: JSON.stringify(obj),\n                                          success: function(response)\n                                          {\n                                                console.log(\"push notification\",response);\n                                          },\n                                      });   \n                    })\n                    \n                })\n\n    \t         \n        },\n        \n        customer_requirements_on_form_rendered:function(frm, cdt, cdn)\n            {\n            frm.fields_dict[\"customer_requirements\"].grid.wrapper.find(\".grid-delete-row\").hide();\n            frm.fields_dict[\"customer_requirements\"].grid.wrapper.find(\".grid-insert-row-below\").hide();\n            frm.fields_dict[\"customer_requirements\"].grid.wrapper.find(\".grid-insert-row\").hide();\n            frm.fields_dict[\"customer_requirements\"].grid.wrapper.find(\".grid-duplicate-row\").hide();\n            frm.fields_dict[\"customer_requirements\"].grid.wrapper.find(\".grid-move-row\").hide();\n            },\n            \n            \n            member_details1_on_form_rendered:function(frm, cdt, cdn)\n            {\n            frm.fields_dict[\"member_details1\"].grid.wrapper.find(\".grid-delete-row\").hide();\n            frm.fields_dict[\"member_details1\"].grid.wrapper.find(\".grid-insert-row-below\").hide();\n            frm.fields_dict[\"member_details1\"].grid.wrapper.find(\".grid-insert-row\").hide();\n            frm.fields_dict[\"member_details1\"].grid.wrapper.find(\".grid-duplicate-row\").hide();\n            frm.fields_dict[\"member_details1\"].grid.wrapper.find(\".grid-move-row\").hide();\n           \n            },\n            \n            \n            lead_events_on_form_rendered:function(frm, cdt, cdn)\n            {\n            frm.fields_dict[\"lead_events\"].grid.wrapper.find(\".grid-delete-row\").hide();\n            frm.fields_dict[\"lead_events\"].grid.wrapper.find(\".grid-insert-row-below\").hide();\n            frm.fields_dict[\"lead_events\"].grid.wrapper.find(\".grid-insert-row\").hide();\n            frm.fields_dict[\"lead_events\"].grid.wrapper.find(\".grid-duplicate-row\").hide();\n            frm.fields_dict[\"lead_events\"].grid.wrapper.find(\".grid-move-row\").hide();\n           \n            }\n            \n            \n\n});\n\n    var set_css = function (frm) \n    {\n    var el = document.querySelectorAll(\"[data-fieldname='take_appointment']\")[1].style.backgroundColor =\"lightgreen\";\n    var ele = document.querySelectorAll(\"[data-fieldname='assign']\")[1].style.backgroundColor =\"lightgreen\";\n    // var l = document.querySelectorAll(\"[data-fieldname='assign']\")[1].style..backgroundColor = \"lightgreen\";\n    }\n\n    frappe.ui.form.on('Availability', \n    {\n      meeting_date:function(frm) \n      {\n    \t    \tcur_frm.fields_dict[\"sales_executive_availability\"].$wrapper.find('.grid-body .rows').find(\".grid-row\").each(function(i, item)\n    \t        {\n    \t            let d = locals[cur_frm.fields_dict[\"sales_executive_availability\"].grid.doctype][$(item).attr('data-name')];\n    \t           \n    \t\t            $(item).find('.grid-static-col').css({'color': '#0c780c'});\n    \t           \n                });\n    \t      // console\n    \t    \n    \t    \n    \t\t// your code here\n    \t}\n    }),\n\n    frappe.ui.form.on('CRM Note', \n    {\n    \trefresh(frm) \n    \t{\n    \t    var d=locals [cdt][cdn]\n    \t    console.log(d,\"PPPPPPPPPPPPPPPPP\")\n    \t    \n    \t\t// your code here\n    \t},\n    \t\n    \tnote:function(frm,cdt,cdn)\n    \t{\n    \t    console.log(\"dddd\")\n    \t    var d=locals [cdt][cdn]\n    \t    \n    \t    console.log(d,\"PPPPPPPPPPPPPPPPP\")\n    \t    \n    \t}\n    \n    })\n    \n    // frappe.ui.form.on('Event Lead',\n    // {\n    //     // lead_events_add:function(frm,cdt,cdn)\n    //     // {\n    //     //     console.log(\"k1111\")\n    //     //     var d=locals [cdt][cdn]\n    //     //     console.log(d.idx)\n            \n    //     //     if(event_add !=[])\n    //     //     {\n    //     //         event_add[event_add.length].push(d.event_name)\n    //     //         event_add[event_add.length].push(d.date)\n    //     //         event_add[event_add.length].push(d.remind_before)\n    //     //         event_add[event_add.length].push(d.remarks)\n    //     //         event_add[event_add.length].push(d.name)\n    //     //     }\n    //     //     else\n    //     //     {\n    //     //         event_add[0].push(d.event_name)\n    //     //         event_add[0].push(d.date)\n    //     //         event_add[0].push(d.remind_before)\n    //     //         event_add[0].push(d.remarks)\n    //     //         event_add[0].push(d.name)\n    //     //     }\n            \n    //     //     console.log(\"event_add\",event_add)\n    //     // },\n        \n    //     before_lead_events_remove:function(frm,cdt,cdn)\n    //     {\n    //         console.log(\"k2222\")\n    //         var d=locals [cdt][cdn]\n    //         console.log(d.idx)\n    //     }\n        \n    // });\n        \n        \n        \n        \n   // }\n\n\n\n\n\n\n// frappe.ui.form.on('Product', {\n\t\n//   product: function(frm, cdt, cdn) {\n//     var child_doc = locals[cdt][cdn];\n//     frm.set_query('product', 'customer_requirements', function() {\n//       return {\n//         filters: \n//         {\n//           has_variants:0 // Apply filter based on the item group of the current row\n//         }\n//       };\n//     });\n  \n  \n// }\n// })",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 1,
  "modified": "2023-06-16 14:38:26.230479",
  "module": null,
  "name": "Quotation",
  "script": "\nvar item=[];\nvar qty=[];\nvar mrp=[];\nvar mop=[];\nvar allowed_companies=[]\nvar party_name_change=\" \"\nvar status1\n\n\n\nfrappe.ui.form.on('Quotation', \n{\n    // before_load:function(frm)\n    // {\n    //     if(!frm.is_new())\n\t   // {\n    // \t    if(party_name_change !=\"true\")\n    // \t    {\n    // \t        if(frm.doc.taxes_and_charges!==undefined)\n    //     \t    {\n    //     \t        if(frm.doc.taxes==undefined)\n    //     \t        {\n    //     \t            var t1=frm.doc.taxes_and_charges\n    //                     frm.set_value(\"taxes_and_charges\",undefined)\n    //                     frm.set_value(\"taxes_and_charges\",t1)\n    //                     frm.save()\n    //     \t        }\n    //     \t        else\n    //     \t        {\n    //     \t            if(!frm.doc.taxes.length>0)\n    //     \t            {\n    //     \t                var t1=frm.doc.taxes_and_charges\n    //                         frm.set_value(\"taxes_and_charges\",undefined)\n    //                         frm.set_value(\"taxes_and_charges\",t1)\n    //                         frm.save()\n    //     \t            }\n    //     \t        }\n    //     \t    }\n    //     \t    party_name_change=\" \"\n    // \t    }\n\t   // }\n    // },\n\tonload:function(frm) \n\t{ \n\t   // if(frm.doc.reloaddoc==1)\n\t   // {\n\t   //     console.log(\"v1\")\n\t   //     reload==\" \"\n\t   //    // frm.reload_doc()\n\t       \n\t   // }\n\t   \n\t     if(frm.doc.status1 !=undefined)\n\t     {\n\t         status1=frm.doc.status1\n\t     }\n\t     else\n\t     {\n\t         status1=\" \"\n\t     }\n\t     \n\t   //  console.log(\"docstatus\",frm.doc.docstatus)\n\t     \n\t   // if(!frm.is_new())\n\t   // {\n    // \t    if(party_name_change !=\"true\")\n    // \t    {\n    // \t        if(frm.doc.taxes_and_charges!==undefined)\n    //     \t    {\n    //     \t        if(frm.doc.taxes==undefined)\n    //     \t        {\n    //     \t            var t1=frm.doc.taxes_and_charges\n    //                     frm.set_value(\"taxes_and_charges\",undefined)\n    //                     frm.set_value(\"taxes_and_charges\",t1)\n    //                     frm.save()\n    //     \t        }\n    //     \t        else\n    //     \t        {\n    //     \t            if(!frm.doc.taxes.length>0)\n    //     \t            {\n    //     \t                var t1=frm.doc.taxes_and_charges\n    //                         frm.set_value(\"taxes_and_charges\",undefined)\n    //                         frm.set_value(\"taxes_and_charges\",t1)\n    //                         frm.save()\n    //     \t            }\n    //     \t        }\n    //     \t    }\n    //     \t    party_name_change=\" \"\n    // \t    }\n\t   // }\n\t    \n\t    \n\t   // else\n    // \t{\n    // \t    frm.trigger(\"set_tax\")\n    // \t    console.log(\"c3\")\n    // \t       // if(frm.doc.taxes_and_charges!==undefined)\n    //     \t   // {\n    //     \t   //     console.log(\"c4\")\n    //     \t           // var t1=frm.doc.taxes_and_charges\n    //                 //     frm.set_value(\"taxes_and_charges\",undefined)\n    //                 //     frm.set_value(\"taxes_and_charges\",t1)\n    //     \t   // }\n    // \t}\n\n\t    var user= frappe.session.user\n\t    cur_frm.dashboard.hide()\n\t    setTimeout(() => \n\t    {\n\t         frm.set_df_property(\"naming_series\",\"hidden\",1);\n\t         frm.set_df_property(\"customer_name\",\"hidden\",1);\n             frm.remove_custom_button('Opportunity','Get Items From');\n             frm.remove_custom_button('Help','Actions');\n            \n             frm.remove_custom_button('Subscription','Create');\n             frm.remove_custom_button('Set as Lost');\n             if(!frappe.user.has_role(\"Sales Officer\"))\n             {\n                  frm.remove_custom_button('Sales Order','Create');\n             }\n             \n             \n\t    }, 1000);\n\t    \n\t   if (frm.is_new())\n\t   {\n\t       frm.set_value(\"company\",undefined)\n\t   }\n\t    \n\n\t   if (frm.is_new())\n\t   {\n\t       \n\t       //frm.set_value(\"company\",undefined)\n\t       \n\t       \n\t                    frappe.call\n                        ({\n                            method: \"frappe.client.get_list\",\n                            args: \n                            {\n                                doctype: \"Employee\",\n                                fields: [\"designation\",\"name\",\"employee_name\",\"department\"],\n                                filters:{\n                                    \"user_id\":user,\n                                },\n                            },\n                            callback:function(r) \n                            {\n                                if(r.message[0])\n            \t\t            {\n            \t\t                frm.set_value(\"lead_owner\",r.message[0].name)\n            \t\t                frm.set_value(\"owner_name\",r.message[0].employee_name)\n            \t\t            }\n                            }\n                        })\n\t   }\n    \n\t   // frm.trigger(\"sales_team_filter\")\n    },\n\n    refresh:function(frm)\n\t{\n\t     $('li').removeClass(\"disabled\");\n\t   // console.log(\"NO\")\n\t    setTimeout(() => \n\t    {\n\t         frm.remove_custom_button('Set as Lost');\n\t        frm.set_df_property(\"customer_name\",\"hidden\",1);\n\t        frm.set_df_property(\"naming_series\",\"hidden\",1);\n             frm.remove_custom_button('Opportunity','Get Items From');\n              frm.remove_custom_button('Help','Actions');\n              //frm.remove_custom_button('Sales Order','Create');\n            frm.remove_custom_button('Subscription','Create');\n            frm.remove_custom_button('Set as Lost');\n\n                                      frm.set_query(\"party_name\", function()\n                                \t  {\n                                            return {\n                                                \"filters\":\n                                                {\n                                                    \"address_line1\":[\"!=\",\"\"]\n                                                }\n                                            };\n                                      });\n                                      \n             if(!frappe.user.has_role(\"Sales Officer\"))\n             {\n                  frm.remove_custom_button('Sales Order','Create');\n             }\n             else\n             {\n                 if(frm.doc.created_salesorder==1||frm.doc.created_customer==0)\n                 {\n                     frm.remove_custom_button('Sales Order','Create');\n                 }\n             }\n\t    }, 1000);\n\t    cur_frm.dashboard.hide()\n\t    \n\t    \n\n\t    \n\t   // frm.fields_dict['district_tree'].grid.get_field('allocated_to_employeeid').get_query = function(doc, cdt, cdn) \n    //     {\n    //         return {    \n    //             filters:[\n    //               ['designation', '=',\"Sales Officer\"],\n    //               ['asm', '=',frm.doc.managed_by]\n    //             ]\n    //         }\n    //     }\n        \n       \n        \n                        frappe.call\n                        ({\n                            method: \"frappe.client.get_list\",\n                            args: \n                            {\n                                doctype: \"User Permission\",\n                                fields: [\"for_value\"],\n                                filters:\n                                {\n                                    \"allow\":\"Super Stockist\",\n                                    \"user\":frappe.session.user,\n                                },\n                               \n                            },\n                            callback:function(r) \n                            {\n                                if(r.message[0])\n                                {\n                                     $.each(r.message,function(i,v)\n                                     {\n                                         allowed_companies[i]=v.for_value;\n                                     });\n                                }\n                            }\n                        })\n                        .then(function(doc)\n                        {\n                             frm.set_query(\"company\", function()\n                                \t  {\n                                            return {\n                                                \"filters\": \n                                                {\n                                                    \"is_group\":0,\n                                                    \"name\":[\"in\",allowed_companies]\n                                                }\n                                            };\n                                      });\n                        })\n        \n        if(!frm.is_new()&&frm.doc.docstatus==1)\n\t    {\n\t         if(frappe.user.has_role(\"Sales Officer\")||frappe.user.has_role(\"Marketing Officer\"))\n            {\n                // if(cur_frm.doc.quotation_to==\"Lead\"&&frm.doc.created_customer==0)\n                if(frm.doc.created_customer==0)\n                {\n                    if(frappe.user.has_role(\"Sales Officer\")&&frm.doc.reason_for_lost_quotation==undefined)\n                    {\n                        frm.trigger(\"lost_button\")\n                    }\n                    \n                    if(frappe.user.has_role(\"Marketing Officer\")&&frm.doc.by_marketing_officer==undefined)\n                    {\n                        frm.trigger(\"lost_button\")\n                    }\n                }\n                // // if(frm.doc.status==\"Open\")\n                // // {\n                //         if(cur_frm.doc.quotation_to==\"Lead\")\n                //         {\n                //             frm.trigger(\"lost_button\")\n                //             // frm.add_custom_button(__(\"Lost\"), function() \n                //             // {\n                //             //              var d = new frappe.ui.Dialog\n                //             //              ({\n                //             //                 \ttitle: __(\"Set as Lost\"),\n                //             //                 \tfields:\n                //             //                 \t[  \n                //             //                     \t{\n                //             //                     \t\tfieldtype: \"Small Text\",\n                //             //                     \t\tfieldname: \"lost_reasons\",\n                //             //                     \t\tlabel: __(\"Lost Reasons\"),\n                                                \t\t\n                //             //                     \t\treqd: 1,\n                //             //                     \t},\n                //             // \t               ],\n                //             // \t                primary_action_label: 'Submit',\n                //             //                         primary_action(values) \n                //             //                         {\n                //             //                             var role1\n                //             //                             if(frappe.user.has_role(\"Sales Officer\"))\n                //             //                             {\n                //             //                                 role1=\"Sales Officer\"\n                //             //                             }\n                //             //                             else\n                //             //                             {\n                //             //                                 role1=\"Marketing Officer\"\n                //             //                             }\n                //             //                                                     frappe.call\n                //             //                             \t                    ({\n                //             //                                                         \"method\":\"lost_quotation\",\n                //             //                                                         \"args\":{\n                //             //                                                                      doc_name:frm.doc.name,\n                //             //                                                                      status:\"Lost\",\n                //             //                                                                      order_lost_reason:values.lost_reasons,\n                //             //                                                                      reason_for_lost_quotation:values.lost_reasons,\n                //             //                                                                      officer_role:role1,\n                //             //                                                                 },\n                //             //                                                     });\n                                                        \n                                                        \n                                                        \n                                                        \n                //             //                           // console.log(values);\n                                                       \n                                                       \n                //             //                             // frm.set_value(\"status\",\"Lost\")\n                                                        \n                //             //                             // frm.set_value(\"order_lost_reason\",values.lost_reasons)\n                //             //                             // frm.set_value(\"reason_for_lost_quotation\",values.lost_reasons)\n                                                        \n                                                        \n                //             //                             frappe.db.set_value('Lead', frm.doc.party_name, 'status', 'Lost Quotation')\n                                                        \n                                                        \n                                                        \n                //             //                             d.hide();\n                                                        \n                //             //                             //frm.save('Update');\n                                                        \n                                                        \n                                                        \n                                                       \n                //             //                         },\n                //             //                 });\n                //             //      d.show()\n                //             // })  \n                //         }              \n                // //}   \n            }\n            \n            if(frappe.user.has_role(\"Sales Officer\"))\n            {\n                if(frm.doc.status==\"Open\")\n                {\n                    if(frm.doc.quotation_to==\"Lead\")\n                    {\n                        if(frm.doc.created_customer==0)\n                        {\n                            frm.add_custom_button(__(\"Create Customer\"), function() \n                            {\n                                console.log(\"KKK\")\n                                     frappe.call\n                                \t ({\n                                          method: \"frappe.client.get\",\n                                    \t   args: \n                                    \t\t{\n                                    \t\t     doctype: \"Lead\",\n                                        \t\t filters: {\n                                        \t\t\t        \"name\":frm.doc.party_name,\n                                        \t\t\t\t\t\t\n                                        \t\t\t      }\n                            \t\t        },\n                            \t\t        callback:function (data)\n                            \t\t        {\n                            \t\t            if(data)\n                            \t\t            {\n                                \t\t              var t1=data.message.lead_name\n                                \t\t              var t2=data.message.lead_category\n                                \t\t              \n                                \t\t              //console.log(\"data\",data)\n                            \t\t                  \n                            \t\t                                      frappe.db.insert\n                                            \t\t                      ({\n                                                                                  \"doctype\": \"Customer\",\n                                                                                  \"customer_name\": t1,\n                                                                                  \"customer_group\": t2,\n                                                                                  \"territory\":\"India\",\n                                                                                  \"customer_type\":\"Individual\",\n                                                                                  \"lead_name\":frm.doc.party_name,\n                                                                                  \"lead\":frm.doc.party_name,\n                                                                                  \"all_vehicle_permissible\":frm.doc.all_vehicle_permissible,\n                                                                                  \"limited_vehicle_permissible\":frm.doc.limited_vehicle_permissible,\n                                                                                  \"type_of_vehicle_go_to_site\":frm.doc.type_of_vehicle_go_to_site,\n                                                                                  \"sale_area\":frm.doc.sale_area,\n                                                                                //   \"address_line1\":\"a1\",\n                                                                                //   \"address_line2\":\"a2\",\n                                                                          })\n                                                                          .then(function(doc)\n                                                                          {\n                                                                              \n                                                                            frappe.msgprint\n                                                                            ({\n                                                                                            title: __('Notification'),\n                                                                                            indicator: 'green',\n                                                                                            message: __('Customer Created successfully')\n                                                                            });\n            \n                                                                              //order_lost_reason\n                                                                            setTimeout(() => \n    \t                                                                    {\n                                                                                frm.remove_custom_button('Create Customer');\n                                                                                frm.remove_custom_button('Lost');\n    \t                                                                    },1000);\n    \t                                                                    \n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"created_customer\",\n                                                                                    \"args\":{\n                                                                                                 doc_name:frm.doc.name,\n                                                                                            },\n                                                                                });\n                                                                                \n                                                                          })\n                            \t\t            }\n                            \t\t        }\n                                \t })    \n                                 \n                                 \n                                 \n                                 \n                                 \n                                 \n                                 \n                                //      frappe.call\n                                // \t ({\n                                //           method: \"frappe.client.get\",\n                                //     \t   args: \n                                //     \t\t{\n                                //     \t\t     doctype: \"Lead\",\n                                //         \t\t filters: {\n                                //         \t\t\t        \"name\":frm.doc.party_name,\n                                        \t\t\t\t\t\t\n                                //         \t\t\t      }\n                            \t\t  //      },\n                            \t\t  //      callback:function (data)\n                            \t\t  //      {\n                            \t\t  //          if(data)\n                            \t\t  //          {\n                                // \t\t              var t1=data.message.lead_name\n                                // \t\t              var t2=data.message.lead_category\n                                \t\t              \n                                // \t\t              console.log(\"data\",data)\n                            \t\t                  \n                            \t\t  //                                    //frappe.db.insert\n                            \t\t                                      \n                                //             \t\t                      //({\n                                //                                     //               \"doctype\": \"Customer\",\n                                //                                     //               \"customer_name\": t1,\n                                //                                     //               \"customer_group\": t2,\n                                //                                     //               \"territory\":\"India\",\n                                //                                     //               \"customer_type\":\"Individual\",\n                                //                                     //               \"lead_name\":frm.doc.party_name,\n                                //                                     //               \"lead\":frm.doc.party_name,\n                                //                                     //               \"all_vehicle_permissible\":frm.doc.all_vehicle_permissible,\n                                //                                     //               \"limited_vehicle_permissible\":frm.doc.limited_vehicle_permissible,\n                                //                                     //               \"type_of_vehicle_go_to_site\":frm.doc.type_of_vehicle_go_to_site,\n                                //                                     //               \"sale_area\":frm.doc.sale_area,\n                                //                                     //             //   \"address_line1\":\"a1\",\n                                //                                     //             //   \"address_line2\":\"a2\",\n                                //                                     //       })\n                                                                    \n                                                                    \n                                                                    \n                                                                    \n                                //                                     //       .then(function(doc)\n                                //                                     //       {\n                                                                              \n                                //                                     //         frappe.msgprint\n                                //                                     //         ({\n                                //                                     //                         title: __('Notification'),\n                                //                                     //                         indicator: 'green',\n                                //                                     //                         message: __('Customer Created successfully')\n                                //                                     //         });\n            \n                                //                                     //           //order_lost_reason\n                                //                                     //         setTimeout(() => \n    \t                           //                                    //     {\n                                //                                     //             frm.remove_custom_button('Create Customer');\n                                //                                     //             frm.remove_custom_button('Lost');\n    \t                           //                                    //     },1000);\n                                //                                     //             frappe.call\n                                //                         \t           //         ({\n                                //                                     //                 \"method\":\"created_customer\",\n                                //                                     //                 \"args\":{\n                                //                                     //                              doc_name:frm.doc.name,\n                                //                                     //                         },\n                                //                                     //             });\n                                                                                \n                                //                                     //       })\n                            \t\t  //          }\n                            \t\t  //      }\n                                // \t })\n                                 \n                                                                        \n                            })\n                        }\n                        //   frappe.call\n                        // \t ({\n                        //           method: \"frappe.client.get\",\n                        //     \t   args: \n                        //     \t\t{\n                        //     \t\t     doctype: \"Lead\",\n                        //         \t\t filters: {\n                        //         \t\t\t        \"name\":frm.doc.party_name,\n                                \t\t\t\t\t\t\n                        //         \t\t\t      }\n                    \t\t  //      },\n                    \t\t  //      callback:function (data)\n                    \t\t  //      {\n                    \t\t  //          if(data)\n                    \t\t  //          {\n                    \t\t  //            var t1=data.message.lead_name\n                    \t\t  //            var t2=data.message.lead_category\n                    \t\t              \n                    \t\t  //            frappe.call\n                        //                     \t ({\n                        //                               method: \"frappe.client.get_list\",\n                        //                         \t   args: \n                        //                         \t\t{\n                        //                         \t\t     doctype: \"Customer\",\n                        //                 \t\t             fieldname: [\"designation\",\"lead_name\"],\n                        //                             \t\t filters: {\n                        //                             \t\t\t        \"lead_name\":frm.doc.party_name,\n                                                    \t\t\t\t\t\t\n                        //                             \t\t\t      }\n                        //                 \t\t        },\n                        //                 \t\t        callback: function (data)\n                        //                 \t\t        {\n                        //                 \t\t            if(data.message)\n                        //                 \t\t            {\n                        //                 \t\t                if(data.message.length==0)\n                        //                 \t\t                 {\n                        //                     \t\t                frm.add_custom_button(__(\"Create Customer\"), function() \n                        //                                             {\n                        //                                                  frappe.db.insert\n                        //                     \t\t                      ({\n                        //                                                           \"doctype\": \"Customer\",\n                        //                                                           \"customer_name\": t1,\n                        //                                                           \"customer_group\": t2,\n                        //                                                           \"territory\":\"India\",\n                        //                                                           \"customer_type\":\"Individual\",\n                        //                                                           \"lead_name\":frm.doc.party_name,\n                        //                                                           \"lead\":frm.doc.party_name,\n                        //                                                           \"all_vehicle_permissible\":frm.doc.all_vehicle_permissible,\n                        //                                                           \"limited_vehicle_permissible\":frm.doc.limited_vehicle_permissible,\n                        //                                                           \"type_of_vehicle_go_to_site\":frm.doc.type_of_vehicle_go_to_site,\n                        //                                                           \"sale_area\":frm.doc.sale_area,\n                        //                                                         //   \"address_line1\":\"a1\",\n                        //                                                         //   \"address_line2\":\"a2\",\n                        //                                                   })\n                        //                                                   .then(function(doc)\n                        //                                                   {\n                        //                                                       //order_lost_reason\n                        //                                                         frm.remove_custom_button('Create Customer');\n                        //                                                         frm.remove_custom_button('Lost');\n                                                                                \n                        //                                                         frappe.call\n                        //                                 \t                    ({\n                        //                                                             \"method\":\"created_customer\",\n                        //                                                             \"args\":{\n                        //                                                                          doc_name:frm.doc.name,\n                        //                                                                     },\n                        //                                                         });\n                                                                                \n                        //                                                   })\n                        //                                             })\n                        //                 \t\t                 }\n                        //                 \t\t                 else\n                        //                 \t\t                 {\n                        //                 \t\t                      frm.remove_custom_button('Lost');\n                        //                 \t\t                 }\n                        //                 \t\t            }\n                        //                 \t\t        }\n                        //                     \t })\n                    \t\t              \n                    \t\t              \n                    \t\t              \n                    \t\t  //          }\n                    \t\t            \n                    \t\t  //      }\n                        // \t })\n    \n                        \n                    }\n                }\n                \n                \n                \n                \n                \n                \n            }\n\t    }\n        \n        \n        \n       \n        \n        \n        // if(frm.doc.status==\"Open\")\n        // {\n        //     if(frm.doc.quotation_to==\"Lead\")\n        //     {\n        //          frm.add_custom_button(__(\"Create Customer\"), function() \n        //          {\n        //                  frappe.call\n        //             \t ({\n        //                       method: \"frappe.client.get\",\n        //                 \t   args: \n        //                 \t\t{\n        //                 \t\t     doctype: \"Lead\",\n        //                     \t\t filters: {\n        //                     \t\t\t        \"name\":frm.doc.party_name,\n                            \t\t\t\t\t\t\n        //                     \t\t\t      }\n        //         \t\t        },\n        //         \t\t        callback:function (data)\n        //         \t\t        {\n        //         \t\t            if(data)\n        //         \t\t            {\n        //         \t\t              var t1=data.message.lead_name\n        //         \t\t              var t2=data.message.lead_category\n\n        //         \t\t                    frappe.call\n        //                                 \t ({\n        //                                           method: \"frappe.client.get_list\",\n        //                                     \t   args: \n        //                                     \t\t{\n        //                                     \t\t     doctype: \"Customer\",\n        //                             \t\t             fieldname: [\"designation\",\"lead_name\"],\n        //                                         \t\t filters: {\n        //                                         \t\t\t        \"lead_name\":frm.doc.party_name,\n                                                \t\t\t\t\t\t\n        //                                         \t\t\t      }\n        //                             \t\t        },\n        //                             \t\t        callback: function (data)\n        //                             \t\t        {\n        //                             \t\t            if(data.message)\n        //                             \t\t            {\n        //                             \t\t              //  frm.set_value(\"created_customer\",1)\n        //                                             //               frm.save('Submit');\n                                    \t\t                \n        //                             \t\t                 if(data.message.length==0)\n        //                             \t\t                 {\n        //                             \t\t                      frappe.db.insert\n        //                             \t\t                      ({\n        //                                                                   \"doctype\": \"Customer\",\n        //                                                                   \"customer_name\": t1,\n        //                                                                   \"customer_group\": t2,\n        //                                                                   \"territory\":\"India\",\n        //                                                                   \"customer_type\":\"Individual\",\n        //                                                                   \"lead_name\":frm.doc.party_name,\n        //                                                                   \"lead\":frm.doc.party_name,\n        //                                                                   \"all_vehicle_permissible\":frm.doc.all_vehicle_permissible,\n        //                                                                   \"limited_vehicle_permissible\":frm.doc.limited_vehicle_permissible,\n        //                                                                   \"type_of_vehicle_go_to_site\":frm.doc.type_of_vehicle_go_to_site,\n        //                                                                   \"sale_area\":frm.doc.sale_area,\n        //                                                                 //   \"address_line1\":\"a1\",\n        //                                                                 //   \"address_line2\":\"a2\",\n        //                                                           }).\n        //                                                           then(function(doc)\n        //                                                           {\n        //                                                               frm.set_value(\"created_customer\",1)\n        //                                                               frm.save()\n        //                                                           })\n                                                                        \n                                                                        \n        //                                                                 frappe.msgprint\n        //                                                                 ({\n        //                                                                                 title: __('Notification'),\n        //                                                                                 indicator: 'green',\n        //                                                                                 message: __('Customer Created successfully')\n        //                                                                 });\n                                    \t\t                     \n        //                             \t\t                 }\n                                    \t\t                 \n        //                             \t\t                 else\n        //                             \t\t                 {\n        //                             \t\t                     frappe.msgprint\n        //                             \t\t                     ({\n        //                                                                                 title: __('Notification'),\n        //                                                                                 indicator: 'green',\n        //                                                                                 message: __('You are already created the customer from this lead')\n        //                                                          });\n        //                             \t\t                 }\n        //                             \t\t            }\n        //                             \t\t        }\n        //                                 \t })\n        //         \t\t            }\n        //         \t\t        }\n        //             \t })\n                    \t \n        //             // \t frm.set_value(\"check\",1)\n        //             // \t frm.save('Update');\n        //          })\n                 \n        //           frm.change_custom_button_type('Create Customer', null, 'primary');\n        //     }\n        // }\n        \n        \n        // if(frappe.user.has_role(\"Area Sales Manager\"))\n        // {\n        //     frm.remove_custom_button('Create Customer');\n        // }\n\t},\n\t\n\tlost_button:function(frm)\n\t{\n\t     frm.add_custom_button(__(\"Lost\"), function() \n                        {\n                                     var d = new frappe.ui.Dialog\n                                     ({\n                                        \ttitle: __(\"Set as Lost\"),\n                                        \tfields:\n                                        \t[  \n                                            \t{\n                                            \t\tfieldtype: \"Small Text\",\n                                            \t\tfieldname: \"lost_reasons\",\n                                            \t\tlabel: __(\"Lost Reasons\"),\n                                            \t\t\n                                            \t\treqd: 1,\n                                            \t},\n                        \t               ],\n                        \t                primary_action_label: 'Submit',\n                                                primary_action(values) \n                                                {\n                                                    var role1\n                                                    if(frappe.user.has_role(\"Sales Officer\"))\n                                                    {\n                                                        role1=\"Sales Officer\"\n                                                    }\n                                                    else\n                                                    {\n                                                        role1=\"Marketing Officer\"\n                                                    }\n                                                                            frappe.call\n                                                    \t                    ({\n                                                                                \"method\":\"lost_quotation\",\n                                                                                \"args\":{\n                                                                                             doc_name:frm.doc.name,\n                                                                                             status:\"Lost\",\n                                                                                             order_lost_reason:values.lost_reasons,\n                                                                                             reason_for_lost_quotation:values.lost_reasons,\n                                                                                             officer_role:role1,\n                                                                                        },\n                                                                            });\n                                                    \n                                                    \n                                                    \n                                                    \n                                                   // console.log(values);\n                                                   \n                                                   \n                                                    // frm.set_value(\"status\",\"Lost\")\n                                                    \n                                                    // frm.set_value(\"order_lost_reason\",values.lost_reasons)\n                                                    // frm.set_value(\"reason_for_lost_quotation\",values.lost_reasons)\n                                                    \n                                                    \n                                                    frappe.db.set_value('Lead', frm.doc.party_name, 'status', 'Lost Quotation')\n                                                    \n                                                    \n                                                    \n                                                    d.hide();\n                                                    \n                                                    //frm.save('Update');\n                                                    \n                                                    \n                                                    \n                                                   \n                                                },\n                                        });\n                             d.show()\n                        })    \n\t},\n\t\n\t\n\tparty_name:function(frm)\n\t{\n\t    party_name_change=\"true\"\n\t    \n\t    \n\t   // if(frm.doc.quotation_to ==\"Lead\")\n\t   // {\n\t   //     if(frm.doc.party_name.length>0)\n\t   //     {\n\t   //                       frappe.call\n    //                           ({\n                                                                                                                \n    //                              method: \"frappe.client.get_list\",\n    //                                 args: \n    //                                         {\n    //                                             doctype:\"Lead\",\n                                                \n    //                                              fields:[\"limited_vehicle_permissible\",\"all_vehicle_permissible\",\"lac\",\"type_of_vehicle_go_to_site\"],\n    //                                             filters: { 'name':frm.doc.party_name},\n    //                                         },\n    //                                     callback: function(res)\n    //                                     {\n    //                                         if(res)\n    //                                           {\n                                                \n    //                                               frm.set_value('type_of_vehicle_go_to_site',res.message[0].type_of_vehicle_go_to_site)\n    //                                               frm.set_value('limited_vehicle_permissible',res.message[0].limited_vehicle_permissible)\n    //                                               frm.set_value('all_vehicle_permissible',res.message[0].all_vehicle_permissible)\n    //                                               frm.set_value('customer_area',res.message[0].lac)\n                                                  \n    //                                               console.log(res.message[0])\n                                                  \n                                                  \n    //                                           }\n    //                                           else\n    //                                     \t    {\n    //                                     \t        frm.set_value(\"limited_vehicle_permissible\",0);   \n    //                                     \t        frm.set_value(\"all_vehicle_permissible\",0);  \n    //                                     \t        frm.set_value(\"type_of_vehicle_go_to_site\",undefined); \n    //                                     \t        frm.set_value(\"customer_area\",undefined); \n    //                                     \t    }\n    //                                     }\n    //                           })  \n                              \n\t   //     }\n\t   // }\n\t   // else if(frm.doc.quotation_to ==\"Customer\")\n\t   // {\n\t   //                       frappe.call\n    //                           ({\n                                                                                                                \n    //                              method: \"frappe.client.get_list\",\n    //                                 args: \n    //                                         {\n    //                                             doctype:\"Customer\",\n    //                                             fields: [\"type_of_vehicle_go_to_site\",\"limited_vehicle_permissible\",\"all_vehicle_permissible\",\"customer_area\"],\n    //                                             filters: { 'name':frm.doc.party_name},\n    //                                         },\n    //                                     callback: function(res)\n    //                                     {\n    //                                         if(res.message[0])\n    //                                           {\n                                                \n    //                                               frm.set_value('type_of_vehicle_go_to_site',res.message[0].type_of_vehicle_go_to_site)\n    //                                               frm.set_value('limited_vehicle_permissible',res.message[0].limited_vehicle_permissible)\n    //                                               frm.set_value('all_vehicle_permissible',res.message[0].all_vehicle_permissible)\n    //                                               frm.set_value('customer_area',res.message[0].customer_area)\n    //                                           }\n    //                                           else\n    //                                     \t    {\n    //                                     \t        frm.set_value(\"limited_vehicle_permissible\",0);   \n    //                                     \t        frm.set_value(\"all_vehicle_permissible\",0);  \n    //                                     \t        frm.set_value(\"type_of_vehicle_go_to_site\",undefined); \n    //                                     \t        frm.set_value(\"customer_area\",undefined); \n    //                                     \t    }\n    //                                     }\n    //                           })  \n\t   // }\n\t   // else\n\t   // {\n\t   //     frm.set_value(\"limited_vehicle_permissible_\",0);   \n\t   //     frm.set_value(\"all_vehicle_permissible\",0);  \n\t   //     frm.set_value(\"type_of_vehicle_go_to_site\",undefined); \n\t   //     frm.set_value(\"customer_area\",undefined); \n\t   // }\n\t    \n\t    if(frm.doc.quotation_to==\"Lead\")\n\t    {\n\t        if(frm.doc.party_name.length>0)\n\t        {\n\t            frappe.call\n            \t ({\n                        method: \"frappe.client.get\",\n                \t   args: \n                \t\t{\n                \t\t     doctype: \"Lead\",\n                    \t\t filters: {\n                    \t\t\t        \"name\": frm.doc.party_name,\n                    \t\t\t      },\n        \t\t        },\n        \t\t        callback: function (data)\n        \t\t        {\n        \t\t            item=[]\n        \t\t            qty=[]\n        \t\t            cur_frm.clear_table(\"items\");\n        \t\t          //  cur_frm.clear_table(\"taxes\");\n        \t\t          //  frm.set_value(\"total_qty\",undefined)\n        \t\t          //  frm.set_value(\"total\",undefined)\n        \t\t            \n        \t\t             \n        \t\t             \n        \t\t            \n        \t\t            if(data.message.customer_requirements.length>0)\n        \t\t            {\n        \t\t                $.each(data.message.customer_requirements, function(i,row)\n        \t\t                {\n        \t\t                     item[i]=row.product\n        \t\t                     \n        \t\t                  //   item_name[i]=row.\n        \t\t                     \n        \t\t                     qty[i]=row.qty\n                                });\n\n                                  cur_frm.clear_table(\"items\");\n                                  cur_frm.refresh_fields(); \n           \n                                        for(var i=0;i<item.length;i++)\n                                        {\n                                            var child = cur_frm.add_child(\"items\");\n                                            frappe.model.set_value(child.doctype, child.name, \"item_code\",item[i]);\n                                            frappe.model.set_value(child.doctype, child.name, \"item_name\",item[i]);\n                                            frappe.model.set_value(child.doctype, child.name, \"description\",item[i]);\n                                            frappe.model.set_value(child.doctype, child.name, \"qty\",qty[i]);\n                                            frappe.model.set_value(child.doctype, child.name, \"uom\",\"Nos\");\n                                            cur_frm.refresh_field(\"items\");\n                                        }\n        \t\t            }\n        \t\t            \n        \t\t          //  var x=frm.doc.taxes_and_charges\n        \t\t          //  frm.set_value(taxes_and_charges,undefined)\n        \t\t          //  frm.refresh_field(\"taxes_and_charges\")\n        \t\t          //  frm.set_value(taxes_and_charges,x)\n        \t\t          //  frm.refresh_field(\"taxes_and_charges\")\n        \t\t          //  frm.trigger(\"set_tax\")\n        \t\t          //  frm.refresh_field(\"taxes\")\n        \t\t         \n        \t\t            \n        \t\t        }\n            \t });\n\t        }\n\t    }\n\t    \n\t   // if(frm.doc.quotation_to==\"Lead\")\n\t   // {\n\t   //     if(frm.doc.party_name.length>0)\n\t   //     {\n\t        \n\t   //         frappe.call\n    //         \t ({\n    //                     method: \"frappe.client.get\",\n    //             \t   args: \n    //             \t\t{\n    //             \t\t     doctype: \"Lead\",\n    //                 \t\t filters: {\n    //                 \t\t\t        \"name\": frm.doc.party_name,\n                    \t\t\t\t\t\t\n    //                 \t\t\t      },\n    //     \t\t        },\n    //     \t\t        callback: function (data)\n    //     \t\t        {\n    //     \t\t            if(data.message.customer_requirements.length>0)\n    //     \t\t            {\n    //     \t\t                $.each(data.message.customer_requirements, function(i,row)\n    //     \t\t                {\n    //     \t\t                     item[i]=row.product\n    //     \t\t                     qty[i]=row.qty\n    //                             });\n    //                               cur_frm.clear_table(\"items\");\n    //                               cur_frm.refresh_fields(); \n\n    //                                     for(var i=0;i<item.length;i++)\n    //                                     {\n                                                                                      \n    //                                         var child = cur_frm.add_child(\"items\");\n    //                                         frappe.model.set_value(child.doctype, child.name, \"item_code\",item[i]);\n    //                                         frappe.model.set_value(child.doctype, child.name, \"qty\",qty[i]);\n    //                                         cur_frm.refresh_field(\"items\");\n    //                                     }\n    //     \t\t            }\n    //     \t\t        }\n    //         \t });\n\t   //     }\n\t   // }\n\t},\n\n//     customer_name:function(frm)\n//     {\n//         \tif(frm.doc.party_name !=undefined)\n//     \t    {\n//     \t        if(frm.doc.party_name.length>0)\n//     \t        {\n//             \t    if(frm.doc.quotation_to==\"Lead\")\n//             \t    {\n//             \t              frappe.call\n//                               ({\n                                                                                                                \n//                                  method: \"frappe.client.get_list\",\n//                                     args: \n//                                             {\n//                                                 doctype:\"Lead\",\n//                                                 fields: [\"type_of_vehicle_go_to_site\"],\n//                                                 filters: { 'name':frm.doc.party_name},\n//                                             },\n//                                         callback: function(res)\n//                                         {\n//                                             if(res.message[0].type_of_vehicle_go_to_site)\n//                                               {\n                                                \n//                                                   frm.set_value('type_of_vehicle_go_to_site',res.message[0].type_of_vehicle_go_to_site)\n//                                                 //   frappe.db.set_value('User', frm.doc.email_id, 'module_profile',frm.doc.module_profile)\n//                                               }\n//                                         }\n//                               })  \n//             \t    }\n//             \t    else\n//             \t    {\n//             \t         frappe.call\n//                               ({\n                                                                                                                \n//                                  method: \"frappe.client.get_list\",\n//                                     args: \n//                                             {\n//                                                 doctype:\"Customer\",\n//                                                 fields: [\"type_of_vehicle_go_to_site\"],\n//                                                 filters: { 'name':frm.doc.party_name},\n//                                             },\n//                                         callback: function(res)\n//                                         {\n//                                             if(res.message[0].type_of_vehicle_go_to_site)\n//                                               {\n                                                \n//                                                   frm.set_value('type_of_vehicle_go_to_site',res.message[0].type_of_vehicle_go_to_site)\n                                                \n//                                               }\n//                                         }\n//                               })  \n//             \t    }\n//     \t        }\n//     \t    } \n//     },\n    \n    company:function(frm)\n    {\n        frm.set_value(\"super_stockist\",frm.doc.company)  \n        frm.trigger(\"set_tax\")\n    },\n    \n    set_tax:function(frm)\n    {\n        if(frm.doc.party_name)\n        {\n                         frappe.call\n    \t                 ({\n                                    method: 'frappe.client.get_list',\n                                    args:\n                                    {\n                                        'doctype':'Sales Taxes and Charges Template',\n                                \t   \tfilters:{\n                                                 \"company\":frm.doc.company,\"tax_category\":frm.doc.tax_category,\n                                \t       \t    }  ,\n                                \t    fields:[\"tax_category\",\"name\",\"title\"]\n                                \t},\n                                \t\n                                    callback: function(r)\n                                    {\n                                        if(r.message)\n                                        {\n                                            frm.set_value(\"taxes_and_charges\",r.message[0].name)\n                                        }\n                                    }\n    \t                 })\n        }\n    },\n    \n    // limited_vehicle_permissible(frm)\n    // {\n    //     if (frm.doc.limited_vehicle_permissible==1)\n    //     {\n    //         frm.set_value(\"all_vehicle_permissible\",0)\n    //     }\n    // },\n    \n    // all_vehicle_permissible(frm)\n    // {\n    //     if (frm.doc.all_vehicle_permissible ==1)\n    //     {\n    //          frm.set_value(\"limited_vehicle_permissible\",0)\n    //     }\n    // },\n    \n    after_save:function(frm)\n    {\n        allowed_companies=[] \n        if(status1!=frm.doc.status1)\n        {\n            if(frm.doc.status1==\"Approved\"||frm.doc.status1==\"Cancelled\"||frm.doc.status1==\"Lost\")\n            {\n                frm.trigger(\"push_notification\")\n            }\n        }\n        \n       \n    //   frm.reload_doc();\n       \n       \n    },\n    \n    push_notification:function(frm)\n    {\n        var push_employee_name;\n        var obj={}\n           \n              frappe.call\n              ({\n                                method: \"frappe.client.get_list\",\n                                args: \n                                    {\n                                        doctype: \"Employee\",\n                                        \n                                        filters: { 'email_id':frappe.session.user},\n                                        \n                                        'fields': ['employee_name'],\n                                    },\n                                        callback: function(res1)\n                                        {\n                                            if(res1.message[0])\n                                            { \n                                                push_employee_name=res1.message[0].employee_name\n                                            }\n                                        }\n                })\n                .then(function(doc)\n                {\n                            frappe.call\n                             ({\n                                    method: \"frappe.client.get_list\",\n                                    args: \n                                    {\n                                        doctype: \"Assign Sale Area\",\n                                         fields: [\"sales_officer\",\"sales_officer_email\",\"sales_officer_name\"],\n                                        filters: { 'name':frm.doc.sale_area},\n                                    },\n                             })\n                             .then(function(doc)\n                             {\n                                 if(frappe.session.user !=doc.message[0].sales_officer_email)\n                                 {\n                                      frappe.call\n                                      ({\n                                                        method: \"frappe.client.get_list\",\n                                                        args: \n                                                            {\n                                                                doctype: \"User\",\n                                                                \n                                                                filters: { 'name':doc.message[0].sales_officer_email},\n                                                                \n                                                                'fields': ['fcm_token'],\n                                                            },\n                                                                callback: function(res)\n                                                                {\n                                                                    if(res.message[0])\n                                                                    { \n                                                                        obj.to=res.message[0].fcm_token\n                                                                        \n                                                                        if(frm.doc.status1==\"Lost\")\n                                                                        {\n                                                                              obj.notification=\n                                                                              {\n                                                                                    \"docname\":frm.doc.name,\n                                                                                    \"key\":frm.doc.name,\n                                                                                    \"body\":\"Quotation status changed into lost by \"+push_employee_name,\n                                                                                    \"title\":\"Quotation \"+frm.doc.name+\" Lost\"\n                                                                              } \n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            if(frm.doc.quotation_to==\"Lead\")\n                                                                            {\n                                                                              obj.notification=\n                                                                              {\n                                                                                    \"docname\":frm.doc.name,\n                                                                                    \"key\":frm.doc.name,\n                                                                                    \"body\":\"Quotation \"+frm.doc.name+\" against the lead \"+frm.doc.customer_name+\" is \"+frm.doc.status1+\" by \"+push_employee_name,\n                                                                                    \"title\":\"Quotation against the lead \"+frm.doc.customer_name+\" is \"+frm.doc.status1\n                                                                              } \n                                                                            }\n                                                                            else\n                                                                            {\n                                                                                 obj.notification=\n                                                                                  {\n                                                                                        \"docname\":frm.doc.name,\n                                                                                        \"key\":frm.doc.name,\n                                                                                        \"body\":\"Quotation \"+frm.doc.name+\" against the customer \"+frm.doc.customer_name+\" is \"+frm.doc.status1+\" by \"+push_employee_name,\n                                                                                        \"title\":\"Quotation against the customer \"+frm.doc.customer_name+\" is \"+frm.doc.status1\n                                                                                  } \n                                                                            }\n                                                                        }\n                                                                    }\n                                                                }\n                                        })\n                                        .then(function(doc2)\n                                        {\n                                            //console.log(\"c9\")\n                                                var serverKey=\"AAAA7i72nSA:APA91bFVkyguvpCvIHM6IUZwqzLrqK8ZWjlBhSJ6MupORQbLJKAGIeaLhvCjK1xQAKrRpGl-J3qCYJ_GULF6w36gMtXmT5YA3CdoeE6AJtcPA7ApC90Ozi4czj0C1BXj1vWG1Vl0cuIq\"\n                                                $.ajax({\n                                                          type: 'POST',\n                                                          url: 'https://fcm.googleapis.com/fcm/send',\n                                                          headers: {\n                                                            'Content-Type': 'application/json',\n                                                            'Authorization': 'key='+serverKey\n                                                          },\n                                                          data: JSON.stringify(obj),\n                                                          success: function(response)\n                                                          {\n                                                                console.log(response);\n                                                          },\n                                                      });   \n                                            \n                                        })\n                                 }\n                                 \n                             })\n                })\n    },\n    \n    validate:function(frm)\n    {\n        // console.log(\"lll\")\n        if(frm.doc.all==0  &&  frm.doc.goods_ape==0 &&frm.doc.sml_isuzu==0&&frm.doc.mahindra_mini_truck==0&&frm.doc.mahindra_jeeto_plus==0&&frm.doc.tata_ace==0&&frm.doc.mahindra_bolero_pickups==0&&frm.doc.tata_407==0&&frm.doc.eicher==0&&frm.doc.bharat_benz==0)\n        {\n            frappe.validated = false;\n            msgprint(\"Mandatory fields required in possible vehicle section\")\n        }\n        else\n        {\n           \n            frappe.validated =true;\n            \n        }\n        \n        // if (frm.doc.transaction_date < frappe.datetime.get_today()) \n        // {\n        //     frappe.msgprint(__(\"You can not select Past date\"));\n        //     frappe.validated = false;\n        // }\n    },\n\n// \tparty_name:function(frm)\n// \t{\n\t    \n// \t    console.log(frm.doc.party_name)\n// \t    if(frm.doc.quotation_to==\"Lead\")\n// \t    {\n// \t        if(frm.doc.party_name.length>0)\n// \t        {\n\t        \n// \t            frappe.call\n//             \t ({\n//                         method: \"frappe.client.get\",\n//                 \t   args: \n//                 \t\t{\n//                 \t\t     doctype: \"Lead\",\n        \t\t         \n//                     \t\t filters: {\n//                     \t\t\t        \"name\": frm.doc.party_name,\n                    \t\t\t\t\t\t\n//                     \t\t\t      },\n                    \t\t\t      \n//                     // \t\tfields: [\"lead_name\",\"lead_category\"],\n                    \t\t\t      \n//         \t\t        },\n//         \t\t        callback: function (data)\n//         \t\t        {\n//         \t\t            console.log(data,\"----------------\")\n//         \t\t            if(data.message.customer_requirements.length>0)\n//         \t\t            {\n//         \t\t                $.each(data.message.customer_requirements, function(i,row)\n//         \t\t                {\n//         \t\t                     item[i]=row.product\n//         \t\t                     qty[i]=row.qty\n//                                 });\n                                   \n                                   \n//                                   console.log(item,\"ITEMMMM\")\n                                  \n                                   \n//                                   cur_frm.clear_table(\"items\");\n//                                   cur_frm.refresh_fields(); \n                                   \n                                \n                                   \n//                                     for(var i=0;i<item.length;i++)\n//                                         {\n                                                                                      \n//                                             var child = cur_frm.add_child(\"items\");\n//                                             frappe.model.set_value(child.doctype, child.name, \"item_code\",item[i]);\n//                                              frappe.model.set_value(child.doctype, child.name, \"qty\",qty[i]);\n                                                                                       \n//                                             cur_frm.refresh_field(\"items\");\n                                                                                      \n//                                         }\n        \t\t               \n        \t\t               \n        \t\t               \n//         \t\t            }\n        \t\t         \n        \t\t            \n//         \t\t        }\n//             \t });\n// \t        }\n// \t    }\n// \t},\n\n});\n\nfrappe.ui.form.on('Quotation Item', \n{\n    \n\titem_code:function(frm,cdt,cdn) \n\t{\n\t    var d=locals[cdt][cdn]\n\n\t             frappe.call\n            \t ({\n                        method: \"frappe.client.get\",\n                \t   args: \n                \t\t{\n                \t\t     doctype: \"Item\",\n        \t\t          //   fieldname: \"designation\",\n                    \t\t filters: {\n                    \t\t\t        \"name\": d.item_code,\n                    \t\t\t\t\t\t\n                    \t\t\t      }\n        \t\t        },\n        \t\t        callback: function (data)\n        \t\t        {\n        \t\t            if(data)\n        \t\t            {\n        \t\t                d.mop=data.message.mop\n        \t\t                d.mrp=data.message.mrp\n        \t\t                d.dealer_delivery=data.message.dealer_delivery_price\n        \t\t                d.sub_dealer_= data.message.sub_dealer_price\n        \t\t            }\n        \t\t        }\n            \t })\n\t},\n\t\n\twith_tax_rate:function(frm,cdt,cdn) \n\t{\n\t    \n\t    \n\t       // if(d1.tax_percentage)\n\t        \n\t       // {\n        \t    var d1=locals[cdt][cdn]\n        \t    \n        \t   // console.log(d1.item_code)\n        \t   // console.log(d1.tax_percentage)\n        \t   // console.log(d1.qty,\"qty\")\n        \t    \n        \t    if(d1.qty>0)\n            \t    {\n            \t        if(d1.tax_percentage)\n\t        \n\t                         {\n                    \t    var t1=flt(100)+flt(d1.tax_percentage)\n                    \t    console.log(t1,\"t1t1\")\n                    \t    var t2=(d1.with_tax_rate)*(100)\n                    \t    console.log(t2,\"t2t2\")\n                    \t    var t3=t2/t1\n                    \t    console.log(t3,\"t3t3\")\n                    \t    frappe.model.set_value(cdt,cdn,\"rate\",t3)\n                    \t    frappe.model.set_value(cdt,cdn,\"with_tax_amount\",(d1.with_tax_rate)*(d1.qty))\n                    \t    \n            \t        }\n            \t    }\n\n\t            \n\t}, \n\t\n\tqty:function(frm,cdt,cdn)\n\t{\n\t     var d1=locals[cdt][cdn]\n        \t    \n        \t   // console.log(d1.item_code)\n        \t   // console.log(d1.tax_percentage)\n        \t   // console.log(d1.qty,\"qty\")\n        \t    \n        \t    if(d1.qty>0)\n            \t    {\n            \t        if(d1.tax_percentage)\n\t        \n\t                         {\n\t                             if(d1.with_tax_rate)\n\t                             {\n                            \t    var t1=flt(100)+flt(d1.tax_percentage)\n                            \t    console.log(t1,\"t1t1\")\n                            \t    var t2=(d1.with_tax_rate)*(100)\n                            \t    console.log(t2,\"t2t2\")\n                            \t    var t3=t2/t1\n                            \t    console.log(t3,\"t3t3\")\n                            \t    var t4=(d1.with_tax_rate)*(d1.qty)\n                            \t    frappe.model.set_value(cdt,cdn,\"rate\",t3)\n                            \t    frappe.model.set_value(cdt,cdn,\"with_tax_amount\",t4.toFixed(2))\n\t                             }\n            \t        }\n            \t    }\n\t    \n\t}\n\t\n\t\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 1,
  "modified": "2023-06-12 13:22:27.390237",
  "module": null,
  "name": "Sales Invoice",
  "script": "var allowed_companies=[]\n\nfrappe.ui.form.on('Sales Invoice', \n{\n    onload(frm) \n\t{\n\t    \n\t    \n\t    \n\t   if (frm.is_new())\n\t   {\n    \t    if(frm.doc.company !=undefined)\n    \t    {\n            \tfrm.trigger(\"sales_team\")\n    \t    \n        \t    frm.trigger(\"customer\")\n        \t    frm.trigger(\"sale_area\") \n        \t    frm.trigger(\"possible_vehicle\")\n    \t    }\n\t    }\n\t    $('.btn-primary').show();\n\t    \n\t    $('li').removeClass(\"disabled\");\n\t   \n    \t   setTimeout(() =>\n    \t   {\n                // cur_frm.remove_custom_button('Stock Ledger','View');\n                // cur_frm.remove_custom_button('Accounting Ledger','View');\n                 cur_frm.remove_custom_button('Dunning','Create');\n                 cur_frm.remove_custom_button('Subscription','Create');\n                 cur_frm.remove_custom_button('Invoice Discounting','Create');\n                 cur_frm.remove_custom_button('Payment Request','Create');\n                 cur_frm.remove_custom_button('Payment Request','Create');\n                 cur_frm.remove_custom_button('Maintenance Schedule','Create');\n                \n          }, 1000);\n\n\t    frm.remove_custom_button('Get Items From', 'Sales Order');\n\t   //  setTimeout(\n    //     function hide()\n    //     {\n            cur_frm.dashboard.hide()\n            cur_frm.set_df_property(\"naming_series\", \"hidden\", true)\n\t    \n\t        //}\n        //  ,);\n        \n        \n\t\n\t},\n\n    company:function(frm)\n    {\n       if (frm.is_new())\n\t   {\n            frm.set_value(\"super_stockist\",frm.doc.company) \n            \n            if(frm.doc.customer)\n            {\n                // console.log(\"jjjjj\")\n                \n                frappe.call\n        \t                 ({\n                                        method: 'frappe.client.get_list',\n                                        args:\n                                        {\n                                            'doctype':'Sales Taxes and Charges Template',\n                                    \t   \tfilters:{\n                                                     \"company\":frm.doc.company,\"tax_category\":frm.doc.tax_category\n                                    \t       \t    }  ,\n                                    \t    fields:[\"tax_category\",\"name\",\"title\"]\n                                    \t},\n                                    \t\n                                        callback: function(r)\n                                        {\n                                            if(r.message)\n                                            {\n                                                \n                                                console.log(r.message)\n                                                frm.set_value(\"taxes_and_charges\",r.message[0].name)\n                                                \n                                                // console.log(\"SUCCESS\")\n                                                \n                                            }\n                                        }\n        \t                 })\n            }\n\t   }\n        \n    //     if(frm.doc.company !=undefined)\n\t   // {\n        // \tfrm.trigger(\"sales_team\")\n    \t   // frm.trigger(\"customer\")\n    \t   // frm.trigger(\"sale_area\") \n    \t   // frm.trigger(\"possible_vehicle\")\n\t   // }\n        \n    },\n\t\n\trefresh:function(frm)\n\t{\n\t    frm.trigger(\"company_filter\")\n\t    $('li').removeClass(\"disabled\");\n        \t   setTimeout(() =>\n        \t   {\n                    // cur_frm.remove_custom_button('Stock Ledger','View');\n                    // cur_frm.remove_custom_button('Accounting Ledger','View');\n                    cur_frm.remove_custom_button('Dunning','Create');\n                    cur_frm.remove_custom_button('Subscription','Create');\n                    cur_frm.remove_custom_button('Invoice Discounting','Create');\n                    cur_frm.remove_custom_button('Payment Request','Create');\n                    cur_frm.remove_custom_button('Maintenance Schedule','Create');\n                }, 1000);\n\t\t    \n        \t   //  setTimeout(\n            //     function hide()\n            //     {\n                    cur_frm.dashboard.hide()\n                   // cur_frm.set_df_property(\"naming_series\", \"hidden\", true)\n                    \n                // }\n                //  ,10);\n                \n                setTimeout(() => \n                {\n                    frm.remove_custom_button('Fetch Timesheet');\n                }, 10);\n\t},\n\t\n\tcustomer:function(frm)\n\t{\n\t   if (frm.is_new())\n\t   {\n    \t    if(frm.doc.customer !=undefined&&frm.doc.company !=undefined)\n    \t    {\n    \t                frappe.call\n    \t                 ({\n                                    method: 'frappe.client.get_list',\n                                    args:\n                                    {\n                                        'doctype':'Customer',\n                                \t   \tfilters:{\n                                                 name:frm.doc.customer,\n                                \t       \t    }  ,\n                                \t    fields:[\"source\",\"engineer1\",\"shop1\",\"contractor\",\"customer1\",\"employee1\"]\n                                \t},\n                                \t\n                                    callback: function(r)\n                                    {\n                                        if(r.message[0])\n                                        {\n                                            frm.set_value(\"source1\",r.message[0].source);\n                                            \n                                            if(r.message[0].source==\"ENGINEER / ARCHITECTS\")\n                                            {\n                                                frm.set_value(\"source_name\",r.message[0].engineer1);\n                                            }\n                                            else if(r.message[0].source==\"SHOPS\")\n                                            {\n                                                frm.set_value(\"source_name\",r.message[0].shop1);\n                                            }\n                                            else if(r.message[0].source==\"CONTRACTORS / TRUSS WORKERS\")\n                                            {\n                                                frm.set_value(\"source_name\",r.message[0].contractor);\n                                            }\n                                            else if(r.message[0].source==\"CUSTOMER\")\n                                            {\n                                                frm.set_value(\"source_name\",r.message[0].customer1);\n                                            }\n                                            else if(r.message[0].source==\"EMPLOYEE\")\n                                            {\n                                                frm.set_value(\"source_name\",r.message[0].employee1);\n                                            }\n                                            else\n                                            {\n                                                frm.set_value(\"source_name\",undefined);\n                                            }\n                                        }\n                                    }\n    \t                 }) ;\n    \t                 \n    \t        frm.trigger(\"sale_area\") \n        \t    frm.trigger(\"possible_vehicle\")\n    \t                 \n    \t    }\n\t   }\n\t                 \n\t                // frm.trigger(\"possible_vehicle\")\n\t                 \n\t   // }\n\t},\n\t\n\tcustomer_area(frm)\n\t{\n\t   if (frm.is_new())\n\t   {\n\t        frm.set_value(\"sale_area\",frm.doc.customer_area)\n\t   }\n\t},\n\t\n// \tall_vehicle_permissible(frm)\n// \t{\n// \t    if(frm.doc.all_vehicle_permissible==1)  \n// \t    {\n// \t        frm.set_value(\"limited_vehicle_permissible\",0)\n// \t        frm.set_value(\"type_of_vehicle_go_to_site\",undefined)\n// \t    }\n// \t},\n\t\n// \tlimited_vehicle_permissible(frm)\n// \t{\n// \t     if(frm.doc.all_vehicle_permissible==1)  \n// \t    {\n// \t        frm.set_value(\"all_vehicle_permissible\",0)\n// \t    }\n// \t},\n\t\n\tquantity_and_item_quoted_price_are_same:function(frm)\n\t{\n\t    if(frm.doc.quantity_and_item_quoted_price_are_same==1)\n\t    {\n\t        frm.set_value(\"quantity_and_item_quoted_price_are_different\",0)\n\t        frm.set_value(\"quoted_quantity\",undefined)\n\t        frm.set_value(\"selled_quantity\",undefined)\n\t        frm.set_value(\"quoted_price\",undefined)\n\t        frm.set_value(\"selled_price\",undefined)\n\t    }\n\t},\n\t\n\tquantity_and_item_quoted_price_are_different:function(frm)\n\t{\n\t    if(frm.doc.quantity_and_item_quoted_price_are_different==1)\n\t    {\n\t        frm.set_value(\"quantity_and_item_quoted_price_are_same\",0)\n\t    }\n\t},\n\t\n\tsale_area:function(frm)\n\t{\n       if (frm.is_new())\n\t   {\n\t       if(frm.doc.company!=\"Lamit\")\n    \t       {\n    \t                 frappe.call\n    \t                 ({\n                                    method: 'frappe.client.get_list',\n                                    args:\n                                    {\n                                        'doctype':'Assign Sale Area',\n                                \t   \tfilters:{\n                                                 name:frm.doc.sale_area,\n                                \t       \t    }  ,\n                                \t    fields:[\"sales_officer\",\"sales_officer_name\",\"sales_officer_email\",\"marketing_officer\",\"marketing_officer_email\",\"area_sales_manager\",\"area_sales_manager_email\",\"sales_admin\",\"sales_admin_name\",\"sales_admin_email\"]\n                                \t},\n                                \t\n                                    callback: function(r)\n                                    {\n                                        console.log(\"sales team...\",r.message)\n                                        if(r.message[0])\n                                        {\n                                            frm.set_value(\"sales_executive\",r.message[0].sales_officer)\n                                            frm.set_value(\"sales_executive_name\",r.message[0].sales_officer_name)\n                                            frm.set_value(\"sales_officer_email\",r.message[0].sales_officer_email)\n                                            frm.set_value(\"marketing_team_member\",r.message[0].marketing_officer)\n                                            frm.set_value(\"marketing_officer_email\",r.message[0].marketing_officer_email)\n                                            frm.set_value(\"area_sales_manager\",r.message[0].area_sales_manager)\n                                            frm.set_value(\"area_sales_manager_email\",r.message[0].area_sales_manager_email)\n                                            frm.set_value(\"sales_admin\",r.message[0].sales_admin)\n                                            frm.set_value(\"sales_admin_email\",r.message[0].sales_admin_email)\n                                            frm.set_value(\"sales_admin_name\",r.message[0].sales_admin_name)\n                                        }\n                                    }\n    \t                 })\n    \t       }\n\t   }\n\t},\n\t\n\tsales_team:function(frm)\n\t{\n\t    if(frm.doc.company !=undefined)\n\t    {\n\t        if(frm.doc.company!=\"Lamit\")\n\t        {\n\t        \n\t                 frappe.call\n\t                 ({\n                                method: 'frappe.client.get_list',\n                                args:\n                                {\n                                    'doctype':'Company',\n                            \t   \tfilters:{\n                                             name:\"Lamit\",\n                            \t       \t    }  ,\n                            \t    fields:[\"sales_manager\",\"sales_manager_email\",\"marketing_supervisor\",\"marketing_supervisor_email\"]\n                            \t},\n                            \t\n                                callback: function(r)\n                                {\n                                    if(r.message[0])\n                                    {\n                                        frm.set_value(\"sales_manager\",r.message[0].sales_manager);\n                                        frm.set_value(\"sales_manager_email\",r.message[0].sales_manager_email);\n                                        frm.set_value(\"marketing_head\",r.message[0].marketing_supervisor);\n                                        frm.set_value(\"marketing_supervisor_email\",r.message[0].marketing_supervisor_email);\n                                    }\n                                }\n\t                 }) ;  \n\t                 \n\t        }\n\t    }\n\t},\n\t\n// \tcompany_filter:function(frm)\n//     {\n//                         frappe.call\n//                         ({\n//                             method: \"frappe.client.get_list\",\n//                             args: \n//                             {\n//                                 doctype: \"User Permission\",\n//                                 fields: [\"for_value\"],\n//                                 filters:{\n//                                     \"allow\":\"Super Stockist\",\n//                                     \"user\":frappe.session.user,\n//                                 },\n                               \n//                             },\n//                             callback:function(r) \n//                             {\n//                                 if(r.message[0])\n//                                 {\n//                                      $.each(r.message,function(i,v)\n//                                      {\n//                                          allowed_companies[i]=v.for_value;\n//                                      });\n//                                 }\n//                             }\n//                         })\n//                         .then(function(doc)\n//                         {\n//                             frm.set_query(\"company\", function()\n//                                 \t  {\n//                                             return {\n//                                                 \"filters\":\n//                                                 {\n//                                                     \"name\":[\"in\",allowed_companies]\n//                                                 }\n//                                             };\n//                                       });\n//                         })    \n//     },\n    \n    posting_date:function(frm)\n    {\n        cur_frm.clear_table(\"payment_schedule\");\n    },\n    \n    due_date:function(frm)\n    {\n        cur_frm.clear_table(\"payment_schedule\");\n        if(frm.doc.items !=undefined)\n        {\n            if(frm.doc.items.length>0)\n            {\n                $.each(frm.doc.items,function(i,v)\n                {\n                    v.delivery_date=frm.doc.delivery_date\n                })\n                frm.refresh_field(\"items\")\n            }\n        }\n    },\n    \n    // possible_vehicle:function(frm)\n    // {\n    //     if(frm.doc.customer !=undefined)\n    //     {\n    //         if(frm.doc.customer.length>0)\n    //         {\n    //           if(frm.doc.sales_order!=undefined)\n    //             {\n    //                         frappe.call\n    //     \t                 ({\n    //                                     method: 'frappe.client.get_list',\n    //                                     args:\n    //                                     {\n    //                                         'doctype':'Sales Order',\n    //                                 \t   \tfilters:{\n    //                                                  name:frm.doc.sales_order,\n    //                                 \t       \t    }  ,\n    //                                 \t    fields:[\"quotation\"]\n    //                                 \t},\n    //     \t                 })\n    //     \t                 .then(function(doc)\n    //     \t                 {\n    //     \t                     if(doc.message[0])\n    //     \t                     {\n    //         \t                      frappe.call\n    //             \t                 ({\n    //                                             method: 'frappe.client.get_list',\n    //                                             args:\n    //                                             {\n    //                                                 'doctype':'Quotation',\n    //                                         \t   \tfilters:{\n    //                                                          name:doc.message[0].quotation,\n    //                                         \t       \t    }  ,\n    //                                         \t    fields:[\"all_vehicle_permissible\",\"limited_vehicle_permissible\",\"type_of_vehicle_go_to_site\"]\n    //                                         \t},\n    //                                             callback:function(r)\n    //                                             {\n    //                                                 if(r.message[0])\n    //                                                 {\n    //                                                     // if(r.message[0].all_vehicle_permissible==1)\n    //                                                     // {\n    //                                                     //     frm.set_value(\"all_vehicle_permissible\",r.message[0].all_vehicle_permissible)\n    //                                                     // }\n    //                                                     // if(r.message[0].limited_vehicle_permissible==1)\n    //                                                     // {\n    //                                                     //     frm.set_value(\"limited_vehicle_permissible\",r.message[0].limited_vehicle_permissible)\n    //                                                     //     frm.set_value(\"type_of_vehicle_go_to_site\",r.message[0].type_of_vehicle_go_to_site)\n    //                                                     // }\n    //                                                 }\n    //                                                 else\n    //                                                 {\n    //                                                     // frm.set_value(\"all_vehicle_permissible\",0)\n    //                                                     // frm.set_value(\"limited_vehicle_permissible\",0)\n    //                                                     // frm.set_value(\"type_of_vehicle_go_to_site\",undefined)\n    //                                                 }\n    //                                             }\n    //             \t                 })\n    //     \t                     }\n    //     \t                     else\n    //                              {\n    //                                                     // frm.set_value(\"all_vehicle_permissible\",0)\n    //                                                     // frm.set_value(\"limited_vehicle_permissible\",0)\n    //                                                     // frm.set_value(\"type_of_vehicle_go_to_site\",undefined)\n    //                              }\n    //     \t                 })\n    //             }\n    //             else\n    //             {\n    //                                   frappe.call\n    //             \t                 ({\n    //                                             method: 'frappe.client.get_list',\n    //                                             args:\n    //                                             {\n    //                                                 'doctype':'Customer',\n    //                                         \t   \tfilters:{\n    //                                                          name:frm.doc.customer,\n    //                                         \t       \t    }  ,\n    //                                         \t    fields:[\"all_vehicle_permissible\",\"limited_vehicle_permissible\",\"type_of_vehicle_go_to_site\"]\n    //                                         \t},\n    //                                             callback:function(r)\n    //                                             {\n    //                                                 if(r.message[0])\n    //                                                 {\n    //                                                      if(r.message[0].all_vehicle_permissible==1)\n    //                                                     {\n    //                                                         frm.set_value(\"all_vehicle_permissible\",r.message[0].all_vehicle_permissible)\n    //                                                     }\n    //                                                     if(r.message[0].limited_vehicle_permissible==1)\n    //                                                     {\n    //                                                         frm.set_value(\"limited_vehicle_permissible\",r.message[0].limited_vehicle_permissible)\n    //                                                         frm.set_value(\"type_of_vehicle_go_to_site\",r.message[0].type_of_vehicle_go_to_site)\n    //                                                     }\n    //                                                 }\n    //                                                 else\n    //                                                 {\n    //                                                     frm.set_value(\"all_vehicle_permissible\",0)\n    //                                                     frm.set_value(\"limited_vehicle_permissible\",0)\n    //                                                     frm.set_value(\"type_of_vehicle_go_to_site\",undefined)\n    //                                                 }\n    //                                             }\n    //             \t                 })\n    //             } \n    //         }\n    //     }\n    //     else\n    //     {\n    //                                                     frm.set_value(\"all_vehicle_permissible\",0)\n    //                                                     frm.set_value(\"limited_vehicle_permissible\",0)\n    //                                                     frm.set_value(\"type_of_vehicle_go_to_site\",undefined)\n    //     }\n    // },\n    \n    validate:function(frm)\n    {\n        // if(frm.doc.all_vehicle_permissible==0&&frm.doc.limited_vehicle_permissible==0)\n        // {\n        //     frappe.validated = false;\n        //     msgprint(\"Mandatory fields required in possible vehicle section\")\n        // }\n        // else\n        // {\n        //      frappe.validated =true;\n        // }\n        \n        // if (frm.doc.posting_date < frappe.datetime.get_today()) \n        // {\n        //     frappe.msgprint(__(\"You can not select Past date\"));\n        //     frappe.validated = false;\n        // }\n        // else\n        // {\n        //     frappe.validated =true;\n        // }\n        \n        \n    },\n    \n    incentive_calculation:function(frm)\n    {\n       // msgprint(update)\n                                                    frappe.call\n                            \t                    ({\n                                                        \"method\":\"incentive_calculation1\",\n                                                        \"args\":{\n                                                                     invoice:frm.doc.name,\n                                                                     posting_date:frm.doc.posting_date,\n                                                                     grand_total:frm.doc.grand_total,\n                                                                     total_advance:frm.doc.total_advance,\n                                                                     outstanding_amount:frm.doc.outstanding_amount,\n                                                                },\n                                                    });\n        \n    },\n        \n    after_save:function(frm)\n    {\n        \n        // if(frm.doc.internal_customer==0)\n        // {\n        //     frm.trigger(\"incentive_calculation\")\n        // }\n        \n        // allowed_companies=[]  \n    },\n    \n    on_submit:function(frm)\n    {\n        if(frm.doc.internal_customer==0)\n        {\n            frm.trigger(\"incentive_calculation\")\n        }\n        allowed_companies=[]  \n        //frappe.set_route(\"List\",\"Sales Invoice\");\n    },\n    \n    items_on_form_rendered:function(frm, cdt, cdn)\n    {\n        \n    frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-delete-row\").hide();\n    frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-insert-row-below\").hide();\n    frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-insert-row\").hide();\n    frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-duplicate-row\").hide();\n    frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-move-row\").hide();\n    \n    },\n    \n    taxes_on_form_rendered:function(frm, cdt, cdn)\n    {\n        \n    frm.fields_dict[\"taxes\"].grid.wrapper.find(\".grid-delete-row\").hide();\n    frm.fields_dict[\"taxes\"].grid.wrapper.find(\".grid-insert-row-below\").hide();\n    frm.fields_dict[\"taxes\"].grid.wrapper.find(\".grid-insert-row\").hide();\n    frm.fields_dict[\"taxes\"].grid.wrapper.find(\".grid-duplicate-row\").hide();\n    frm.fields_dict[\"taxes\"].grid.wrapper.find(\".grid-move-row\").hide();\n    \n    }\n    \n    \n\t\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Task",
  "enabled": 1,
  "modified": "2023-03-23 09:26:01.697481",
  "module": null,
  "name": "Task -Form",
  "script": "var u=[];\n\nvar employee_name;\nvar employee;\nvar email1;\n\nvar t1;\n\nvar f1=[];\n\nvar u1;\nvar g1;\nvar date;\nvar owner;\nvar t;\nvar mobile_number_list=[];\n\nvar g1;\nvar g2;\n\n\n\nvar customer_name=[];\nvar date=[];\nvar time=[];\nvar locations=[];\nvar data;\nvar trigger_count=1;\nvar sales_officer;\nvar sales_officer_name;\nvar h1;\n\nvar am_name=[];\nvar am_subject=[];\nvar am_contact_time=[];\nvar am_customer_name=[];\nvar am_customer_location=[];\n\nvar pm_name=[];\nvar pm_subject=[];\nvar pm_contact_time=[]   ;  \nvar pm_customer_name=[];\nvar pm_customer_location=[];\nvar address_line1;\nvar address_line2;\nvar city\nvar pin\nvar allowed_area=[]\nvar change_area\nvar change_lac\nvar current_lac\n\n\n\n\nvar f;\nvar a;\nvar n;\nvar e;\nvar dt;\nvar t;\nvar c;\nvar button_click=\"normal\";\nvar totaltime=0;\nvar t_assigned_to;\nvar status1;\nvar emply=[];\nvar emply_email=[];\nvar dx_sales_invoice;\nvar old_task=\"Dont exist\";\nvar newdate1;\nvar newdate2;\nvar dt1;\nvar dt2;\nvar s1;\nvar m1;\nvar h1;\nvar fromactivity;\n\n\nvar task_type;\n// var c_emply=[];\n// var fltr_emply=[];\n// var fltr_emply_email=[];\n\n//var timeleft;\nvar h1;\nvar a;\nvar employee1\nvar target1\nvar total_visit1\nvar new_customer1\nvar employees_list=[]\nvar employee_id=[];\nvar marketing_officer_email=[];\nvar sales_officer_email;\nvar sales_officer;\n\n// var uniqueChars\n// var uniqueChars1\n\nvar m_officer_list=[]\nvar m_officer_email_list=[]\nvar s_officer_list=[]\nvar s_officer_email_list=[]\nvar m_officer_unique\nvar m_officer_email_unique\nvar s_officer_unique;\nvar s_officer_email_unique;\nvar key;\nvar lead_filter\n\nvar m_empid=[]\nvar s_empid=[]\nvar m_empid_unique=[]\nvar s_empid_unique=[]\n\n\n\n\nfrappe.ui.form.on('Task',\n{\n    onload_post_render: function(frm) \n    {\n         console.log(\"a2\",frm)\n        $(frm.fields_dict.select_lead_name.input).on('keydown', function(e) \n        {\n            key=e.key;\n            frm.trigger(\"filter_field\")\n        });\n    },\n    \n    onload(frm)\n    {\n        lead_filter=undefined\n        cur_frm.dashboard.hide()\n        \n        h1=frappe.session.user;\n        \n        frm.trigger(\"employee_filter\")\n        \n        \n        if(frm.doc.select_lead_name!=undefined)\n        {\n            frm.set_df_property('select_lead_name',  'read_only',1);\n            frm.set_df_property('select_lead',  'read_only',1);\n            // frm.set_df_property('marketing_officer',  'hidden',0);\n            // frm.set_df_property('sales_officer',  'hidden',0);\n            \n        }\n        else\n        {\n            // frm.set_df_property('marketing_officer',  'hidden',1);\n            // frm.set_df_property('sales_officer',  'hidden',1);\n        }\n        \n        if (frm.is_new()) \n        {\n            // frm.set_value(\"lead_location\",undefined)\n        }   \n        else\n        {\n            if(frm.doc.marketing_officer==undefined||frm.doc.marketing_officer==\"\")\n            {\n                frm.set_df_property('marketing_officer',  'hidden',1);\n            }\n            else\n            {\n                 frm.set_df_property('marketing_officer',  'hidden',0);\n            }\n            \n            if(frm.doc.sales_officer==undefined||frm.doc.sales_officer==\"\")\n            {\n                 frm.set_df_property('sales_officer',  'hidden',1);\n            }\n            else\n            {\n                 frm.set_df_property('sales_officer',  'hidden',0);\n            }\n            \n        }\n        \n        \n        // if (frm.is_new()) \n        // {\n        //       frappe.call\n        //       ({\n        //                         method: \"frappe.client.get_list\",\n        //                         args: \n        //                             {\n        //                                 doctype: \"Employee\",\n                                        \n        //                                 filters: { 'user_id':h1},\n                                        \n        //                                 'fields': ['designation','name','employee_number'],\n        //                             },\n        //                                 callback: function(res)\n        //                                 {\n        //                                     if(res.message[0])\n        //                                     { \n        //                                         employee1=res.message[0].name\n        //                                         frm.set_value(\"assign\",res.message[0].name)\n        //                                     }\n        //                                 }\n        //         });\n        // }\n        \n        \n        // if(frm.doc.status==\"Closed\")\n        \n        // frm.trigger(\"assign_filter\")\n        \n        // if(frappe.user.has_role(\"Sales Officer\") ||frappe.user.has_role(\"Marketing Officer\"))\n        // {\n            \n        //     console.log(\"HII\")\n        //       frappe.call\n        //         ({\n        //             \"method\":\"frappe.client.get_list\",\n        //             \"args\":\n        //             {\n        //                 \"doctype\":\"Assign Sale Area\",\n        //                 \"filters\":\n        //                     \t{\n        //                         \t\"sales_officer_email\":frappe.session.user,\n        //                         },\n        //                 'fields': ['marketing_officer_name','sales_officer_name','sales_officer','marketing_officer','marketing_officer_email','sales_officer_email'],\n        //             },\n        //         })\n        //         .then(function(doc)\n        //         {\n        //             if(doc.message[0])\n        //             {\n        //                 $.each(doc.message,function(i,u)\n        //                 {\n        //                     employees_list[i]=u.marketing_officer_name\n        //                     // sales_officer_email[i]=u.sales_officer_email\n        //                     marketing_officer_email[i]=u.marketing_officer_email\n                            \n        //                     sales_officer=u.sales_officer_name\n        //                     sales_officer_email=u.sales_officer_email\n                            \n        //                     // console.log(employees_list)\n        //                     // console.log(sales_officer_email)\n        //                     // console.log(marketing_officer_email)\n                            \n        //                 })\n                        \n        //                 employees_list.push(sales_officer)\n        //                 marketing_officer_email.push(sales_officer_email)\n                        \n                        \n        //                 // console.log(marketing_officer_email,\"Lnkxndkwbcnk,l\")\n        //                  uniqueChars = [...new Set(marketing_officer_email)];\n                        \n        //                 console.log(uniqueChars)\n                        \n                        \n        //                 uniqueChars1 = [...new Set(employees_list)];\n                        \n        //                 console.log(uniqueChars1,\"iooopppp\")\n        //                 // // console.log(employees_list,\"KK\")\n        //                 frm.set_df_property(\"assign\",\"options\",uniqueChars1)\n        //                 frm.refresh_field(\"assign\")\n        //             }\n        //         });\n        // }\n        \n        \n        if(frm.doc.status==\"Closed\")\n        {\n            // frm.set_df_property('note',  'read_only',1);\n             frm.set_df_property('due_date',  'read_only',1);\n             frm.set_df_property('contact_time',  'read_only',1);\n             frm.set_df_property('assign',  'read_only',1);\n             frm.set_df_property('subject',  'read_only',1);\n             frm.set_df_property('select_lead',  'read_only',1);\n             frm.set_df_property('status',  'read_only',1);\n             frm.set_df_property('lead_location',  'read_only',1);\n             frm.set_df_property('select_lead_name',  'read_only',1);\n             frm.set_df_property('time2',  'read_only',1);\n             frm.set_df_property('time1',  'read_only',1);\n             \n             frm.set_df_property('contact_time_in_min',  'read_only',1);\n             frm.set_df_property('contact_time_in_hour',  'read_only',1);\n             frm.set_df_property('contact_to_time_in_hour',  'read_only',1);\n             frm.set_df_property('contact_to_time_in_min',  'read_only',1);\n             frm.set_df_property('note',  'read_only',1);\n             frm.set_df_property('marketing_officer','read_only',1)\n             frm.set_df_property('sales_officer','read_only',1)\n             frm.set_df_property('task_type','read_only',1)\n                 \n            \n        }\n    },\n    \n//     assign:function(frm)\n// \t{\n// \t    if(frm.doc.assign !=undefined)\n// \t    {\n//     \t    var idx1=uniqueChars1.indexOf(frm.doc.assign)\n//     \t    frm.set_value(\"assigned_to\",uniqueChars[flt(idx1)])\n// \t    }\n// \t    else\n// \t    {\n// \t        frm.set_value(\"assigned_to\",undefined)\n// \t    }\n// \t},\n\n    refresh(frm)\n    {\n        if (frm.is_new()) \n        {\n            frm.set_value(\"lead_location\",undefined)\n        }       \n         $('li').removeClass(\"disabled\");\n        cur_frm.dashboard.hide()\n        \n         frm.trigger(\"filter_field\")\n        \n            // if (!frm.is_new())\n            // {\n            //     if(frappe.user.has_role(\"Marketing Officer\")||frappe.user.has_role(\"Sales Officer\"))\n            //     {\n            //          frm.add_custom_button('Create Next Schedule', () => \n            //          {\n                         \n            //              var lead=frm.doc.lead\n                         \n            //              let d = new frappe.ui.Dialog({\n            //                 title: 'Enter details',\n            //                 fields: [\n            //                     {\n            //                         label: 'Next Meeting Date',\n            //                         fieldname: 'next_meeting_date',\n            //                         fieldtype: 'Date',\n            //                         \"reqd\": 1\n            //                     },\n            //                      {\"fieldtype\":\"Section Break\",},\n            //                     {\n            //                         label: 'Meeting Time',\n            //                         fieldname: 'time',\n            //                         fieldtype: 'Data',\n            //                         \"reqd\": 1\n            //                     },\n                                \n            //                     {\"fieldtype\":\"Column Break\",},\n                                \n            //                      {\n            //                         label: 'Format',\n            //                         fieldname: 'format',\n            //                         default:\"AM\",\n            //                         options:[\"AM\",\"PM\"],\n            //                         fieldtype: 'Select'\n            //                     },\n                                \n            //                     {\"fieldtype\":\"Section Break\",},\n                                \n            //                      {\n            //                         label: 'Assign To',\n            //                         fieldname: 'assign_to',\n            //                         fieldtype: 'Link',\n            //                         options:\"Employee\",\n            //                         \"reqd\": 1,\n            //                         'onchange':()=>\n            //                                       {\n            //                                             frappe.call\n            //                                               ({\n            //                                                             method: 'frappe.client.get_list',\n            //                                                             args:\n            //                                                                 {\n            //                                                                 'doctype':'Employee',\n            //                                                                 'fields': ['user_id','employee_name'],\n            //                                                         \t\tfilters:\n            //                                                                 \t{\n            //                                                                          'name':d.fields_dict.assign_to.value,\n            //                                                         \t       \t}  \n            //                                                                 },\n            //                                                                 callback:function(r)\n            //                                                                     {\n            //                                                                         if(r.message)\n            //                                                                         {\n            //                                                                             // console.log(r.message)\n            //                                                                          d.fields_dict.employee_name.set_value(r.message[0].employee_name);\n            //                                                                          d.fields_dict.employee_name.refresh();\n            //                                                                         }\n                                                                                    \n            //                                                                     }\n            //                                               })\n                                                        \n            //                                         },\n            //                     },\n            //                      {\"fieldtype\":\"Column Break\",},\n                                \n            //                     {\n            //                         label: 'Employee Name',\n            //                         fieldname: 'employee_name',\n            //                         fieldtype: 'Data',\n            //                         read_only:1,\n            //                         default:\"--Select Assig to--\"\n                                    \n            //                     },\n                                \n            //                     {\"fieldtype\":\"Section Break\",},\n                                \n                                \n            //                     {\n            //                         label: 'Subject',\n            //                         fieldname: 'subject',\n            //                         fieldtype: 'Data',\n            //                         \"reqd\": 1,\n                                    \n            //                     }\n            //                 ],\n            //                 primary_action_label: 'Submit',\n            //                 primary_action(values) {\n            //                     console.log(values);\n                                \n                                \n            //                             frappe.db.insert\n            //                             ({\n            //                                   \"doctype\": \"Task\",\n            //                                   \"subject\": values.subject,\n            //                                   \"status\":\"Open\",\n            //                                   \"lead\":frm.doc.lead,\n            //                                   \"due_date\":values.next_meeting_date,\n            //                                   \"contact_time\":values.time,\n            //                                   \"time1\":values.format,\n            //                                   \"assign\":values.assign_to\n                                               \n            //                             });\n            //                              frappe.msgprint({\n            //                         title: __('Notification'),\n            //                         indicator: 'green',\n            //                         message: __('Task Created successfully')\n            //                     });\n                                            \n                                \n                                \n                                \n                                \n                                \n            //                     d.hide();\n            //                 }\n                            \n                            \n            //             });\n                        \n                        \n            //             d.show();\n                        \n                        \n                        \n                         \n            //          })\n                     \n            //     }\n            // }\n\n             frm.change_custom_button_type('Create Next Schedule', null, 'primary');\n             frm.change_custom_button_type('Schedule Task', null, 'primary');\n\n    },\n    \n    filter_field:function(frm)\n    {\n            \n            var caps_letter=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']\n            var small_letter=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','S','T','U','V','W','X','Y','Z']\n            var symbols=['@',' ','.','&']\n\n                // if(caps_letter.includes(key)||small_letter.includes(key)||symbols.includes(key))\n                // {\n                //     console.log(\"a1\")\n                //     if(lead_filter != undefined)\n                //         {\n                //             lead_filter=lead_filter+key\n                //         }\n                //         else\n                //         {\n                //             lead_filter=key\n                //         }\n                        \n                       \n                       \n                       \n                       \n                        \n                        \n                //          frm.set_query(\"select_lead_name\", function() \n                //         {\n                //             console.log(\"q1\")\n                // \t\t\treturn {\n                // \t\t\t    filters:[\n                //                             ['status', '!=',\"Converted\"],\n                //                             ['lead_name', 'like',\"%\"+String(lead_filter)+\"%\"],\n                //                             // ['lead_name', 'like',String(lead_filter)],\n                //                         ]\n                // \t\t\t};\n                // \t\t});\n            \t\t\n                // }\n                // else\n                // {\n                //     console.log(\"a2\")\n                //     if(!lead_filter)\n                //     {\n                        \n                        \n                         console.log(\"a3\")\n                        frm.set_query(\"select_lead_name\", function() \n                        {\n                            console.log(\"q2\")\n                \t\t\treturn {\n                \t\t\t    filters:[\n                                            ['status', '!=',\"Converted\"],\n                                        ]\n                \t\t\t};\n                \t\t});\n                //     }\n                //     else\n                //     {\n                //          console.log(\"a4\")\n                //         if(lead_filter != undefined)\n                //         {\n                //             lead_filter=lead_filter+key\n                //         }\n                //         else\n                //         {\n                //             lead_filter=key\n                //         }\n    \n    \n    \n                //          frm.set_query(\"select_lead_name\", function() \n                //         {\n                //              console.log(\"q3\")\n                // \t\t\treturn {\n                // \t\t\t    filters:[\n                //                             // ['status', '!=',\"Converted\"],\n                //                             ['lead_name', 'like',\"%\"+String(lead_filter)+\"%\"],\n                //                             // ['lead_name', 'like',String(lead_filter)],\n                //                         ]\n                // \t\t\t};\n                // \t\t});\n                //     }\n                //}\n            \n    },\n    \n    marketing_officer(frm)\n    {\n        if(frm.doc.marketing_officer !=undefined)\n        {\n            frm.set_value(\"assign\",frm.doc.marketing_officer)\n            frm.set_value(\"sales_officer\",undefined)\n            frm.set_value(\"sales_officer2\",undefined)\n            \n            var idx1=m_officer_unique.indexOf(frm.doc.marketing_officer)\n            frm.set_value(\"marketing_officer1\",m_empid_unique[flt(idx1)])\n            frm.set_value(\"assigned_to1\",m_officer_email_unique[flt(idx1)])\n            \n            if(m_officer_email_unique[flt(idx1)]!=frappe.session.user)\n            {\n    \t        frm.set_value(\"assigned_to\",m_officer_email_unique[flt(idx1)])\n            }\n            else\n            {\n                frm.set_value(\"assigned_to\",undefined)\n            }\n        }\n        else\n        {\n            frm.set_value(\"marketing_officer1\",undefined)\n        }\n    },\n    \n    sales_officer(frm)\n    {\n        if(frm.doc.sales_officer !=undefined)\n        {\n            frm.set_value(\"assign\",frm.doc.sales_officer)\n            frm.set_value(\"marketing_officer\",undefined)\n            frm.set_value(\"marketing_officer1\",undefined)\n            \n            var idx1=s_officer_unique.indexOf(frm.doc.sales_officer)\n            frm.set_value(\"sales_officer2\",s_empid_unique[flt(idx1)])\n            frm.set_value(\"assigned_to1\",s_officer_email_unique[flt(idx1)])\n            \n            if(s_officer_email_unique[flt(idx1)] !=frappe.session.user)\n            {\n    \t        frm.set_value(\"assigned_to\",s_officer_email_unique[flt(idx1)])\n            }\n            else\n            {\n                frm.set_value(\"assigned_to\",undefined)\n            }\n        }\n        else\n        {\n            frm.set_value(\"sales_officer2\",undefined)\n        }\n    },\n    \n    employee_filter:function(frm)\n    {\n        var location1=\" \"\n        m_officer_list=[]\n        m_officer_email_list=[]\n        s_officer_list=[]\n        s_officer_email_list=[]\n        m_officer_unique=[]\n        m_officer_email_unique=[]\n        s_officer_unique=[]\n        s_officer_email_unique=[]\n        \n        m_empid=[]\n        s_empid=[]\n        m_empid_unique=[]\n        s_empid_unique=[]\n        \n        if(frm.doc.select_lead==\"Lead\")\n        {\n            location1=frm.doc.lead_location\n        }\n        else if(frm.doc.select_lead==\"Customer\")\n        {\n            location1=frm.doc.customer_locations\n        }\n        \n        if(location1 !=\" \")\n        {\n                frappe.call\n                ({\n                    \"method\":\"frappe.client.get_list\",\n                    \"args\":\n                    {\n                        \"doctype\":\"Assign Sale Area\",\n                        \"filters\":\n                            \t{\n                                \t\"name\":location1,\n                                },\n                        'fields': ['marketing_officer_name','sales_officer_name','sales_officer','marketing_officer','marketing_officer_email','sales_officer_email'],\n                    },\n                })\n                .then(function(doc)\n                {\n                    if(doc.message[0])\n                    {\n                        $.each(doc.message,function(i,u)\n                        {\n                            m_officer_list[0]=\"\"\n                            m_officer_email_list[0]=\"\"\n                            s_officer_list[0]=\"\"\n                            s_officer_email_list[0]=\"\"\n                            m_empid[0]=\"\"\n                            s_empid[0]=\"\"\n                            \n                            m_officer_list[i+1]=u.marketing_officer_name\n                            m_officer_email_list[i+1]=u.marketing_officer_email\n                            s_officer_list[i+1]=u.sales_officer_name\n                            s_officer_email_list[i+1]=u.sales_officer_email\n                            m_empid[i+1]=u.marketing_officer\n                            s_empid[i+1]=u.sales_officer\n                            \n                        })\n                        \n                        m_officer_unique = [...new Set(m_officer_list)];\n                        m_officer_email_unique = [...new Set(m_officer_email_list)];\n                        s_officer_unique = [...new Set(s_officer_list)];\n                        s_officer_email_unique = [...new Set(s_officer_email_list)];\n                        m_empid_unique=[...new Set(m_empid)];\n                        s_empid_unique=[...new Set(s_empid)];\n                        \n                        \n                        frm.set_df_property(\"marketing_officer\",\"options\",m_officer_unique)\n                        frm.set_df_property(\"sales_officer\",\"options\",s_officer_unique)\n                        // frm.set_df_property(\"assign\",\"options\",uniqueChars1)\n                        frm.refresh_field(\"marketing_officer\")\n                        frm.refresh_field(\"sales_officer\")\n                    }\n                    else\n                    {\n                        m_officer_list=[]\n                        m_officer_email_list=[]\n                        s_officer_list=[]\n                        s_officer_email_list=[]\n                        m_officer_unique=[]\n                        m_officer_email_unique=[]\n                        s_officer_unique=[]\n                        s_officer_email_unique=[]\n                        m_empid=[]\n                        s_empid=[]\n                        m_empid_unique=[]\n                        s_empid_unique=[]\n                    }\n                });\n        }\n        else\n        {\n            \n        }\n        \n        \n        \n        // if(frappe.user.has_role(\"Sales Officer\"))\n        // {\n        //       frappe.call\n        //         ({\n        //             \"method\":\"frappe.client.get_list\",\n        //             \"args\":\n        //             {\n        //                 \"doctype\":\"Assign Sale Area\",\n        //                 \"filters\":\n        //                     \t{\n        //                         \t\"sales_officer_email\":frappe.session.user,\n        //                         },\n        //                 'fields': ['marketing_officer_name','sales_officer_name','sales_officer','marketing_officer','marketing_officer_email','sales_officer_email'],\n        //             },\n        //         })\n        //         .then(function(doc)\n        //         {\n        //             if(doc.message[0])\n        //             {\n        //                 $.each(doc.message,function(i,u)\n        //                 {\n        //                     m_officer_list[0]=\"\"\n        //                     m_officer_email_list[0]=\"\"\n        //                     s_officer_list[0]=\"\"\n        //                     s_officer_email_list[0]=\"\"\n        //                     m_officer_list[i+1]=u.marketing_officer_name\n        //                     m_officer_email_list[i+1]=u.marketing_officer_email\n        //                     s_officer_list[i+1]=u.sales_officer_name\n        //                     s_officer_email_list[i+1]=u.sales_officer_email\n        //                 })\n                        \n        //                 m_officer_unique = [...new Set(m_officer_list)];\n        //                 m_officer_email_unique = [...new Set(m_officer_email_list)];\n        //                 s_officer_unique = [...new Set(s_officer_list)];\n        //                 s_officer_email_unique = [...new Set(s_officer_email_list)];\n                        \n        //                 frm.set_df_property(\"marketing_officer\",\"options\",m_officer_unique)\n        //                 frm.set_df_property(\"sales_officer\",\"options\",s_officer_unique)\n        //                 // frm.set_df_property(\"assign\",\"options\",uniqueChars1)\n        //                 frm.refresh_field(\"marketing_officer\")\n        //                 frm.refresh_field(\"sales_officer\")\n        //             }\n        //         });\n        // }  \n        // else if(frappe.user.has_role(\"Marketing Officer\"))\n        // {\n        //         frappe.call\n        //         ({\n        //             \"method\":\"frappe.client.get_list\",\n        //             \"args\":\n        //             {\n        //                 \"doctype\":\"Assign Sale Area\",\n        //                 \"filters\":\n        //                     \t{\n        //                         \t\"marketing_officer_email\":frappe.session.user,\n        //                         },\n        //                 'fields': ['marketing_officer_name','sales_officer_name','sales_officer','marketing_officer','marketing_officer_email','sales_officer_email'],\n        //             },\n        //         })\n        //         .then(function(doc)\n        //         {\n        //             if(doc.message[0])\n        //             {\n        //                 $.each(doc.message,function(i,u)\n        //                 {\n        //                     m_officer_list[0]=\"\"\n        //                     m_officer_email_list[0]=\"\"\n        //                     s_officer_list[0]=\"\"\n        //                     s_officer_email_list[0]=\"\"\n        //                     m_officer_list[i+1]=u.marketing_officer_name\n        //                     m_officer_email_list[i+1]=u.marketing_officer_email\n        //                     s_officer_list[i+1]=u.sales_officer_name\n        //                     s_officer_email_list[i+1]=u.sales_officer_email\n        //                 })\n                        \n        //                 m_officer_unique = [...new Set(m_officer_list)];\n        //                 m_officer_email_unique = [...new Set(m_officer_email_list)];\n        //                 s_officer_unique = [...new Set(s_officer_list)];\n        //                 s_officer_email_unique = [...new Set(s_officer_email_list)];\n                        \n        //                 frm.set_df_property(\"marketing_officer\",\"options\",m_officer_unique)\n        //                 frm.set_df_property(\"sales_officer\",\"options\",s_officer_unique)\n        //                 // frm.set_df_property(\"assign\",\"options\",uniqueChars1)\n        //                 frm.refresh_field(\"marketing_officer\")\n        //                 frm.refresh_field(\"sales_officer\")\n        //             }\n        //         });\n        // }\n        // else if(frappe.user.has_role(\"Area Sales Manager\"))\n        // {\n        //         frappe.call\n        //         ({\n        //             \"method\":\"frappe.client.get_list\",\n        //             \"args\":\n        //             {\n        //                 \"doctype\":\"Assign Sale Area\",\n        //                 \"filters\":\n        //                     \t{\n        //                         \t\"area_sales_manager_email\":frappe.session.user,\n        //                         },\n        //                 'fields': ['marketing_officer_name','sales_officer_name','sales_officer','marketing_officer','marketing_officer_email','sales_officer_email'],\n        //             },\n        //         })\n        //         .then(function(doc)\n        //         {\n        //             if(doc.message[0])\n        //             {\n        //                 $.each(doc.message,function(i,u)\n        //                 {\n        //                     m_officer_list[0]=\"\"\n        //                     m_officer_email_list[0]=\"\"\n        //                     s_officer_list[0]=\"\"\n        //                     s_officer_email_list[0]=\"\"\n        //                     m_officer_list[i+1]=u.marketing_officer_name\n        //                     m_officer_email_list[i+1]=u.marketing_officer_email\n        //                     s_officer_list[i+1]=u.sales_officer_name\n        //                     s_officer_email_list[i+1]=u.sales_officer_email\n        //                 })\n                        \n        //                 m_officer_unique = [...new Set(m_officer_list)];\n        //                 m_officer_email_unique = [...new Set(m_officer_email_list)];\n        //                 s_officer_unique = [...new Set(s_officer_list)];\n        //                 s_officer_email_unique = [...new Set(s_officer_email_list)];\n                        \n        //                 frm.set_df_property(\"marketing_officer\",\"options\",m_officer_unique)\n        //                 frm.set_df_property(\"sales_officer\",\"options\",s_officer_unique)\n        //                 // frm.set_df_property(\"assign\",\"options\",uniqueChars1)\n        //                 frm.refresh_field(\"marketing_officer\")\n        //                 frm.refresh_field(\"sales_officer\")\n        //             }\n        //         });\n        // }\n        // else(frappe.user.has_role(\"Marketing Supervisor\"))\n        // {\n        //         frappe.call\n        //         ({\n        //             \"method\":\"frappe.client.get_list\",\n        //             \"args\":\n        //             {\n        //                 \"doctype\":\"Assign Sale Area\",\n        //                 'fields': ['marketing_officer_name','sales_officer_name','sales_officer','marketing_officer','marketing_officer_email','sales_officer_email'],\n        //             },\n        //         })\n        //         .then(function(doc)\n        //         {\n        //             if(doc.message[0])\n        //             {\n        //                 $.each(doc.message,function(i,u)\n        //                 {\n        //                     m_officer_list[0]=\"\"\n        //                     m_officer_email_list[0]=\"\"\n        //                     s_officer_list[0]=\"\"\n        //                     s_officer_email_list[0]=\"\"\n        //                     m_officer_list[i+1]=u.marketing_officer_name\n        //                     m_officer_email_list[i+1]=u.marketing_officer_email\n        //                     s_officer_list[i+1]=u.sales_officer_name\n        //                     s_officer_email_list[i+1]=u.sales_officer_email\n        //                 })\n                        \n        //                 m_officer_unique = [...new Set(m_officer_list)];\n        //                 m_officer_email_unique = [...new Set(m_officer_email_list)];\n        //                 s_officer_unique = [...new Set(s_officer_list)];\n        //                 s_officer_email_unique = [...new Set(s_officer_email_list)];\n                        \n        //                 frm.set_df_property(\"marketing_officer\",\"options\",m_officer_unique)\n        //                 frm.set_df_property(\"sales_officer\",\"options\",s_officer_unique)\n        //                 // frm.set_df_property(\"assign\",\"options\",uniqueChars1)\n        //                 frm.refresh_field(\"marketing_officer\")\n        //                 frm.refresh_field(\"sales_officer\")\n        //             }\n        //         });\n        // }\n    },\n    \n    // assign_filter(frm)\n    // {\n    //     if(frappe.user.has_role(\"Sales_Officer\"))\n    //     {\n    //           frappe.call\n    //             ({\n    //                 \"method\":\"frappe.client.get_list\",\n    //                 \"args\":\n    //                 {\n    //                     \"doctype\":\"Assign Sale Area\",\n    //                     \"filters\":\n    //                         \t{\n    //                             \t\"sales_officer_email\":frappe.session.user,\n    //                             },\n    //                     'fields': ['marketing_officer'],\n    //                 },\n    //             })\n    //             .then(function(doc)\n    //             {\n    //                 if(doc.message[0])\n    //                 {\n    //                     $.each(doc.message,function(i,u)\n    //                     {\n    //                         employees_list[i]=u.marketing_officer\n    //                         console.log(employees_list)\n    //                     })\n    //                     // frm.set_df_property(\"assign\",\"options\",employees_list)\n    //                     // frm.refresh_field(\"assign\")\n    //                 }\n    //             });\n    //     }\n    // },\n    \n    lead_location(frm)\n    {\n        if(frm.doc.select_lead==\"Lead\")\n        {\n            frm.set_value(\"location\",frm.doc.lead_location)\n        }\n        else\n        {\n            frm.set_value(\"location\",frm.doc.customer_locations)\n        }\n    },\n    \n    customer_locations(frm)\n    {\n        if(frm.doc.select_lead==\"Lead\")\n        {\n            frm.set_value(\"location\",frm.doc.lead_location)\n        }\n        else\n        {\n            frm.set_value(\"location\",frm.doc.customer_locations)\n        }\n    },\n    \n    contact_time_in_hour(frm)\n    {\n        frm.set_value(\"from_time\",frm.doc.contact_time_in_hour+\":\"+frm.doc.contact_time_in_min+\" \"+frm.doc.time2)\n    },\n    \n    \n    \n    contact_time_in_min(frm)\n    {\n        frm.set_value(\"from_time\",frm.doc.contact_time_in_hour+\":\"+frm.doc.contact_time_in_min+\" \"+frm.doc.time2)\n    },\n    \n    \n    \n    time2(frm)\n    {\n        frm.set_value(\"from_time\",frm.doc.contact_time_in_hour+\":\"+frm.doc.contact_time_in_min+\" \"+frm.doc.time2)\n    },\n    \n    \n    \n    contact_to_time_in_hour(frm)\n    {\n        frm.set_value(\"to_time\",frm.doc.contact_to_time_in_hour+\":\"+frm.doc.contact_to_time_in_min+\" \"+frm.doc.time1)\n    },\n    \n    \n    \n    \n    contact_to_time_in_min(frm)\n    {\n        frm.set_value(\"to_time\",frm.doc.contact_to_time_in_hour+\":\"+frm.doc.contact_to_time_in_min+\" \"+frm.doc.time1)\n    },\n    \n    \n    \n\n    time1(frm)\n    {\n        frm.set_value(\"to_time\",frm.doc.contact_to_time_in_hour+\":\"+frm.doc.contact_to_time_in_min+\" \"+frm.doc.time1)\n    },\n    \n    \n    \n    \n    select_lead_name(frm)\n    {\n        lead_filter=undefined\n        if(frm.doc.select_lead_name !=undefined)\n        {\n            frm.set_value(\"leadorcustomer\",frm.doc.lead_id)\n            \n            frm.set_df_property('marketing_officer', 'hidden',0);\n            frm.set_df_property('sales_officer', 'hidden',0);\n        }\n        else\n        {\n            frm.set_value(\"leadorcustomer\",undefined)\n        }\n        \n        frm.trigger(\"employee_filter\")\n        frm.trigger(\"filter_field\")\n         \n    },\n    \n    \n    \n    \n    select_customer(frm)\n    {\n        if(frm.doc.select_customer !=undefined)\n        {\n            frm.set_value(\"leadorcustomer\",frm.doc.select_customer)\n        }\n        else\n        {\n            frm.set_value(\"leadorcustomer\",undefined)\n        }\n         frm.trigger(\"employee_filter\")\n    },\n    \n    \n    \n    \n    before_save(frm)\n    {\n        if(frm.doc.status==\"Open\")\n        {\n            frm.set_value(\"to_time\",undefined)\n        }\n    },\n    \n    \n    \n\n    after_save:function(frm)\n    {\n        console.log(\"a1\",frm)\n        var u=frm.doc.note\n        var emp_designation\n        \n        if(frm.doc.marketing_officer==undefined||frm.doc.marketing_officer==\" \")\n        {\n            frm.set_df_property(\"marketing_officer\",\"hidden\",1)\n        }\n        \n        if(frm.doc.sales_officer==undefined||frm.doc.sales_officer==\" \")\n        {\n            frm.set_df_property(\"sales_officer\",\"hidden\",1)\n        }\n        \n\n        if(frappe.user.has_role(\"Sales Officer\"))\n        {\n                emp_designation==\"Sales Officer\"\n        }\n        \n        \n        \n        if(frm.doc.status==\"Closed\")\n        {\n            var from_time1\n            var to_time1\n            var emp_name\n            var newlead=0\n            var assigned_officer=\" \"\n            var lead_cust_name=\" \"\n            \n                    if(frm.doc.select_lead==\"Lead\")\n                    {\n                            frappe.call\n                            ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                {\n                                    \"doctype\":\"Lead\",\n                                    \"filters\":\n                                        \t{\n                                            \t\"name\":frm.doc.select_lead_name,\n                                            },\n                                    'fields': ['date'],\n                                },\n                            })\n                            .then(function(doc)\n                            {\n                                console.log(\"z1 \",frappe.datetime.now_datetime().split(\" \")[0])\n                                console.log(\"z2 \",doc.message[0].date)\n                                if(frappe.datetime.now_datetime().split(\" \")[0]==doc.message[0].date)\n                                {\n                                    console.log(\"z3\")\n                                    newlead=1\n                                }\n                                else\n                                {\n                                    console.log(\"z4\")\n                                    newlead=0\n                                }\n                            })\n                    }\n                    else\n                    {\n                        console.log(\"z5\")\n                        newlead=0\n                    }\n            \n            if(frm.doc.contact_time_in_min !=undefined)\n            {\n                from_time1=frm.doc.contact_time_in_hour+\":\"+frm.doc.contact_time_in_min\n            }\n            else\n            {\n                from_time1=frm.doc.contact_time_in_hour\n            }\n            \n            \n            if(frm.doc.contact_to_time_in_min !=undefined)\n            {\n                to_time1=frm.doc.contact_to_time_in_hour+\":\"+frm.doc.contact_to_time_in_min\n            }\n            else\n            {\n                to_time1=frm.doc.contact_to_time_in_hour\n            }\n            \n            if(frm.doc.select_lead==\"Lead\")\n            {\n                emp_name=frm.doc.select_lead_name\n                lead_cust_name=frm.doc.lead_name\n            }\n            else\n            {\n                emp_name=frm.doc.select_customer\n                lead_cust_name=frm.doc.customer_name\n            }\n            \n            if(frm.doc.sales_officer2 !=undefined)\n            {\n                if(frm.doc.sales_officer2.length>0)\n                {\n                    assigned_officer=frm.doc.sales_officer2\n                }\n                else\n                {\n                    assigned_officer=frm.doc.marketing_officer1\n                }\n            }\n            else\n            {\n                assigned_officer=frm.doc.marketing_officer1\n            }\n\n            console.log(\"newlead  \",newlead)\n            \n            if(frm.doc.select_lead==\"Lead\")\n            {\n                frappe.call\n                ({\n                  \"method\":\"meeting_update\",\n                    \"args\":{\n                             due_date1:frm.doc.due_date,\n                             status1:frm.doc.status,\n                             select_lead_name1:frm.doc.select_lead_name,\n                             //assign1:frm.doc.assign,\n                             assign1:assigned_officer,\n                             from_time1:from_time1+\" \"+frm.doc.time2,\n                             to_time1:to_time1+\" \"+frm.doc.time1,\n                             note:frm.doc.note,\n                             task_type1:frm.doc.task_type,\n                             contact_time:from_time1+\" \"+frm.doc.time2+\"--\"+to_time1+\" \"+frm.doc.time1,\n                            },\n                });\n            }\n            else\n            {\n                 frappe.call\n                ({\n                  \"method\":\"meeting_updates_customer\",\n                    \"args\":{\n                             due_date1:frm.doc.due_date,\n                             status1:frm.doc.status,\n                             select_customer:frm.doc.select_customer,\n                            //  assign1:frm.doc.assign,\n                             assign1:assigned_officer,\n                             from_time1:from_time1+\" \"+frm.doc.time2,\n                             to_time1:to_time1+\" \"+frm.doc.time1,\n                             note:frm.doc.note,\n                             task_type1:frm.doc.task_type,\n                             contact_time:from_time1+\" \"+frm.doc.time2+\"--\"+to_time1+\" \"+frm.doc.time1,\n                          },\n                });\n            }\n            \n            \n            setTimeout\n            (\n            function()\n            {\n                frappe.call\n                ({\n                    \"method\":\"frappe.client.get_list\",\n                    \"args\":\n                    {\n                        \"doctype\":\"Target\",\n                        \"filters\":\n                            \t{\n                                // \t\"employee\":frm.doc.assign,\n                                \t\"employee\":assigned_officer,\n                \t\t\t\t// \t\"active\":1,\n                                },\n                        'fields': ['target','total_visit','new_customer'],\n                    },\n                })\n                .then(function(doc)\n                {\n                    if(doc.message[0])\n                    {\n                         target1=doc.message[0].target\n                         total_visit1=doc.message[0].total_visit\n                         new_customer1=doc.message[0].new_customer\n                    }\n                    else\n                    {\n                        target1=\" \";\n                        total_visit1=\" \";\n                        new_customer1=\" \";\n                    }\n                    console.log(\"total_visit1   \",total_visit1)\n                    console.log(\"new_customer1   \",new_customer1)\n\n                                                                                frappe.call\n                                                                                ({\n                                                                                    \"method\":\"frappe.client.get_list\",\n                                                                                    \"args\":\n                                                                                    {\n                                                                                        \"doctype\":\"Timesheet\",\n                                                                                        \"filters\":\n                                                                                        \t{\n                                                                                            \t//\"employee\":frm.doc.assign,\n                                                                                            \t\"employee\":assigned_officer,\n                                                                    \t\t\t\t\t\t\t\"date\":frm.doc.due_date,\n                                                                    \t\t\t\t\t\t\t\"status\":\"Draft\",\n                                                                                            },\n                                                                                        'fields': ['date','employee','status','name'],\n                                                                                        \n                                                                                    },\n                                                                                    callback:function(r)\n                                                                                    {\n                                                                                        \n                                                                                        if(r.message[0])\n                                                                                        {\n                                                                                            console.log(\"total_visit4   \",total_visit1)\n                                                                                            console.log(\"new_customer4   \",new_customer1)\n                                                                    \t                    frappe.call\n                                                                    \t                    ({\n                                                                                                \"method\":\"timesheet_row_add\",\n                                                                                                \"args\":{\n                                                                                                         timesheet:r.message[0].name,\n                                                                                                         type:frm.doc.select_lead,\n                                                                                                         doc_id:emp_name,\n                                                                                                         from_time1:from_time1+\" \"+frm.doc.time2,\n                                                                                                        //  time1:frm.doc.time1,\n                                                                                                         to_time1:to_time1+\" \"+frm.doc.time1,\n                                                                                                        //  time2:frm.doc.time2,\n                                                                                                         date1:frm.doc.due_date,\n                                                                                                         //employee:frm.doc.assign,\n                                                                                                         lead_cust_name:lead_cust_name,\n                                                                                                         employee:assigned_officer,\n                                                                                                         //newlead:flt(newlead)\n                                                                                                         newlead:Number(newlead),\n                                                                                                         total_visit1:total_visit1,\n                                                                                                         new_customer1:new_customer1,\n                                                                                                         \n                                                                                                        },\n                                                                                            });\n                                                                                        }\n                                                                                        else\n                                                                                        {\n                                                                                            if(frappe.user.has_role(\"Sales Officer\"))\n                                                                                            {\n                                                                                                 frappe.db.insert\n                                                                        \t                       ({\n                                                                                                        doctype:'Timesheet',    \n                                                                                                        date:frm.doc.due_date,\n                                                                                                        //employee:frm.doc.assign,\n                                                                                                        employee:assigned_officer,\n                                                                                                        employee_name:frm.doc.assign,\n                                                                                                        target_total_visit:total_visit1,\n                                                                                                        target_new_lead:new_customer1,\n                                                                                                        designation:\"Sales Officer\",\n                                                                                                        // employee_name:employee,\n                                                                                                        time_logs:\n                                                                                                        [\n                                                                                                          {\n                                                                                                                 type:frm.doc.select_lead,\n                                                                                                                 doc_id:emp_name,\n                                                                                                                 from:from_time1+\" \"+frm.doc.time2,\n                                                                                                                //  time1:frm.doc.time1,\n                                                                                                                 to:to_time1+\" \"+frm.doc.time1,\n                                                                                                                //  time2:frm.doc.time2,\n                                                                                                                 date1:frm.doc.due_date,\n                                                                                                                 employee:frm.doc.assign,\n                                                                                                                 lead_cust_name:lead_cust_name,\n                                                                                                                //  newlead:flt(newlead),\n                                                                                                                new_lead:Number(newlead)\n                                                                                                          },\n                                                                                                        ]\n                                                                                                    });\n                                                                                            }\n                                                                                            else\n                                                                                            {\n                                                                                                frappe.db.insert\n                                                                        \t                       ({\n                                                                                                        doctype:'Timesheet',    \n                                                                                                        date:frm.doc.due_date,\n                                                                                                        //employee:frm.doc.assign,\n                                                                                                        employee:assigned_officer,\n                                                                                                        employee_name:frm.doc.assign,\n                                                                                                        target_total_visit:total_visit1,\n                                                                                                        target_new_lead:new_customer1,\n                                                                                                        // employee_name:employee,\n                                                                                                        time_logs:\n                                                                                                        [\n                                                                                                          {\n                                                                                                                 type:frm.doc.select_lead,\n                                                                                                                 doc_id:emp_name,\n                                                                                                                 from:from_time1+\" \"+frm.doc.time2,\n                                                                                                                //  time1:frm.doc.time1,\n                                                                                                                 to:to_time1+\" \"+frm.doc.time1,\n                                                                                                                //  time2:frm.doc.time2,\n                                                                                                                 date1:frm.doc.due_date,\n                                                                                                                 lead_cust_name:lead_cust_name,\n                                                                                                                 employee:frm.doc.assign,\n                                                                                                                //  newlead:flt(newlead),\n                                                                                                                new_lead:Number(newlead)\n                                                                                                          },\n                                                                                                        ]\n                                                                                                    });\n                                                                                            }\n                                                                                        }\n                                                                                        \n                                                                                        // frappe.set_route(\"List\",\"Task\");  \n                                                                                    }\n                                                                                });\n                    \n                })\n            \n            }\n            ,3000);\n            \n                \n        }\n        \n        // else\n        // {\n            \n        //      frappe.set_route(\"List\",\"Task\");\n        // }\n        \n        \n        if(frm.doc.status==\"Closed\")\n        {\n            // frm.set_df_property('note',  'read_only',1);\n             frm.set_df_property('due_date',  'read_only',1);\n             frm.set_df_property('contact_time',  'read_only',1);\n             frm.set_df_property('assign',  'read_only',1);\n             frm.set_df_property('subject',  'read_only',1);\n             frm.set_df_property('select_lead',  'read_only',1);\n             frm.set_df_property('status',  'read_only',1);\n             frm.set_df_property('lead_location',  'read_only',1);\n             frm.set_df_property('select_lead_name',  'read_only',1);\n             frm.set_df_property('time2',  'read_only',1);\n             frm.set_df_property('time1',  'read_only',1);\n             \n             frm.set_df_property('contact_time_in_min',  'read_only',1);\n             frm.set_df_property('contact_time_in_hour',  'read_only',1);\n             frm.set_df_property('contact_to_time_in_hour',  'read_only',1);\n             frm.set_df_property('contact_to_time_in_min',  'read_only',1);\n             frm.set_df_property('note',  'read_only',1);\n             frm.set_df_property('marketing_officer','read_only',1)\n             frm.set_df_property('sales_officer','read_only',1)\n             frm.set_df_property('task_type','read_only',1)\n                 \n            \n        }\n        \n        // frm.reload_doc();\n        \n        // frappe.set_route(\"List\",\"Task\");\n        \n        \n        \n        \n      //-------------------------------------------------------------------------------------------------- \n        \n        \n        \n        var obj={}\n        obj.notification= {\n                                            \"body\":\"New Task is Scheduled on\"+\" \"+frm.doc.due_date+\".\"+\"Meeting Time is\"+\" \"+frm.doc.contact_time_in_hour+\":\"+frm.doc.contact_time_in_min+\" \"+frm.doc.time2,\n                                            \"title\":\"You have a new Task\"\n                          }\n                          \n                          \n            // var email=frm.doc.assigned_to             \n            \n            \n            \n            if(frm.doc.sales_officer!==undefined) \n            {\n                if(frm.doc.status==\"Open\" || frm.doc.status==\"Overdue\")\n                {\n                \n                          \n\n    \t          frappe.call\n                  ({\n                                    method: \"frappe.client.get_list\",\n                                    args: \n                                        {\n                                            doctype: \"User\",\n                                            \n                                            filters: {'name':frm.doc.assigned_to},\n                                            \n                                            'fields': ['fcm_token'],\n                                        },\n                                            callback: function(res)\n                                            {\n                                                if(res.message[0])\n                                                { \n                                                    obj.to=res.message[0].fcm_token\n                                                }\n                                            }\n                    })\n                    .then(function(doc)\n                    {\n                              var serverKey=\"AAAA7i72nSA:APA91bFVkyguvpCvIHM6IUZwqzLrqK8ZWjlBhSJ6MupORQbLJKAGIeaLhvCjK1xQAKrRpGl-J3qCYJ_GULF6w36gMtXmT5YA3CdoeE6AJtcPA7ApC90Ozi4czj0C1BXj1vWG1Vl0cuIq\"\n                                $.ajax({\n                                          type: 'POST',\n                                          url: 'https://fcm.googleapis.com/fcm/send',\n                                          headers:\n                                          {\n                                            'Content-Type': 'application/json',\n                                            'Authorization': 'key='+serverKey\n                                          },\n                                          data: JSON.stringify(obj),\n                                          success: function(response)\n                                          {\n                                                // console.log(response);\n                                          },\n                                      });   \n                    })\n        \n                }\n        \n            }\n    },\n    \n    \n    \n\n        check_availability: function (frm) \n        {\n                     data=[]\n                     frappe.call\n                     ({\n                            method: \"frappe.client.get_list\",\n                            args: \n                            {\n                                doctype: \"Assign Sale Area\",\n                                fields: [\"sales_officer\",\"sales_officer_name\"],\n                                filters: { 'name':frm.doc.lead_location},\n                            },\n                                callback: function(r)\n                                {\n                                    if(r.message[0])\n                                    {\n                                        sales_officer=r.message[0].sales_officer\n                                        sales_officer_name=r.message[0].sales_officer_name\n                                        //d.show();\n                                    }\n                                }\n                     })\n                     .then(function(doc)\n                     {\n                        \tvar fields =\n                         \t[\n            \t                {\n                                \t\tfieldtype: \"Link\",\n                                \t\tfieldname: \"employee\",\n                                \t\tlabel: __(\"Sales Officer\"),\n                                \t\toptions:\"Employee\",\n                                \t\tdefault:sales_officer\n                                },\n                                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"lead_name\",\n                                \t\tlabel: __(\"Lead Name\"),\n                                \t\tdefault:frm.doc.lead_name,\n                                \t\tread_only:1\n                                },\n        \n                                {\"fieldtype\":\"Column Break\",},\n                                \n                                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"employee_name\",\n                                \t\tlabel: __(\"Sales Officer Name\"),\n                                \t\tdefault:sales_officer_name,\n                                \t\tread_only:1\n                                },\n                                \n                                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"customer_area\",\n                                \t\tlabel: __(\"Lead Area\"),\n                                \t\tdefault:frm.doc.lead_location,\n                                \t\tread_only:1\n                                },\n                                \n                                {\"fieldtype\":\"Section Break\",},\n                                \n                                \n                                {\n                                \t\tfieldtype: \"Date\",\n                                \t\tfieldname: \"date\",\n                                \t\tlabel: __(\"Meeting Date\"),\n                                \t\tdefault:frappe.datetime.nowdate(),\n                                \t\treqd: 1,\n                                \t\t'onchange': () =>\n                                        {  \n                                          // d.fields_dict.employee.text=\"SOF-5\"\n                                          // d.fields_dict.employee.value=\"SOF-5\"\n                                              //.fields_dict.items.grid.refresh();\n                                            if(trigger_count==\"1\")\n                                            {\n                                                    while(d.fields_dict.items.df.data[0] !=undefined)\n                                                    {\n                                                        //  while(d.fields_dict.items.df.data[0].name!=undefined)\n                                                        //  {\n                                                            d.fields_dict.items.grid.grid_rows.forEach(function(row)\n                                                            {\n                                                                row.remove();\n                                                            }); \n                                                        // }\n                                                    }\n    \n                                                    frappe.call\n                                                    ({\n                                                        \"method\":\"frappe.client.get_list\",\n                                                        \"args\":\n                                                            {\n                                                                \"doctype\":\"Task\",\n                                                                \"filters\":\n                                                                {\n                                                                    \"assign\":d.fields_dict.employee.value,\n                                                                    \"due_date\":d.fields_dict.date.value\n                                                                },\n                                                                \n                                                                fields:[\"name\",\"subject\",\"contact_time\",\"lead_name\",\"lead\",\"time1\",\"lead_location\"],\n                                                                order_by:\"time_in_24\",\n                                                            },\n                                                    })\n                                                    .then(function(doc1)\n                                                     {\n                                                         if(doc1.message.length>0)\n                                                         {\n                                                                      for(var j=0;j<doc1.message.length;j++)\n                                                                        {\n                                                                                    d.fields_dict.items.df.data.push({\"suject\":\"uuuuuuu\"})\n                                                                                    d.fields_dict.items.df.data[j].name=doc1.message[j].name\n                                                                                    //d.fields_dict.items.df.data[j].customer_name=doc1.message[j].customer_name\n                                                                                    if(doc1.message[j].lead_location !=undefined)\n                                                                                    {\n                                                                                        d.fields_dict.items.df.data[j].customer_location=doc1.message[j].lead_location\n                                                                                    }\n                                                                                    else\n                                                                                    {\n                                                                                         d.fields_dict.items.df.data[j].customer_location=doc1.message[j].customer_location\n                                                                                    }\n                                                                                    d.fields_dict.items.df.data[j].subject=doc1.message[j].subject\n                                                                                    d.fields_dict.items.df.data[j].contact_time=doc1.message[j].contact_time\n                                                                                    d.fields_dict.items.df.data[j].time1=doc1.message[j].time1\n                                                                        }\n                                                                          \n                                                         }\n                                                         d.fields_dict.items.grid.refresh();\n                                                     });\n                                                     trigger_count=2\n                                            }\n                                            else\n                                            {\n                                                trigger_count=1\n                                            }\n                                        },\n                                },\n                                    {\"fieldtype\":\"Column Break\",},\n                                {\n                                \t\tfieldtype: \"Select\",\n                                \t\tfieldname: \"time\",\n                                \t\tlabel: __(\"Meeting Time\"),\n                                \t\treqd:1,\n                                \t\toptions:[\" \",\"07:00\",\"07:15\",\"07:30\",\"07:45\",\"08:00\",\"08:15\",\"08:30\",\"08:45\",\"09:00\",\"09:15\",\"09:30\",\"09:45\",\"10:00\",\"10:15\",\"10:30\",\"10:45\",\"11:00\",\"11:15\",\"11:30\",\"11:45\",\"12:00\"],\n                                },\n                                    {\"fieldtype\":\"Column Break\",},\n                                {\n                                \t\tfieldtype: \"Select\",\n                                \t\tfieldname: \"time1\",\n                                \t\tlabel: __(\"\"),\n                                \t\tdefault:\"AM\",\n                                \t\toptions:[\"AM\",\"PM\"],\n                                        'onchange':()=>{\n                                \t\t    if (d.fields_dict.time1.value=='PM')\n                                \t\t    {\n                                \t\t        var field = d.get_field(\"time\");\n                                                field.df.options=[\"01:00\",\"01:15\",\"01:30\",\"01:45\",\"02:00\",\"02:15\",\"02:30\",\"02:45\",\"03:00\",\"03:15\",\"03:30\",\"03:45\",\"04:00\",\"04:15\",\"04:30\",\"04:45\",\"05:00\",\"05:15\",\"05:30\",\"05:45\",\"06:00\",\"06:15\",\"06:30\",\"06:45\",\"07:00\",\"07:15\",\"07:30\",\"07:45\",\"08:00\",\"08:15\",\"08:30\",\"08:45\",\"09:00\",\"09:15\",\"09:30\",\"09:45\",\"10:00\"]\n                                                field.refresh();\n                                \t\t    }\n                                \t\t    else if(d.fields_dict.time1.value=='AM')\n                                \t\t    {\n                                \t\t        var field = d.get_field(\"time\");\n                                                field.df.options=[\"07:00\",\"07:15\",\"07:30\",\"07:45\",\"08:00\",\"08:15\",\"08:30\",\"08:45\",\"09:00\",\"09:15\",\"09:30\",\"09:45\",\"10:00\",\"10:15\",\"10:30\",\"10:45\",\"11:00\",\"11:15\",\"11:30\",\"11:45\",\"12:00\"]\n                                                field.refresh();\n                                \t\t    }\n                                \t\t}\n                                },\n                                     {\"fieldtype\":\"Section Break\",},\n                                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"subject\",\n                                \t\tlabel: __(\"Subject\"),\n                                \t\treqd:1\n                                },\n            \t                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"remarks\",\n                                \t\tlabel: __(\"Remark\"),\n                                // \t\treqd:1\n                                },\n                                    {\"fieldtype\":\"Section Break\",},\n                        \t\t{\n                        \t\t\tfieldtype:'Table', fieldname: 'items', read_only:1,\n                        \t\t\tdescription: __('Existing Task'),\n                        \t\t\tfields:[\n                        \t\t\t\t{fieldtype:'read Only', fieldname:'name',label: __('Task'), in_list_view:1,columns:2},\n                        \t\t\t\t{fieldtype:'read Only', fieldname:'subject',label: __('Subject'), in_list_view:1,columns:2},\n                        \t\t\t\t// {fieldtype:'Read Only', fieldname:'customer_name',label: __('Customer Name'), in_list_view:1,columns: 2},\n                        \t\t\t\t{fieldtype:'read Only', fieldname:'customer_location',label: __('Lead/Customer Area'), in_list_view:1,columns:2},\n                        \t\t\t\t\n                        \t\t\t\t{fieldtype:'read Only', fieldname:'contact_time',label: __('Contact Time'), in_list_view:1,columns: 1},\n                        \t\t\t\t{fieldtype:'read Only', fieldname:'time1',label: __('time'), in_list_view:1,columns: 1},\n                        \t\t\t],\n                        \t\t\tcannot_add_rows: 1,\n                                    cannot_delete_rows : 1,\n                                    //cannot_edit_row:1,\n                        \t\t\tdata: data,\n                        \t\t\tget_data: function() \n                        \t\t\t{\n                        \t\t\t\treturn data\n                        \t\t\t}\n                        \t\t\n                                },\n                            ]\n                    \t\n                    \t    \tvar d = new frappe.ui.Dialog\n                            \t({\n                            \t\ttitle: __(\"Check Availability & Assign Task\"),\n                            \t\tfields: fields,\n                            \t\tprimary_action: function(values) \n                            \t\t{\n                            \t\t    var time_24=0\n                            \t\t    var remark1=undefined\n                            \t\t\t\n                            \t\t\tif(values.time1==\"PM\")\n                            \t\t\t{\n                            \t\t\t      time_24=flt(12.00+flt((values.time).replace(\":\",\".\"),2),2)\n                            \t\t\t}\n                            \t\t\telse\n                            \t\t\t{\n                            \t\t\t    time_24=values.time\n                            \t\t\t}\n                            \t\t\t\n                            \t\t\tif(values.remarks==undefined)\n                            \t\t\t{\n                            \t\t\t   remark1=values.subject\n                            \t\t\t}\n                            \t\t\telse\n                            \t\t\t{\n                            \t\t\t     remark1=values.remarks\n                            \t\t\t}\n                            \t\t\t\n                            \t\t\t\n                            \t\t\t                                   frappe.db.insert\n                                                                          ({\n                                                                              \"doctype\": \"Task\",\n                                                                              \"subject\":values.subject,\n                                                                              \"assign\":values.employee,\n                                                                              \"due_date\":values.date,\n                                                                            //   \"description\":remark1,\n                                                                              \"contact_time\":values.time,\n                                                                              \"lead\":frm.doc.lead,\n                                                                              \"lead_name\":frm.doc.lead_name,\n                                                                              \"lead_location\":frm.doc.lead_location,\n                                                                              \"time1\":values.time1,\n                                                                              \"time_in_24\":parseFloat(time_24).toFixed(2)       \n                                                                              });\n                                                                              \n                                                                             \n                                                                              \n                                                                            //   frm.set_value(\"assigned_to1\",values.employee)\n                                                                            //      frm.set_value(\"emp_id\",values.employee)\n                                                                           \n                                                                                //  var child = cur_frm.add_child(\"task_table1\");\n                                                                                //  frappe.model.set_value(child.doctype, child.name, \"date\",values.date);\n                                                                                //  frappe.model.set_value(child.doctype, child.name, \"time\",values.time);\n                                                                                //  frappe.model.set_value(child.doctype, child.name, \"subject\",values.subject);\n                                                                                //  frappe.model.set_value(child.doctype, child.name, \"emp_id\",values.employee);\n                                                                                //  frappe.model.set_value(child.doctype, child.name, \"note\",remark1);\n                    \n                                                                                //  cur_frm.refresh_field(\"task_table1\");\n                                                                                 trigger_count=1\n                                                                                 d.hide();\n                                                                                 frm.save(); \n                            \t\t},\n                            \t\tprimary_action_label: __('Assign')\n                            \t});\n                            \t\n                            \tvar field1 = d.get_field(\"employee\");\n                            \tfield1.df.read_only = 1;\n                            \tfield1.refresh();\n                            \t\n                            \t   //   d.fields_dict.lead.$input.on('change', function()\n                                // {\n                                //     console.log(\"ffff\")\n                                //         time_array=[\"1\",\"2\"]\n                                //          d.fields_dict.time.options(time_array)\n                                //       d.fields_dict.time.refresh();\n                                //     }); \n\n                            \td.$wrapper.find('.modal-content').css({\"width\":\"800px\"});\n                                d.show();   \n                                \n                              \n                     })\n        },\n});\n\n    \n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2023-08-30 12:35:47.404011",
  "module": null,
  "name": "Employee Form",
  "script": "var designation_change\nvar email_change\nvar role;\nvar module;\nvar designation\nvar company1\nvar last_name\nvar company=[];\nvar service_area=[];\nvar work_for_company_exist=[]\nvar work_for_company_new=[]\nvar updated_work_for_company=undefined\nvar newdoc=undefined\nvar existing_email_id=undefined\nvar s_company\nvar s_employee\nvar s_emp_name\nvar s_email\nvar newdoc1\nvar incentive_account\n\nvar create_heads_permission=\" \"\nvar previous_head=\" \"\nvar newdoc2=undefined\nvar after_save=\" \"\nvar validate1=\" \"\nvar validate2=\" \"\nvar validate3=\" \"\nvar trigger_save=\" \"\nvar validation_failed= \" \"\n\nfrappe.ui.form.on('Employee', \n{\n    onload(frm)\n    {\n        after_save=\" \"\n        \n        \n        if(frm.is_new()) \n        {\n            // frm.set_value(\"company\",undefined)     //disabled due to error while create employee from job applicant,company not fetching\n            frm.set_df_property('company', 'read_only', 0);\n             frm.set_df_property('employee_number', 'read_only', 0);\n             incentive_account=\"create\"\n        }\n        else\n        {\n             frm.set_df_property('company', 'read_only', 1);\n             frm.set_df_property('employee_number', 'read_only', 1);\n             if(frm.doc.incentive_payable !=undefined && frm.doc.incentive_payable != null)\n             {\n                 incentive_account=undefined\n             }\n             else\n             {\n                 incentive_account=\"create\"\n             }\n        }\n        \n        if(frm.doc.reports_to !=undefined)\n            {\n                if(frm.doc.reports_to.length>0)\n                {\n                    previous_head=frm.doc.leave_approver\n                }\n                else\n                {\n                    previous_head=\" \"\n                }\n            }\n            else\n            {\n                previous_head=\" \"\n            }\n\n        frm.set_df_property('status',  'hidden', 1);\n        \n        \n        work_for_company_exist=[]\n        work_for_company_new=[]\n        \n          existing_email_id=undefined\n          designation_change=undefined;\n          email_change=undefined;\n          frm.trigger(\"field_filters\");\n        \n        if(frm.doc.work_for_company !=undefined)\n        {\n            $.each(frm.doc.work_for_company,function(i,v)\n            {\n                work_for_company_exist[i]=v.working_for_company;\n            });\n        }\n        \n        if(frm.doc.employee_name != undefined)\n        {\n            frm.set_df_property('company', 'read_only', 1);\n            newdoc=\"false\"\n            newdoc1=\"false\"\n            newdoc2=\"false\"\n        }\n        else\n        {\n            frm.set_df_property('company', 'read_only',0);\n            newdoc=\"true\"\n            newdoc1=\"true\"\n            newdoc2=\"true\"\n        }\n        \n        \n        \n        frm.set_query(\"select_salary_structure\", function() {\n        return {\n            \"filters\": {\n                \"employee\": frm.doc.employee,\n                // \"status\":\"Submitted\"\n               \n            }\n        };\n    });\n        \n        \n        \n        \n        \n    },\n    \n    select_salary_structure:function(frm)\n    {\n        if(frm.doc.select_salary_structure)\n        {\n            frm.set_df_property('monthly_salary',  'read_only',   1);\n            frm.set_df_property('salary_detail',  'read_only',   1);\n            \n            cur_frm.clear_table(\"salary_detail\");\n            cur_frm.refresh_field(\"salary_detail\");\n            \n             frappe.call\n                          ({\n                                method: \"frappe.client.get\",\n                                args: \n                                        {\n                                            doctype:\"Salary Structure\",\n                                            filters: { 'name':frm.doc.select_salary_structure},\n                                        },\n                                    callback: function(r)\n                                    {\n                                          if(r.message)\n                                          {\n                                              console.log(r.message.earnings,\"pppppp\")\n                                              frm.set_value(\"monthly_salary\",r.message.monthly_salary)\n                                              \n                                              $.each(r.message.earnings,function(i,v)\n                                              {\n                                                //   console.log(v.salary_component.earnings)\n                                                  \n                                                    var child = cur_frm.add_child(\"salary_detail\");\n                                                    frappe.model.set_value(child.doctype, child.name, \"salary_component\",v.salary_component);\n                                                    frappe.model.set_value(child.doctype, child.name, \"per_working_day\",v.per_working_day);\n                                                    frappe.model.set_value(child.doctype, child.name, \"amount\",v.amount);\n                                                    // frappe.model.set_value(child.doctype, child.name, \"amount1\",v.amount1);\n                                                    \n                        \n                            \n                                              })\n                                                 cur_frm.refresh_field(\"salary_detail\");\n                                                  \n                                          }\n                                          \n                                    }\n                          });\n            \n        }\n        \n        else\n        {\n            frm.set_value('monthly_salary', undefined);\n            cur_frm.clear_table(\"salary_detail\");\n            cur_frm.refresh_field(\"salary_detail\");\n            \n        }\n        \n    },\n  \n    refresh(frm)\n    {\n        \n        frm.fields_dict.work_for_company.grid.get_field('working_for_company').get_query = function(doc, cdt, cdn) {\n    return {\n        filters: [\n            ['name', '!=', 'Lamit']\n        ]\n    };\n};\n        \n        \n        if(after_save==\"true\")\n        {\n            after_save=\" \"\n           // frappe.db.set_value(\"Employee\",frm.doc.name,{\"employee_permission\":frm.doc.name})\n            // frappe.set_route('List', 'Employee', 'List')\n            \n        }\n\n        frm.set_df_property('status',  'hidden', 1);\n        \n            $('li').removeClass(\"disabled\");\n            $(\".form-assignments\").hide();\n            $(\".form-reviews\").hide();\n    \t\t$(\".form-attachments\").hide();\n    \t\t$(\".form-shared\").hide();\n    \t\t$(\".form-tags\").hide();\n    \t\t$(\".form-sidebar-stats\").hide();\n    \t\t$(\".list-unstyled.sidebar-menu.text-muted\").hide();\n    \t\tfrm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\n    \t\t cur_frm.dashboard.hide();\n    \t\t  frm.dashboard.hide();\n\n    \t\t role=frm.doc.role_profile;\n    \t\t module=frm.doc.module_profile;\n    \t\t designation=frm.doc.designation;\n    \t\t company1=frm.doc.company;\n    \t\t last_name=frm.doc.last_name;\n\n    \t\tif(!frm.is_new()) \n    \t\t {\n    \t\t        frm.set_df_property('email_id',  'read_only', 1);\n    \t\t        frm.add_custom_button(__('Appointment Letter'), function()\n                    {\n                          frappe.call\n                          ({\n                                method: \"frappe.client.get_list\",\n                                args: \n                                        {\n                                            doctype:\"Appointment Letter1\",\n                                            filters: { 'employee_number':frm.doc.employee_number},\n                                        },\n                                    callback: function(r)\n                                    {\n                                          if(r.message[0])\n                                          {\n                                              frappe.set_route(\"Form\",\"Appointment Letter1\",r.message[0].name);\n                                          }\n                                          else\n                                          {\n                                                var mail\n                                                var applicant\n                                                if(frm.doc.prefered_contact_email==\"Company Email\")\n                                                {\n                                                    mail=frm.doc.company_email\n                                                }\n                                                else if(frm.doc.prefered_contact_email==\"Personal Email\")\n                                                {\n                                                    mail=frm.doc.personal_email\n                                                }\n                                                else if(frm.doc.prefered_contact_email==\"User ID\")\n                                                {\n                                                    mail=frm.doc.email_id\n                                                }\n                                                else\n                                                {\n                                                     mail=frm.doc.email_id\n                                                }\n                                                \n                                                frappe.route_options = \n                                                {\n                                                    // \"company\":\"Lamit\",\n                                                    \"employee\":frm.doc.name,\n                                                    \"email_id\":mail,\n                                                    // \"grade\":frm.doc.grade,\n                                                    // \"reporting_head_designation\":frm.doc.reporting_head_designation,\n                                                    // \"job_applicant\":applicant,\n                                                    // \"applicant_name\":frm.doc.employee_name,\n                                                    // \"first_name\":frm.doc.first_name,\n                                                    // \"last_name\":frm.doc.last_name,\n                                                    // \"employee_name\":frm.doc.applicant_name,\n                                                    // \"personal_email\":frm.doc.email_id,\n                                                    // \"cell_number\":frm.doc.phone_number,\n                                                    // \"designation\":frm.doc.designation,\n                                                  \n                                                    // \"job_applicant\":frm.doc.job_applicant1,\n                                                };\n                                                \n                                                document = frappe.new_doc(\"Appointment Letter1\");\n                                                frappe.set_route(\"Form\",\"Appointment Letter1\", document.name);\n                                        }\n                                    }\n                          });\n                    });\n                    \n                    frm.change_custom_button_type('Appointment Letter', null, 'success');\n\n\n                    frm.add_custom_button(__('Employee Separation'), function()\n                    {\n                          frappe.call\n                          ({\n                                method: \"frappe.client.get_list\",\n                                args: \n                                        {\n                                            doctype:\"Employee Separation1\",\n                                            filters: { 'employee_number':frm.doc.employee_number},\n                                        },\n                                    callback: function(r)\n                                    {\n                                          if(r.message[0])\n                                          {\n                                              frappe.set_route(\"Form\",\"Employee Separation1\",r.message[0].name);\n                                          }\n                                          else\n                                          {\n                                                frappe.route_options = \n                                                {\n                                                    \"employee\":frm.doc.name,\n                                                };\n                                                \n                                                document = frappe.new_doc(\"Employee Separation1\");\n                                                frappe.set_route(\"Form\",\"Employee Separation1\", document.name);\n                                          }\n                                    }\n                          });\n                    });\n                    frm.change_custom_button_type('Employee Separation', null, 'success');\n                    \n                     if(frm.doc.incentive_payable !=undefined && frm.doc.incentive_payable != null)\n                     {\n                        //  frm.set_df_property(\"incentive_payable\",\"read_only\",1)\n                     }\n                     else\n                     {\n                         frm.set_df_property(\"incentive_payable\",\"read_only\",0)\n                     }\n    // \t\t }\n\n           if(frm.doc.create_certificate==0)\n           {\n                \n                     frm.add_custom_button('Create Experience Certificate', () => \n                     {\n                         frappe.call\n                                  ({\n                                        method: \"frappe.client.get_list\",\n                                        args: \n                                                {\n                                                    doctype:\"Employee\",\n                                                     \n                                                    filters: { 'designation':\"HR Manager\",'status1':\"Active\"},\n                                                    fields:[\"name\",\"designation\",\"employee_name\"]\n                                                    \n                                                },\n                                               \n                                            callback: function(r)\n                                            {\n                                                  if(r)\n                                                  {\n                                                      \n                                                       var h1=frappe.datetime.nowdate()\n                                                             var g1=flt(h1.split(\"-\")[1])\n                                                             var g2=flt(h1.split(\"-\")[0])\n                                                             \n                                                              frappe.prompt([\n                                                                  \n                                                                        {\n                                                                            label: 'Place',\n                                                                            fieldname: 'place',\n                                                                            fieldtype: 'Data',\n                                                                            reqd:1\n                                                                            \n                                                                        },\n                                                                        \n                                                                        \n                                                                        {\n                                                                            label: 'Working Period',\n                                                                            fieldname: 'working_period',\n                                                                            fieldtype: 'Data',\n                                                                            reqd:1\n                                                                        },\n                                                                        \n                                                                        \n                                                                    ], (values) => \n                                                                    \n                                                                    {\n                                                                        \n                                                                        // frm.set_value(\"create_certificate\",1)\n                                                                        \n                                                                        \n                                                                        \n                                                                        frappe.db.insert({\n                                                                              \"doctype\": \"Experiance Certificate\",\n                                                                             \n                                                                              \"month\":g1,\n                                                                              \"year\":g2,\n                                                                              \"series\": \"G/LR/HR /EC \u201332/04-23\",\n                                                                              \"employee\":frm.doc.name,\n                                                                              \"employee_name\":frm.doc.employee_name,\n                                                                              \"salutation\":frm.doc.salutation,\n                                                                              \"designation\":frm.doc.designation,\n                                                                              \"place1\":values.place,\n                                                                              \"period\":values.working_period,\n                                                                              \"hr\":r.message[0].employee_name,\n                                                                              \"email\":frm.doc.email_id\n                                                                              \n                                                                        \n                                                                        // console.log(frm.doc.email_id)\n                                                                      \n                                                                      \n                                                                    });\n                                                                    // frm.save()\n                                                                        \n                                                                        \n                                                                        \n                                                                    })\n                                                                                      }\n                                                                                }\n                                                                      });\n                     })\n                     \n                     frm.change_custom_button_type('Create Experience Certificate', null, 'success');\n                    \n           }\n           \n    }\n    },\n    \n    designation:function(frm)\n    {\n       designation_change=frm.doc.designation;\n       \n                  frappe.call\n                  ({\n                        method: \"frappe.client.get_list\",\n                        args: \n                                {\n                                    doctype:\"Role Profile\",\n                                    filters: { 'name':frm.doc.designation},\n                                },\n                            callback: function(r)\n                            {\n                                  if(r.message[0])\n                                  {\n                                      frm.set_value(\"role_profile\",frm.doc.designation)\n                                  }\n                                  else\n                                  {\n                                      frm.set_value(\"role_profile\",undefined)\n                                  }\n                            }\n                  });\n    },\n    \n    email_id(frm)\n    {\n        email_change=frm.doc.email_id;\n        \n        if(frm.doc.email_id !=undefined)\n        {\n                frappe.call\n                  ({\n                        method: \"frappe.client.get_list\",\n                        args: \n                                {\n                                    doctype:\"User\",\n                                    filters: { 'email':frm.doc.email_id},\n                                },\n                            callback: function(r)\n                            {\n                                  if(r.message[0])\n                                  {\n                                         frm.set_df_property('email_id', 'description',\"Already existing email id\");\n                                        //  frappe.validated = false;\n                                  }\n                                  else\n                                  {\n                                      frm.set_df_property('email_id', 'description',undefined);\n                                    //   frappe.validated = true;\n                                  }\n                            }\n                  });\n        }\n    },\n    \n    employee_number:function(frm)\n    {\n        if(frm.doc.employee_number !=undefined)\n        {\n                frappe.call\n                  ({\n                        method: \"frappe.client.get_list\",\n                        args: \n                                {\n                                    doctype:\"Employee\",\n                                    filters: { 'name':frm.doc.employee_number},\n                                },\n                            callback: function(r)\n                            {\n                                  if(r.message[0])\n                                  {\n                                         frm.set_df_property('employee_number', 'description',\"Already existing employee number\");\n                                        //  frappe.validated = false;\n                                  }\n                                  else\n                                  {\n                                      frm.set_df_property('employee_number', 'description',undefined);\n                                    //   frappe.validated = true;\n                                  }\n                            }\n                  });\n        }\n    },\n    \n    incentive_payable:function(frm)\n    {\n        if(frm.doc.incentive_payable !=undefined)\n        {\n                frappe.call\n                  ({\n                        method: \"frappe.client.get_list\",\n                        args: \n                                {\n                                    doctype:\"Account\",\n                                    filters: { 'account_name':frm.doc.incentive_payable},\n                                },\n                            callback: function(r)\n                            {\n                                  if(r.message[0])\n                                  {\n                                         frm.set_df_property('incentive_payable', 'description',\"Duplicate Account Name\");\n                                        //  frappe.validated = false;\n                                  }\n                                  else\n                                  {\n                                      frm.set_df_property('incentive_payable', 'description',undefined);\n                                    //   frappe.validated = true;\n                                  }\n                            }\n                  });\n        }\n    },\n    \n    field_filters:function(frm)\n    {\n            frm.set_query(\"asm\", function() \n            {\n                return {\n                    \"filters\": \n                    {\n                       \"designation\": \"Area Sales Manager\",\n                    }\n                };\n            });\n    \n            frm.set_query(\"marketing_officer_\", function() \n                    {\n                        return {\n                            \"filters\": \n                            {\n                              \"designation\": \"Marketing Officer\",\n                            }\n                        };\n                    });\n                    \n                    \n                    \n             frm.set_query(\"marketing_superwiser\", function() \n                    {\n                        return {\n                            \"filters\": \n                            {\n                               \"designation\": \"Marketing Supervisor\",\n                            }\n                        };\n                    });     \n      },\n      \n    field_filters1:function(frm)\n    {\n            frm.set_query(\"asm\", function() \n            {\n                return {\n                    \"filters\": \n                    {\n                       \"designation\": \"Area Sales Manager\",\n                    }\n                };\n            });\n    \n            frm.set_query(\"marketing_officer_\", function() \n                    {\n                        return {\n                            \"filters\": \n                            {\n                              \"designation\": \"Marketing Officer\",\n                            }\n                        };\n                    });\n                    \n                    \n                    \n             frm.set_query(\"marketing_superwiser\", function() \n                    {\n                        return {\n                            \"filters\": \n                            {\n                               \"designation\": \"Marketing Supervisor\",\n                            }\n                        };\n                    });     \n      },\n    \n    // validate:function(frm)\n    // {\n    //     console.log(\"v1\")\n    //     // validate1=\" \"\n    //     // validate2=\" \"\n    //     // validate3=\" \"\n        \n    //     // if(frm.doc.designation==\"Sales Officer\" || frm.doc.designation==\"Marketing Officer\")\n    //     // {\n    //     //     console.log(\"v2\")\n    //     //     cur_frm.fields_dict.work_for_company.grid.toggle_reqd(\"working_for_company\", frm.doc.designation==\"Sales Officer\" || frm.doc.designation==\"Marketing Officer\")\n        \n        \n    //     // }\n        \n    //     // if(frm.is_new())\n    //     // {\n    //     //     console.log(\"v3\")\n    //     //         if(frm.doc.incentive_payable !=undefined)\n    //     //         {\n    //     //                 frappe.call\n    //     //                   ({\n    //     //                         method: \"frappe.client.get_list\",\n    //     //                         args: \n    //     //                                 {\n    //     //                                     doctype:\"Account\",\n    //     //                                     filters: { 'account_name':frm.doc.incentive_payable},\n    //     //                                 },\n    //     //                             callback: function(r)\n    //     //                             {\n    //     //                                   if(r.message[0])\n    //     //                                   {\n    //     //                                          frappe.throw(__(\"PLease enter correct incentive payable\"));\n    //     //                                          frappe.validated = false;\n    //     //                                          validate1=\"false\"\n    //     //                                   }\n    //     //                                   else\n    //     //                                   {\n                                            \n                                            \n    //     //                                       frappe.validated = true;\n    //     //                                       validate1=\"true\"\n    //     //                                   }\n    //     //                             }\n    //     //                   });\n    //     //         }\n                \n    //     //         if(frm.doc.email_id !=undefined)\n    //     //         {\n    //     //                 frappe.call\n    //     //                   ({\n    //     //                         method: \"frappe.client.get_list\",\n    //     //                         args: \n    //     //                                 {\n    //     //                                     doctype:\"User\",\n    //     //                                     filters: { 'email':frm.doc.email_id},\n    //     //                                 },\n    //     //                             callback: function(r)\n    //     //                             {\n    //     //                                   if(r.message[0])\n    //     //                                   {\n    //     //                                          frappe.throw(__(\"Please enter correct email id\"));\n    //     //                                          frappe.validated = false;\n    //     //                                          validate2=\"false\"\n    //     //                                   }\n    //     //                                   else\n    //     //                                   {\n                                            \n                                             \n    //     //                                       frappe.validated = true;\n    //     //                                       validate2=\"true\"\n    //     //                                   }\n    //     //                             }\n    //     //                   });\n    //     //         }\n            \n    //             // if(frm.doc.employee_number !=undefined)\n    //             // {\n    //             //         frappe.call\n    //             //           ({\n    //             //                 method: \"frappe.client.get_list\",\n    //             //                 args: \n    //             //                         {\n    //             //                             doctype:\"Employee\",\n    //             //                             filters: { 'name':frm.doc.employee_number},\n    //             //                         },\n    //             //                     callback: function(r)\n    //             //                     {\n    //             //                           if(r.message[0])\n    //             //                           {\n    //             //                                  frappe.throw(__(\"Please enter correct employee number\"));\n    //             //                                 frappe.validated = false;\n    //             //                                  validate3=\"false\"\n    //             //                           }\n    //             //                           else\n    //             //                           {\n                                              \n                                             \n    //             //                               frappe.validated = true;\n    //             //                               validate3=\"true\"\n    //             //                           }\n    //             //                     }\n    //             //           });\n    //             // }\n                \n    //     //         // if(validate1==\"true\"&&validate2==\"true\"&&validate3==\"true\")  \n    //     //         // {\n    //     //         //     frappe.validated = true;\n    //     //         // }\n    //     //         // else\n    //     //         // {\n    //     //         //     frappe.validated = false;\n    //     //         // }\n    //     // }\n    // },\n      \n    // before_save(frm)\n    // {\n    //     console.log(\"v4\")\n\n    //     // if(frm.is_new())\n    //     // {\n    //     //     if(validate1==\"true\"&&validate2==\"true\"&&validate3==\"true\"&&frm.doc.gender!=undefined&&frm.doc.date_of_birth!=undefined&&frm.doc.first_name!=undefined&&frm.doc.date_of_joining!=undefined&&frm.doc.employee_number!=undefined&&frm.doc.company!=undefined&&frm.doc.designation!=undefined&&frm.doc.department!=undefined&&frm.doc.reports_to!=undefinedfrm.doc.email_id!=undefinedfrm.doc.role_profile!=undefined&&frm.doc.cell_number!=undefined&&frm.doc.incentive_payable!=undefined)  \n    //     //     {\n    //     //     //     console.log(\"v5\")\n                \n    //     //         if(frm.doc.designation !=\"Executive Director\"&&frm.doc.designation !=\"Managing Director\"&&frm.doc.designation !=\"Sales Manager\"&& frm.doc.designation !=\"HR Manager\"&& frm.doc.designation !=\"HR User\")\n    //     //         {\n    //     //             if(newdoc2==\"true\")\n    //     //             {\n    //     //                 frappe.db.insert\n    //     //                 ({\n    //     //                     \"doctype\": \"Employee Permission\",\n    //     //                     \"employee\": frm.doc.employee_number,\n    //     //                 })\n            \n    //     //                 frappe.db.insert\n    //     //                 ({\n    //     //                     \"doctype\": \"Heads Permission\",\n    //     //                     \"employee\": frm.doc.employee_number,\n    //     //                 })\n            \n    //     //               frm.set_value(\"employee_permission\",frm.doc.employee_number)\n    //     //             }\n          \n    //     //         }\n                \n    //     //         trigger_save=\"true\"\n    //     //     }\n    //     //     else\n    //     //     {\n    //     //         trigger_save=\" \"\n    //     //     }\n    //     // }\n    //     // else\n    //     // {\n    //     //     trigger_save=\"true\"\n    //     // }\n    \n        \n    //     // validate1=\" \"\n    //     // validate2=\" \"\n    //     // validate3=\" \"\n    // },\n      \n    after_save(frm)\n    {\n\n            if(frm.doc.name==frm.doc.employee_number)\n            {\n                if(frm.doc.work_for_company!=undefined)\n                {\n                    $.each(frm.doc.work_for_company,function(i,v)\n                    {\n                        work_for_company_new[i]=v.working_for_company;\n                    });\n                }\n        \n                if(role!==frm.doc.role_profile)\n                {\n                      frappe.db.set_value('User', frm.doc.email_id, 'role_profile_name',frm.doc.role_profile)\n                }\n                else if(module!==frm.doc.module_profile)\n                {\n                     frappe.db.set_value('User', frm.doc.email_id, 'module_profile',frm.doc.module_profile)\n                }\n                else if(designation!==frm.doc.designation)\n                {\n                  frappe.db.set_value('User', frm.doc.email_id,'designation',frm.doc.designation)\n                }\n                else if(company1!==frm.doc.company)\n                {\n                  frappe.db.set_value('User', frm.doc.email_id,'company',frm.doc.company)\n                }\n                else if(last_name!==frm.doc.last_name)\n                {\n                  frappe.db.set_value('User', frm.doc.email_id,'last_name',frm.doc.last_name)\n                }\n    \n                if(newdoc ==\"true\")\n                {\n                    if(frm.doc.designation!=\"Sales Manager\"&&frm.doc.designation!=\"Marketing Supervisor\")\n                    {\n                        if(frm.doc.company !=\"Lamit\")\n                        {\n                                frappe.db.insert\n                                ({\n                                      \"doctype\": \"User Permission\",\n                                      \"user\":frm.doc.email_id,\n                                      \"allow\":\"Super Stockist\",\n                                      \"for_value\":frm.doc.company,\n                                      \"user_designation\":frm.doc.designation\n                                }); \n                        }\n                    }\n                    \n                    newdoc=\"false\"\n                }\n        \n                if(designation_change !=undefined)\n                {\n                    if(designation_change==\"Sales Admin\")\n                    {\n                        frappe.db.set_value(\"Company\",frm.doc.company,{\"sales_admin\":frm.doc.name,\"sales_admin_name\":frm.doc.employee_name,\"sales_admin_email\":frm.doc.email_id})\n                        .then(function(doc)\n                        {\n                                                                                        frappe.call\n                                                                \t                    ({\n                                                                                            \"method\":\"update_sales_admin\",\n                                                                                            \"args\":{\n                                                                                                         company1:frm.doc.company,\n                                                                                                         email_id1:frm.doc.email_id,\n                                                                                                         employee_name1:frm.doc.employee_name,\n                                                                                                         employee_number1:frm.doc.employee_number,\n                                                                                                    },\n                                                                                        });\n                        })\n                    }\n                    else if(designation_change==\"Sales Manager\"&&frm.doc.company==\"Lamit\")\n                    {\n                        frappe.db.set_value(\"Company\",frm.doc.company,{\"sales_manager\":frm.doc.name,\"sales_manager_name\":frm.doc.employee_name,\"sales_manager_email\":frm.doc.email_id})\n                    }\n                    else if(designation_change==\"Marketing Supervisor\" &&frm.doc.company==\"Lamit\")\n                    {\n                        frappe.db.set_value(\"Company\",frm.doc.company,{\"marketing_supervisor\":frm.doc.name,\"marketing_supervisor_name\":frm.doc.employee_name,\"marketing_supervisor_email\":frm.doc.email_id})\n                    }\n                }\n                frm.trigger(\"permission_to_company\")\n                \n                frm.trigger(\"create_employee_accounts\")\n\n                if(frm.doc.designation !=\"Executive Director\"&&frm.doc.designation !=\"Managing Director\"&&frm.doc.designation !=\"Sales Manager\"&& frm.doc.designation !=\"HR Manager\"&& frm.doc.designation !=\"HR User\")\n                {\n                    console.log(\"v6\")\n                    if(newdoc2==\"true\")\n                    {\n                        frappe.db.insert\n                        ({\n                                \"doctype\":\"User Permission\",\n                                \"user\":frm.doc.email_id,\n                                \"allow\":\"Employee Permission\",\n                                \"for_value\":frm.doc.employee_number,\n                                \"apply_to_all_doctypes\":1\n                        })\n        \n                         frappe.db.insert\n                        ({\n                                \"doctype\":\"User Permission\",\n                                \"user\":frm.doc.email_id,\n                                \"allow\":\"Heads Permission\",\n                                \"for_value\":frm.doc.employee_number,\n                                \"apply_to_all_doctypes\":1\n                        })\n                    }\n                }\n                \n                \n                setTimeout(() =>\n                {\n                  frm.trigger(\"permission_to_employee\") \n                }, 10);\n                \n               \n                \n                newdoc2=\"false\"\n                after_save=\"true\"\n                    \n                \n                \n            \n            }\n            \n            \n\n    },\n    \n    permission_to_employee:function(frm)\n    {\n         console.log(\"e4\",previous_head)\n         console.log(\"previous_head \",previous_head)\n         \n        if(frm.doc.designation !=\"Executive Director\"&&frm.doc.designation !=\"Sales Manager\"&& frm.doc.designation !=\"HR Manager\"&& frm.doc.designation !=\"HR User\")\n        {\n            if(previous_head !=\" \")\n            {\n                 console.log(\"e5\")\n                if(frm.doc.leave_approver !=previous_head)\n                {  \n                     console.log(\"e6\")\n                    //delete existing\n                                                                    frappe.call\n                                                                    ({\n                                                                        \"method\":\"frappe.client.get_list\",\n                                                                        \"args\":\n                                                                        {\n                                                                            \"doctype\":\"User Permission\",\n                                                                            \"filters\":\n                                                                            \t{\n                                                                            \t    \"allow\":\"Heads Permission\",\n                                                                                \t\"for_value\":frm.doc.employee_number,\n                                                                                    \"user\":previous_head,\n                                                                                },\n                                                                        },\n                                                                        callback:function(r)\n                                                                        {\n                                                                            if(r.message[0])\n                                                                            {\n                                                                                    frappe.call\n                                                            \t                    ({\n                                                                                        \"method\":\"delete_user_permission\",\n                                                                                        \"args\":{\n                                                                                                 name:r.message[0].name,\n                                                                                                },\n                                                                                    });\n                                                                            }\n                                                                        }\n                                                                    }); \n                    \n                    //create new\n                    frappe.db.insert\n                    ({\n                        \"doctype\":\"User Permission\",\n                        \"user\":frm.doc.leave_approver,\n                        \"allow\":\"Heads Permission\",\n                        \"for_value\":frm.doc.employee_number,\n                        \"apply_to_all_doctypes\":1\n                    })\n                    \n                    previous_head=frm.doc.leave_approver\n                }\n            }\n            else\n            {\n                 console.log(\"e7\")\n                //create head permission\n                // if(newdoc2==\"true\")\n                if(frm.doc.leave_approver !=undefined)\n                {\n                     frappe.db.insert\n                    ({\n                        \"doctype\":\"User Permission\",\n                        \"user\":frm.doc.leave_approver,\n                        \"allow\":\"Heads Permission\",\n                        \"for_value\":frm.doc.employee_number,\n                        \"apply_to_all_doctypes\":1\n                    })\n                }\n                previous_head=frm.doc.leave_approver\n            }\n        }\n        \n       // frm.set_value(\"employee_permission\")\n    },\n    \n    permission_to_company:function(frm)\n    {\n\n        if(updated_work_for_company==\"true\")\n        {\n            if(work_for_company_exist!=undefined&&work_for_company_new!=undefined)\n            {\n                for(var i=0;i<work_for_company_new.length;i++)\n                {\n                    if(!work_for_company_exist.includes(work_for_company_new[i]))\n                    {\n                         frappe.db.insert\n                        ({\n                              \"doctype\": \"User Permission\",\n                              \"user\":frm.doc.email_id,\n                              \"allow\":\"Super Stockist\",\n                              \"for_value\":work_for_company_new[i],\n                              \"user_designation\":frm.doc.designation,\n                              \"user_fullname\":frm.doc.employee_name,\n                              \"user_employee_id\":frm.doc.employee_number\n                        }); \n                    }\n                }\n                \n                for(var i=0;i<work_for_company_exist.length;i++)\n                {\n                    if(!work_for_company_new.includes(work_for_company_exist[i]))\n                    {\n                                                                frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get_list\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"User Permission\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                        \t    \"allow\":\"Super Stockist\",\n                                                                            \t\"for_value\":work_for_company_exist[i],\n                                                                                \"user\":frm.doc.email_id,\n                                                                            },\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message[0])\n                                                                        {\n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"delete_user_permission\",\n                                                                                    \"args\":{\n                                                                                             name:r.message[0].name,\n                                                                                            },\n                                                                                });\n                                                                        }\n                                                                    }\n                                                                });  \n                    }\n                }\n            }\n            else if(work_for_company_exist==undefined&&work_for_company_new!=undefined)\n            {\n                for(var i=0;i<work_for_company_new.length;i++)\n                {\n                         frappe.db.insert\n                        ({\n                              \"doctype\": \"User Permission\",\n                              \"user\":frm.doc.email_id,\n                              \"allow\":\"Super Stockist\",\n                              \"for_value\":work_for_company_new[i],\n                              \"user_designation\":frm.doc.designation,\n                              \"user_fullname\":frm.doc.employee_name,\n                              \"user_employee_id\":frm.doc.employee_number                             \n                        }); \n                }\n            }\n            else if(work_for_company_exist!=undefined&&work_for_company_new==undefined)\n            {\n                for(var i=0;i<work_for_company_exist.length;i++)\n                {\n                                                                frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get_list\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"User Permission\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                        \t    \"allow\":\"Super Stockist\",\n                                                                            \t\"for_value\":work_for_company_exist[i],\n                                                                                \"user\":frm.doc.email_id,\n                                                                            },\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message[0])\n                                                                        {\n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"delete_user_permission\",\n                                                                                    \"args\":{\n                                                                                             name:r.message[0].name,\n                                                                                            },\n                                                                                });\n                                                                        }\n                                                                    }\n                                                                }); \n                }\n            }\n            \n            updated_work_for_company=\"false\"\n            work_for_company_exist=[]\n            work_for_company_exist=work_for_company_new\n            work_for_company_new=[]\n        }\n        \n        // if(newdoc1==\"true\")\n        // {\n        //     newdoc1=\"false\"\n        // }\n        // else\n        // {\n        //     frappe.set_route(\"List\",\"Employee\");\n        // }\n        \n    },\n    \n    create_employee_accounts:function(frm)\n    {\n        if(incentive_account==\"create\"&&frm.doc.incentive_payable!=undefined && frm.doc.incentive_payable!=null )\n        {\n                        frappe.db.insert\n                        ({\n                              \"doctype\": \"Account\",\n                              \"company\":frm.doc.company,\n                              \"account_name\":frm.doc.incentive_payable,\n                              \"account_currency\":\"INR\",\n                              \"parent_account\":\"Incentive Payable - LR\",\n                              \"account_type\":\"Payable\"\n                        });   \n                        \n            incentive_account=undefined\n        }\n    },\n    \n    // update_asm:function(frm)\n    // {\n    //      console.log(s_company,+\"--\"+s_employee+\"--\"+s_emp_name+\"--\"+s_email)\n    //               frappe.call\n    //               ({\n                                                                                                    \n    //                  method: \"frappe.client.get_list\",\n    //                     args: \n    //                             {\n    //                                 doctype:\"Assign Sale Area\",\n    //                                 filters: { 'company':s_company},\n    //                             },\n    //                         callback:function(r)\n    //                         {\n    //                             if(r.message[0])\n    //                             {\n                                    \n    //                                 $.each(r.message,function(i,v)\n    //                                 {\n    //                                     console.log(\"ggg...\",v.name)\n    //                                     frappe.db.set_value(\"Assign Sale Area\",v.name,{\"area_sales_manager\":s_employee,\"area_sales_manager_name\":s_emp_name,\"area_sales_manager_email\":s_email})\n    //                                 })\n    //                             }\n    //                         }\n    //               })\n    // },\n    \n    \n    role_profile:function(frm)\n    {\n        frm.set_value(\"module_profile\",frm.doc.role_profile)\n    },\n    \n    \n    probation_period:function(frm)\n    {\n         var joining_date=frm.doc.date_of_joining\n         \n         if(frm.doc.probation_period>0)\n         {\n            frm.set_value(\"confirm_date\",frappe.datetime.add_days(joining_date, frm.doc.probation_period))\n         }\n         else if(frm.doc.probation_period.length==0)\n         {\n            frm.set_value(\"confirm_date\",undefined)\n         }\n         \n    },\n    \n    \n    reports_to:function(frm)\n    {\n        frm.set_value(\"leave_approver1\",frm.doc.reports_to)\n    },\n    \n    status1:function(frm)\n    {\n        \n        if(frm.doc.status1==\"Active\")\n        {\n            frm.set_value(\"status\",\"Active\")\n        }\n        else if(frm.doc.status1==\"Inactive\")\n        {\n            frm.set_value(\"status\",\"Inactive\")\n            \n        }\n        \n        else if(frm.doc.status1==\"Separation\")\n        {\n            frm.set_value(\"status\",\"Left\")\n            \n           \n            \n            \n        }\n        \n        \n        \n    }\n});\n\nfrappe.ui.form.on('Work For', \n{\n    working_for_company:function(frm,cdt,cdn)\n    {\n        updated_work_for_company=\"true\"\n    },\n    before_work_for_company_remove:function(frm,cdt,cdn)\n    {\n        updated_work_for_company=\"true\"\n    }\n    \n})\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-05-16 11:03:55.480787",
  "module": null,
  "name": "Item -Form",
  "script": "var pricelist\nvar updatepricelist\n\n\nvar warehouse=[];\nvar company=[];\n\n\nvar european;\n\n\nvar ss_price;\nvar lamit_price;\n\nvar mop1\nvar mrp1\nvar ss_price1;\nvar lamit_price1;\nvar cost_of_price;\n\n\nfrappe.ui.form.on('Item',\n{\n\tonload(frm)\n\t{\n\t    \n\t    \n\t    \n// \t\tfrm.set_query(\"item_group\", function() {\n// \t\t\treturn {\n// \t\t\t\tfilters: [\n// \t\t\t\t\t[\"Item\",\"is_group\", \"=\", [\"0\"]]\n// \t\t\t\t]\n// \t\t\t}\n// \t\t});\n\t\n\t    \n\t    \n\t    \n\t    \n\t    updatepricelist=\"false\"\n\n        if(frm.doc.mrp !=undefined&&frm.doc.mrp.length>0)\n        {\n            pricelist=\"exist\"\n        }\n        else\n        {\n            pricelist=\"not_exist\"\n        }\n        \n        if(frm.is_new())\n\t    {\n\t        frm.set_value(\"product_series\",undefined)\n\t        frm.set_value(\"product_brand\",undefined)\n\t        frm.set_value(\"sub_product\",undefined)\n\t        frm.set_value(\"product_type\",undefined)\n\t    }\n\t    \n\t    \n\t    \n\t    if(frm.doc.european_product!==1)\n\t    {\n\t        european=\"true\"\n\t        console.log(\"true\")\n\t    }\n\t    else\n\t    {\n\t        european=\"false\"\n\t        console.log(\"false\")\n\t    }\n\t    \n\t    \n\t    if(frm.doc.has_variants==1)\n\t    {\n\t        frm.set_df_property('cost_of_the_price',  'hidden',1);\n\t    }\n\t    \n        \n        \n\t},\n\t\n\trefresh(frm)\n\t{\n\t     $('li').removeClass(\"disabled\");\n\t     $(\".form-assignments\").hide();\n            $(\".form-reviews\").hide();\n    \t\t$(\".form-attachments\").hide();\n    \t\t$(\".form-shared\").hide();\n    \t\t$(\".form-tags\").hide();\n    \t\t$(\".form-sidebar-stats\").hide();\n    \t\t$(\".list-unstyled.sidebar-menu.text-muted\").hide();\n    \t\tfrm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\n        setTimeout(() =>\n        {\n            // document.querySelector(\".form-message.blue\").style.display = \"none\";\n           \n            frm.remove_custom_button('Publish in Website','Actions');\n            frm.remove_custom_button('Add / Edit Prices','Actions');\n            frm.remove_custom_button('Stock Projected Qty','View');\n            frm.remove_custom_button('Item Variant Settings','View');\n            frm.remove_custom_button('Variant Details Report','View'); \n            frm.remove_custom_button('Single Variant','Create');\n            frm.remove_custom_button('Multiple Variants','Create'); \n            \n            \n            \n            if(frm.doc.name!=\"new-item-1\"&& frm.doc.has_variants==1)\n            {\n                frm.add_custom_button(__(\"Create Variants\"), function() {\n\t\t\t\t\terpnext.item.show_multiple_variants_dialog(frm);\n\t\t\t\t});\n                \n            }\n        }, 10);\n\n\n\t    if(frm.doc.variant_of !=undefined)\n\t    {\n\t        frm.set_df_property(\"super_stockist_price\",\"read_only\",1)\n\t        frm.set_df_property(\"dealer_delivery_price\",\"read_only\",1)\n\t        frm.set_df_property(\"sub_dealer_price\",\"read_only\",1)\n\t        frm.set_df_property(\"mrp\",\"read_only\",1)\n\t        frm.set_df_property(\"mop\",\"read_only\",1)\n\t        frm.set_df_property(\"tax_percentage\",\"read_only\",1)\n\t    }\n\t    else\n\t    {\n\t        frm.set_df_property(\"super_stockist_price\",\"read_only\",0)\n\t        frm.set_df_property(\"dealer_delivery_price\",\"read_only\",0)\n\t        frm.set_df_property(\"sub_dealer_price\",\"read_only\",0)\n\t        frm.set_df_property(\"mrp\",\"read_only\",0)\n\t        frm.set_df_property(\"mop\",\"read_only\",0)\n\t        frm.set_df_property(\"tax_percentage\",\"read_only\",0)\n\t    }\n\t    \n\t    \n\t    \n\t    \n\t   // setTimeout(() => \n\t   // {\n\t   //     \t    frm.remove_custom_button('Actions');\n    //      // cur_frm.page.remove_inner_button(__('Close'),  __('Status'));\n    //      // cur_frm.page.remove_inner_button(__('Pick List'),  __('Create'));\n    //     //   cur_frm.page.remove_inner_button(__('Delivery Note'),  __('Create'));\n    //     //   cur_frm.page.remove_inner_button(__('Work Order'),  __('Create'));\n    //     //   cur_frm.page.remove_inner_button(__('Material Request'),  __('Create'));\n    //     //   cur_frm.page.remove_inner_button(__('Request for Raw Materials'),  __('Create'));\n    //     //   cur_frm.page.remove_inner_button(__('Purchase Order'),  __('Create'));\n    //     //   cur_frm.page.remove_inner_button(__('Project'),  __('Create'));\n    //     //   cur_frm.page.remove_inner_button(__('Payment Request'),  __('Create'));\n    //     //   cur_frm.page.remove_inner_button(__('Payment'),  __('Create'));\n    //     },1000);\n\t    \n\t    \n\t    \n\t    \n\t    \n\t  //  cur_frm.page.remove_inner_button(__('Item'),  __('Actions'));\n\n\t   // cur_frm.fields_dict['internal_work_history'].grid.wrapper.find('.grid-add-row').hide();\n    //     cur_frm.fields_dict['internal_work_history'].grid.wrapper.find('.grid-delete-row').hide();\n    //     $('*[data-fieldname=\"internal_work_history\"]').find('.grid-remove-rows').hide();\n    //     $('*[data-fieldname=\"internal_work_history\"]').find('.grid-insert-row-below').hide();\n    //     cur_frm.fields_dict['internal_work_history'].grid.wrapper.find('.btn-open-row').hide();\n    \n    \n    \n    if(frm.doc.european_product==1)\n    {\n        lamit_price=frm.doc.buying_price\n        ss_price=frm.doc.mrp\n    }\n    \n    else\n    {\n        \n        lamit_price1=frm.doc.buying_price\n        ss_price1=frm.doc.super_stockist_price\n        mop1=frm.doc.mop\n        mrp1=frm.doc.mrp\n        cost_of_price=frm.doc.cost_of_the_price\n    }\n    \n    \n    \n    \n    \n    \n    \n    \n    \n\t},\n\t\n\titem_group(frm)\n\t{\n\t    if(frm.doc.item_group==\"ASSET\")\n\t    {\n\t        frm.set_value(\"is_stock_item\",0)\n\t    }\n\t    else\n\t    {\n\t        frm.set_value(\"is_stock_item\",1)\n\t       // frm.refresh_field(\"is_stock_item\")\n\t    }\n\t},\n\t\n\thas_variants(frm)\n\t{\n\t    setTimeout(() =>\n        {\n\t        if(frm.doc.name!=\"new-item-1\"&& frm.doc.has_variants==1)\n            {\n                //show create button\n            }\n            else\n            {\n               frm.remove_custom_button('Single Variant','Create');\n               frm.remove_custom_button('Multiple Variants','Create'); \n            }\n            \n        }, 10);\n\t},\n\t\n\tcost_of_the_price(frm)\n\t{\n\t    updatepricelist=\"true\"\n\t},\n\t\n\tsuper_stockist_price(frm)\n    {\n        updatepricelist=\"true\"\n    },\n\t\n\tdealer_delivery_rate(frm)\n    {\n        updatepricelist=\"true\"\n    },\n    \n    sub_dealer_price(frm)\n    {\n        updatepricelist=\"true\"\n    },\n    \n    \n    buying_price(frm)\n    {\n        updatepricelist=\"true\"\n    },\n    \n    mop(frm)\n    {\n        updatepricelist=\"true\"\n    },\n    \n    mrp(frm)\n    {\n        updatepricelist=\"true\"\n    },\n    \n    product_series:function(frm)\n    {\n       frm.trigger(\"set_item_name\")\n    },\n    \n    product_brand:function(frm)\n    {\n       frm.trigger(\"set_item_name\")\n    },\n\n    sub_product:function(frm)\n    {\n       frm.trigger(\"set_item_name\")\n    },\n    \n    product_type:function(frm)\n    {\n        frm.trigger(\"set_item_name\")\n    },\n    \n   set_item_name:function(frm)\n    {\n            if(frm.doc.product_series !=undefined&&frm.doc.product_brand !=undefined&&frm.doc.sub_product!=undefined&&frm.doc.product_type!=undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.sub_product+\" \"+frm.doc.product_type)\n                frm.set_value(\"item_name\",frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.sub_product+\" \"+frm.doc.product_type)\n            }\n            else if(frm.doc.product_series !=undefined&&frm.doc.product_brand !=undefined&&frm.doc.sub_product!=undefined&&frm.doc.product_type==undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.sub_product)\n                frm.set_value(\"item_name\",frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.sub_product)\n            }\n            else if(frm.doc.product_series !=undefined&&frm.doc.product_brand !=undefined&&frm.doc.sub_product==undefined&&frm.doc.product_type!=undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.product_type)\n                frm.set_value(\"item_name\",frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.product_type)\n            }\n            else if(frm.doc.product_series !=undefined&&frm.doc.product_brand ==undefined&&frm.doc.sub_product!=undefined&&frm.doc.product_type!=undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.sub_product+\" \"+frm.doc.product_type)\n                frm.set_value(\"item_name\",frm.doc.product_series+\" \"+frm.doc.sub_product+\" \"+frm.doc.product_type)\n            }\n            else if(frm.doc.product_series ==undefined&&frm.doc.product_brand !=undefined&&frm.doc.sub_product!=undefined&&frm.doc.product_type!=undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.product_brand+\" \"+frm.doc.sub_product+\" \"+frm.doc.product_type)\n                frm.set_value(\"item_name\",frm.doc.product_brand+\" \"+frm.doc.sub_product+\" \"+frm.doc.product_type)\n            }\n            //1 - 5\n            else if(frm.doc.product_series !=undefined&&frm.doc.product_brand !=undefined&&frm.doc.sub_product==undefined&&frm.doc.product_type==undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.product_brand)\n                frm.set_value(\"item_name\",frm.doc.product_series+\" \"+frm.doc.product_brand)\n            }\n            else if(frm.doc.product_series !=undefined&&frm.doc.product_brand ==undefined&&frm.doc.sub_product==undefined&&frm.doc.product_type!=undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.product_type)\n                frm.set_value(\"item_name\",frm.doc.product_series+\" \"+frm.doc.product_type)\n            }\n            else if(frm.doc.product_series ==undefined&&frm.doc.product_brand ==undefined&&frm.doc.sub_product!=undefined&&frm.doc.product_type!=undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.sub_product+\" \"+frm.doc.product_type)\n                frm.set_value(\"item_name\",frm.doc.sub_product+\" \"+frm.doc.product_type)\n            }\n            else if(frm.doc.product_series ==undefined&&frm.doc.product_brand !=undefined&&frm.doc.sub_product!=undefined&&frm.doc.product_type==undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.sub_product+\" \"+frm.doc.product_type)\n                frm.set_value(\"item_name\",frm.doc.sub_product+\" \"+frm.doc.product_type)\n            }\n            else if(frm.doc.product_series !=undefined&&frm.doc.product_brand ==undefined&&frm.doc.sub_product!=undefined&&frm.doc.product_type==undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.sub_product)\n                frm.set_value(\"item_name\",frm.doc.product_series+\" \"+frm.doc.sub_product)\n            }\n            else if(frm.doc.product_series ==undefined&&frm.doc.product_brand !=undefined&&frm.doc.sub_product==undefined&&frm.doc.product_type!=undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.sub_product)\n                frm.set_value(\"item_name\",frm.doc.product_series+\" \"+frm.doc.sub_product)\n            }\n            //6-11\n            else if(frm.doc.product_series !=undefined&&frm.doc.product_brand ==undefined&&frm.doc.sub_product==undefined&&frm.doc.product_type==undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.product_series)\n                frm.set_value(\"item_name\",frm.doc.product_series)\n            }\n            else if(frm.doc.product_series ==undefined&&frm.doc.product_brand ==undefined&&frm.doc.sub_product==undefined&&frm.doc.product_type!=undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.product_type)\n                frm.set_value(\"item_name\",frm.doc.product_type)\n            }\n            else if(frm.doc.product_series ==undefined&&frm.doc.product_brand !=undefined&&frm.doc.sub_product==undefined&&frm.doc.product_type==undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.product_brand)\n                 frm.set_value(\"item_name\",frm.doc.product_brand)\n            }\n            else if(frm.doc.product_series ==undefined&&frm.doc.product_brand ==undefined&&frm.doc.sub_product!=undefined&&frm.doc.product_type==undefined)\n            {\n                frm.set_value(\"item_code\",frm.doc.sub_product)\n                frm.set_value(\"item_name\",frm.doc.sub_product)\n            }\n             else if(frm.doc.product_series ==undefined&&frm.doc.product_brand ==undefined&&frm.doc.sub_product==undefined&&frm.doc.product_type==undefined)\n            {\n                frm.set_value(\"item_code\",undefined)\n                 frm.set_value(\"item_name\",undefined)\n            }\n            \n            \n            \n            \n            \n            // if(frm.doc.product_series !=undefined&&frm.doc.product_brand !=undefined&&frm.doc.sub_product!=undefined&&frm.doc.product_type!=undefined)\n            // {\n            //     frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.sub_product+\" \"+frm.doc.product_type)\n            // }\n            \n            \n    },\n    \n    before_save(frm)\n    {\n        if(frm.doc.european_product==1)\n        {\n            frm.set_value(\"european_product_value\",\"1\")\n        }\n        else\n        {\n            frm.set_value(\"european_product_value\",\"0\")\n        }\n    },\n    \n    after_save:function(frm)\n    {\n         if(updatepricelist==\"true\")\n         {\n                                                    frappe.call\n                            \t                    ({\n                                                        \"method\":\"update_price_list\",\n                                                        \"args\":{\n                                                                     docname:frm.doc.name,\n                                                                     has_variants:frm.doc.has_variants,\n                                                                     product_series:frm.doc.product_series,\n                                                                     product_brand:frm.doc.product_brand,\n                                                                     european_product:frm.doc.european_product,\n                                                                     cost_of_the_price:frm.doc.cost_of_the_price,\n                                                                     super_stockist_price:frm.doc.super_stockist_price,\n                                                                     dealer_delivery_price:frm.doc.dealer_delivery_price,\n                                                                     sub_dealer_price:frm.doc.sub_dealer_price,\n                                                                     buying_price:frm.doc.buying_price,\n                                                                     mop:frm.doc.mop,\n                                                                     mrp:frm.doc.mrp,\n                                                                },\n                                                    });\n         }\n    },\n    \n    \n    \n    \n\n//     item_code:function(frm)\n// \t{\n// \t    if(frm.doc.product_series !=undefined&&frm.doc.product_brand !=undefined&&frm.doc.item_code!=undefined)\n//         {\n//             frm.set_value(\"itemname_new\",frm.doc.product_series+\" - \"+frm.doc.product_brand+\" - \"+frm.doc.item_code)\n//         }\n//         else if(frm.doc.product_series ==undefined&&frm.doc.product_brand !=undefined&&frm.doc.item_code!=undefined)\n//         {\n//             frm.set_value(\"itemname_new\",frm.doc.product_brand+\" - \"+frm.doc.item_code)\n//         }\n//         else if(frm.doc.product_series !=undefined&&frm.doc.product_brand ==undefined&&frm.doc.item_code!=undefined)\n//         {\n//             frm.set_value(\"itemname_new\",frm.doc.product_series+\" - \"+frm.doc.item_code)\n//         }\n//         else if(frm.doc.product_series ==undefined&&frm.doc.product_brand ==undefined&&frm.doc.item_code!=undefined)\n//         {\n//             frm.set_value(\"itemname_new\",frm.doc.item_code)\n//         }\n// \t},\n    \n    // product_type:function(frm)\n    // {\n     \n    //       console.log(frm.doc.product_type,\"product_type\")   \n    //     // console.log(\"frm.doc.product_series\",frm.doc.product_series)\n    //     //  console.log(\"frm.doc.product_brand\",frm.doc.product_brand)\n    //     //  console.log(\"frm.doc.item_code\",frm.doc.item_code)\n    //                 if(frm.doc.product_series.length>0 && frm.doc.product_brand.length>0&& frm.doc.product_type.length>0)\n    //                 {\n                        \n    //                     console.log(frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.product_type,\"LLLLLLLLLLLLLL\")\n    //                      frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.product_type)\n    //                 }\n    //                 else if(frm.doc.product_series.length>0 && frm.doc.product_brand.length>0&& frm.doc.product_type.length>0 && frm.doc.sub_product)\n    //                 {\n    //                     frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.sub_product+\" \"+frm.doc.product_type)\n                        \n    //                 }\n                    \n    //                 else if(frm.doc.product_type.length==0)\n    //                 {\n    //                     frm.set_value(\"item_code\",undefined)\n                        \n    //                 }\n    //     // else if(frm.doc.product_series ==undefined&&frm.doc.product_brand !=undefined&&frm.doc.item_code!=undefined)\n    //     // {\n    //     //     frm.set_value(\"itemname_new\",frm.doc.product_brand+\"-\"+frm.doc.item_code)\n    //     // }\n    //     // else if(frm.doc.product_series !=undefined&&frm.doc.product_brand ==undefined&&frm.doc.item_code!=undefined)\n    //     // {\n    //     //     frm.set_value(\"itemname_new\",frm.doc.product_series+\"-\"+frm.doc.item_code)\n    //     // }\n    //     // else if(frm.doc.product_series ==undefined&&frm.doc.product_brand ==undefined&&frm.doc.item_code!=undefined)\n    //     // {\n    //     //     frm.set_value(\"itemname_new\",frm.doc.item_code)\n    //     // }\n        \n    // },\n    \n    \n    // product_series:function(frm)\n    // {\n        \n    //     console.log(frm.doc.product_series,\"product_series\")\n    //     // console.log(frm.doc.product_series,\"???????\")\n        \n    //     if(frm.doc.product_series.length>0 && frm.doc.product_brand.length>0&& frm.doc.product_type.length>0 && frm.doc.sub_product.length>0)\n    //     {\n            \n    //         console.log(frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.product_type,\"LLLLLLLLLLLLLL\")\n    //         frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.sub_product+\" \"+frm.doc.product_type)\n    //     }\n    //     else\n    //     {\n    //         frm.set_value(\"item_code\",undefined)\n    //     }\n    // },\n    \n    \n    // product_brand:function(frm)\n    // {\n    //     console.log(frm.doc.product_brand,\"product_brand\")\n    //     if(frm.doc.product_series.length>0 && frm.doc.product_brand.length>0&& frm.doc.product_type.length>0 && frm.doc.sub_product.length>0)\n    //     {\n            \n    //         console.log(frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.product_type,\"LLLLLLLLLLLLLL\")\n    //         frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.sub_product+\" \"+frm.doc.product_type)\n    //     }\n    //     else\n    //     {\n    //         frm.set_value(\"item_code\",undefined)\n    //     }\n        \n        \n        \n    // },\n\n    // sub_product:function(frm)\n    // {\n        \n        \n    //     console.log(frm.doc.sub_product,\"sub_product\")\n    //     if(frm.doc.product_series.length>0 && frm.doc.product_brand.length>0&& frm.doc.product_type.length>0 && frm.doc.sub_product.length>0)\n    //     {\n            \n    //         console.log(frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.product_type,\"LLLLLLLLLLLLLL\")\n    //         frm.set_value(\"item_code\",frm.doc.product_series+\" \"+frm.doc.product_brand+\" \"+frm.doc.sub_product+\" \"+frm.doc.product_type)\n    //     }\n    //     else if(frm.doc.sub_product.length==0)\n    //     {\n    //         frm.set_value(\"item_code\",undefined)\n    //     }\n        \n        \n    // },\n    \n    \n    \n\n// \tafter_save(frm)\n// \t{\n// \t    if(frm.doc.mrp !=undefined)\n// \t    {\n// \t        if(pricelist!=\"exist\") \n// \t        {\n\t            \n\t            \n// \t            if(!frm.doc.variant_of)\n// \t            {\n//     \t            if(european!=\"true\")\n//     \t            {\n    \t                \n//     \t                frappe.db.insert\n//                                 ({\n//                                                                   \"doctype\": \"Item Price\",\n//                                                                   \"item_code\":frm.doc.name,\n//                                                                   \"price_list\":\"Lamit Buying\",\n//                                                                 //   \"buying\":1,\n//                                                                 //   \"super_stockist_price\":frm.doc.super_stockist_price,\n//                                                                 //   \"dealer_delivery_price\":frm.doc.dealer_delivery_price,\n//                                                                 //   \"sub_dealer_price\":frm.doc.sub_dealer_price,\n//                                                                   \"price_list_rate\":frm.doc.buying_price,\n//                                                                 //   \"mop\":frm.doc.mop,\n//                                                         });\n                                                        \n                                                        \n//                         frappe.db.insert\n//                                 ({\n//                                                                   \"doctype\": \"Item Price\",\n//                                                                   \"item_code\":frm.doc.name,\n//                                                                   \"price_list\":\"Super Stockist Selling\",\n//                                                                   \"series\":frm.doc.product_series,\n//                                                                   \"brands\":frm.doc.product_brand,\n//                                                                 //   \"dealer_delivery_price\":frm.doc.dealer_delivery_price,\n//                                                                 //   \"sub_dealer_price\":frm.doc.sub_dealer_price,\n//                                                                   \"price_list_rate\":frm.doc.mrp,\n//                                                                 //   \"mop\":frm.doc.mop,\n//                                                         }); \n    \t                \n    \t                \n//     \t            }\n    \t            \n    \t            \n    \t           \n//     \t               else \n//     \t                  {\n// \t                                                    frappe.db.insert\n//                                                         ({\n//                                                                   \"doctype\": \"Item Price\",\n//                                                                   \"item_code\":frm.doc.name,\n//                                                                   \"price_list\":\"Lamit Buying\",\n//                                                                 //   \"buying\":1,\n//                                                                 //   \"super_stockist_price\":frm.doc.super_stockist_price,\n//                                                                 //   \"dealer_delivery_price\":frm.doc.dealer_delivery_price,\n//                                                                 //   \"sub_dealer_price\":frm.doc.sub_dealer_price,\n//                                                                   \"price_list_rate\":frm.doc.buying_price,\n//                                                                 //   \"mop\":frm.doc.mop,\n//                                                         });\n                                                        \n                                                        \n//                                                          frappe.db.insert\n//                                                         ({\n//                                                                   \"doctype\": \"Item Price\",\n//                                                                   \"item_code\":frm.doc.name,\n//                                                                   \"price_list\":\"Super Stockist Buying Lamit Selling\",\n//                                                                   \"series\":frm.doc.product_series,\n//                                                                   \"brands\":frm.doc.product_brand,\n                                                                  \n//                                                                 //   \"selling\":1,\n//                                                                 //   \"super_stockist_price\":frm.doc.super_stockist_price,\n//                                                                 //   \"dealer_delivery_price\":frm.doc.dealer_delivery_price,\n//                                                                 //   \"sub_dealer_price\":frm.doc.sub_dealer_price,\n//                                                                   \"price_list_rate\":frm.doc.super_stockist_price,\n//                                                                 //   \"mop\":frm.doc.mop,\n//                                                                 //   \"mrp\":frm.doc.mrp\n//                                                         }); \n                                                        \n//                                                          frappe.db.insert\n//                                                         ({\n//                                                                   \"doctype\": \"Item Price\",\n//                                                                   \"item_code\":frm.doc.name,\n//                                                                   \"price_list\":\"Super Stockist Selling\",\n//                                                                   \"series\":frm.doc.product_series,\n//                                                                   \"brands\":frm.doc.product_brand,\n//                                                                 //   \"variant_of\":frm.doc.variant_of,\n                                                                  \n                                                                  \n                                                                  \n//                                                                 //   \"selling\":1,\n//                                                                 //   \"super_stockist_price\":frm.doc.super_stockist_price,\n//                                                                   \"dealer_delivery_price\":frm.doc.dealer_delivery_price,\n//                                                                   \"sub_dealer_price\":frm.doc.sub_dealer_price,\n//                                                                   \"price_list_rate\":frm.doc.mrp,\n//                                                                   \"mop\":frm.doc.mop,\n//                                                         }); \n// \t                    }\n\t           \n    \t                \n    \t            \n// \t            }\n\t            \n\t            \n// \t             pricelist=\"exist\"\n\t            \n\t            \n\t            \n\t            \n\t            \n// \t           // if(!frm.doc.variant_of)\n// \t           // {\n// \t           //                                         frappe.db.insert\n//             //                                             ({\n//             //                                                       \"doctype\": \"Item Price\",\n//             //                                                       \"item_code\":frm.doc.name,\n//             //                                                       \"price_list\":\"Lamit Buying\",\n//             //                                                     //   \"buying\":1,\n//             //                                                     //   \"super_stockist_price\":frm.doc.super_stockist_price,\n//             //                                                     //   \"dealer_delivery_price\":frm.doc.dealer_delivery_price,\n//             //                                                     //   \"sub_dealer_price\":frm.doc.sub_dealer_price,\n//             //                                                       \"price_list_rate\":frm.doc.buying_price,\n//             //                                                     //   \"mop\":frm.doc.mop,\n//             //                                             });\n                                                        \n                                                        \n//             //                                              frappe.db.insert\n//             //                                             ({\n//             //                                                       \"doctype\": \"Item Price\",\n//             //                                                       \"item_code\":frm.doc.name,\n//             //                                                       \"price_list\":\"Super Stockist Buying Lamit Selling\",\n//             //                                                       \"series\":frm.doc.product_series,\n//             //                                                       \"brands\":frm.doc.product_brand,\n                                                                  \n//             //                                                     //   \"selling\":1,\n//             //                                                     //   \"super_stockist_price\":frm.doc.super_stockist_price,\n//             //                                                     //   \"dealer_delivery_price\":frm.doc.dealer_delivery_price,\n//             //                                                     //   \"sub_dealer_price\":frm.doc.sub_dealer_price,\n//             //                                                       \"price_list_rate\":frm.doc.super_stockist_price,\n//             //                                                     //   \"mop\":frm.doc.mop,\n//             //                                                     //   \"mrp\":frm.doc.mrp\n//             //                                             }); \n                                                        \n//             //                                              frappe.db.insert\n//             //                                             ({\n//             //                                                       \"doctype\": \"Item Price\",\n//             //                                                       \"item_code\":frm.doc.name,\n//             //                                                       \"price_list\":\"Super Stockist Selling\",\n//             //                                                       \"series\":frm.doc.product_series,\n//             //                                                       \"brands\":frm.doc.product_brand,\n//             //                                                     //   \"variant_of\":frm.doc.variant_of,\n                                                                  \n                                                                  \n                                                                  \n//             //                                                     //   \"selling\":1,\n//             //                                                     //   \"super_stockist_price\":frm.doc.super_stockist_price,\n//             //                                                       \"dealer_delivery_price\":frm.doc.dealer_delivery_price,\n//             //                                                       \"sub_dealer_price\":frm.doc.sub_dealer_price,\n//             //                                                       \"price_list_rate\":frm.doc.mrp,\n//             //                                                       \"mop\":frm.doc.mop,\n//             //                                             }); \n// \t           // }\n// \t           // pricelist=\"exist\"\n// \t        }\n// \t       // else\n// \t       // {\n// \t       //     if(updatepricelist==\"true\")\n// \t       //     {\n//     \t   //         if(frm.doc.variant_of==null)\n//     \t   //         {\n//     \t   //              frappe.call\n//     \t   //              ({\n//         //                             method: 'frappe.client.get_list',\n//         //                             args:\n//         //                             {\n//         //                                 'doctype':'Item Price',\n//         //                                  fields: [\"price_list\",\"price_list_rate\",\"super_stockist_price\",\"mrp\",\"mop\",\"sub_dealer_price\",\"dealer_delivery_price\",\"name\"],\n//         //                         \t   \tfilters:\n//         //                         \t   \t{\n                                                 \n                                                 \n//         //                                          item_code:frm.doc.name,\n                                \t       \t    \n                                \t   \t    \n//         //                         \t   \t}  \n                                \t   \t\n//         //                         \t   //\tfields:[\"price_list\",\"price_list_rate\"],\n//         //                         \t},\n//         //                             callback: function(r)\n//         //                             {\n//         //                                 if(r.message[0])\n//         //                                 { \n                                            \n//         //                                     // console.log(r.message,\"OOOOOOOOOOOO\")\n//         //                                     $.each(r.message,function(i,v)\n//         //                                     {\n                                                \n//         //                                         console.log(v.price_list,\"-------------------\")\n//         //                                         // console.log(v.name)\n                                                \n//         //                                         if(v.price_list==\"Lamit Buying\")\n//         //                                         {\n//         //                                             // console.log(\"KLKLKLKL\")\n//         //                                             frappe.db.set_value(\"Item Price\",v.name,\"price_list_rate\",frm.doc.buying_price)\n//         //                                         }\n                                                \n//         //                                         else if(v.price_list==\"Super Stockist Buying Lamit Selling\")\n//         //                                         {\n//         //                                             frappe.db.set_value(\"Item Price\",v.name,\"price_list_rate\",frm.doc.super_stockist_price)\n//         //                                         }\n//         //                                         else if(v.price_list==\"Super Stockist Selling\")\n//         //                                         {\n//         //                                             frappe.db.set_value(\"Item Price\",v.name,\"price_list_rate\",frm.doc.mrp)\n//         //                                         }\n                                                \n//         //                                         // frappe.db.set_value(\"Item Price\",v.name,{\"super_stockist_price\":frm.doc.super_stockist_price,\"dealer_delivery_price\":frm.doc.dealer_delivery_price,\"sub_dealer_price\":frm.doc.sub_dealer_price,\"price_list_rate\":frm.doc.mrp,\"mop\":frm.doc.mop})\n//         //                                     })\n                                            \n//         //                                 }\n//         //                             }\n//     \t   //              });\n//     \t   //         }\n//         //                  updatepricelist=\"false\"\n// \t       //     }\n// \t       // }\n// \t    }\n\t    \n\t    \n\t   \n// \t},\n\t\n\t\n\t\n// \tbefore_save:function(frm)\n// \t{\n// \t    console.log(\"KKKKK\")\n\t    \n// \t    if(frm.is_new())\n// \t    {\n// \t       // console.log(\"YESS\")\n\t        \n// \t        if(frm.doc.has_variants==1)\n// \t        {\n\t            \n// \t           // console.log(\"NOOO\")\n// \t           // console.log(frm.doc.item_defaults.length,\"LLLLLLLLLLL\")\n//     \t       // if(frm.doc.item_defaults.length==1)\n//     \t       // {\n    \t    \n//             \t     frappe.call\n//                 \t                 ({\n//                                                 method: 'frappe.client.get_list',\n//                                                 args:\n//                                                 {\n//                                                     'doctype':'Company',\n//                                             \t   //\tfilters:{\n//                                                         //      item_code:frm.doc.name,\n//                                             \t       \t   // }  \n//                                             \t    fields:[\"warehouse\",\"name\"],\n                                            \t    \n//                                             \t},\n//                                                 callback: function(r)\n//                                                 {\n//                                                     if(r)\n//                                                     {   \n//                                                         $.each(r.message,function(i,v)\n//                                                         {\n                                                            \n//                                                          warehouse[i]=v.warehouse\n//                                                          company[i]=v.name\n//                                                         //  console.log(warehouse,\"pmnmbxcjsbj\")\n                                                         \n//                                                          cur_frm.clear_table(\"item_defaults\");\n//                                                          cur_frm.refresh_fields();\n                                                         \n                                                         \n//                                                          for(var i=0;i<r.message.length;i++)\n//                                                          {\n//                                                              var a = frappe.model.add_child(cur_frm.doc, \"Item Default\", \"item_defaults\");\n//                                                                 a.default_warehouse=warehouse[i];\n//                                                                 a.company = company[i];\n//                                                                 // a.unit = uom;\n//                                                                 refresh_field(\"item_defaults\");\n//                                                          }\n                                                            \n                                                            \n//                                                         })\n                                                        \n                                                        \n//                                                         // console.log(r)\n                                                        \n//                                                     }\n//                                                 }\n//                 \t                 });\n//     \t       // }\n// \t        }\n// \t    }\n// \t}\n\n\n// after_save:function(frm)\n// {\n    \n    \n//     if(frm.doc.has_variants==0)\n//     {\n    \n//                          frappe.call\n//     \t                 ({\n//                                     method: 'frappe.client.get_list',\n//                                     args:\n//                                     {\n//                                         'doctype':'Item Price',\n//                                          fields: [\"price_list\",\"price_list_rate\",\"super_stockist_price\",\"mrp\",\"mop\",\"sub_dealer_price\",\"dealer_delivery_price\",\"name\"],\n//                                 \t   \tfilters:\n//                                 \t   \t{\n//                                                  item_code:frm.doc.name,\n//                                 \t   \t}  \n                                \t   \t\n//                                 \t   //\tfields:[\"price_list\",\"price_list_rate\"],\n//                                 \t},\n//                                     callback: function(r)\n//                                     {\n//                                         if(r.message)\n//                                         { \n                                            \n//                                             // console.log(r.message,\"YES\")\n                                            \n                                            \n//                                             if(frm.doc.european_product==1)\n//                                             {\n                                                \n//                                                 if(r.message.length==0)\n//                                                 {\n                                                \n//                                                 frappe.db.insert\n//                                                         ({\n//                                                                   \"doctype\": \"Item Price\",\n//                                                                   \"item_code\":frm.doc.name,\n//                                                                   \"price_list\":\"Lamit Buying\",\n//                                                                 //   \"buying\":1,\n//                                                                 //   \"super_stockist_price\":frm.doc.super_stockist_price,\n//                                                                 //   \"dealer_delivery_price\":frm.doc.dealer_delivery_price,\n//                                                                 //   \"sub_dealer_price\":frm.doc.sub_dealer_price,\n//                                                                   \"price_list_rate\":frm.doc.buying_price,\n//                                                                 //   \"mop\":frm.doc.mop,\n//                                                         });\n                                                        \n                                                        \n//                                                         frappe.db.insert\n//                                                             ({\n//                                                                   \"doctype\": \"Item Price\",\n//                                                                   \"item_code\":frm.doc.name,\n//                                                                   \"price_list\":\"PTC\",\n//                                                                   \"series\":frm.doc.product_series,\n//                                                                   \"brands\":frm.doc.product_brand,\n//                                                                 //   \"dealer_delivery_price\":frm.doc.dealer_delivery_price,\n//                                                                 //   \"sub_dealer_price\":frm.doc.sub_dealer_price,\n//                                                                   \"price_list_rate\":frm.doc.mrp,\n//                                                                 //   \"mop\":frm.doc.mop,\n//                                                         }); \n                                                \n//                                                 // console.log(\"YYYYYY\")\n                                                \n//                                                 }\n                                                \n//                                                 else\n//                                                 {\n//                                                     if(lamit_price!==frm.doc.buying_price||ss_price!==frm.doc.mrp)\n//                                                         {\n//                                                              $.each(r.message,function(i,v)\n//                                                              {\n//                                                                  if(v.price_list==\"Lamit Buying\")\n//                                                                     {\n//                                                                         // console.log(\"KLKLKLKL\")\n//                                                                         frappe.db.set_value(\"Item Price\",v.name,\"price_list_rate\",frm.doc.buying_price)\n//                                                                     }\n                                                                    \n                                                                    \n//                                                                     else if(v.price_list==\"PTC\")\n//                                                                     {\n//                                                                         frappe.db.set_value(\"Item Price\",v.name,\"price_list_rate\",frm.doc.mrp)\n//                                                                     }\n                                                                 \n\n                                                                 \n                                                                 \n//                                                              })\n\n                                                            \n                                                            \n                                                            \n                                                            \n//                                                         }\n                                                    \n                                                    \n//                                                 }\n                                                \n//                                             }\n//                                             else\n//                                             {\n                                                \n                                                 \n//                                                 if(r.message.length==0)\n//                                                 {\n                                                    \n                                                    \n//                                                      frappe.db.insert\n//                                                         ({\n//                                                                   \"doctype\": \"Item Price\",\n//                                                                   \"item_code\":frm.doc.name,\n//                                                                   \"price_list\":\"Lamit Buying\",\n//                                                                 //   \"buying\":1,\n//                                                                 //   \"super_stockist_price\":frm.doc.super_stockist_price,\n//                                                                 //   \"dealer_delivery_price\":frm.doc.dealer_delivery_price,\n//                                                                 //   \"sub_dealer_price\":frm.doc.sub_dealer_price,\n//                                                                   \"price_list_rate\":frm.doc.buying_price,\n//                                                                 //   \"mop\":frm.doc.mop,\n//                                                         });\n                                                        \n                                                        \n//                                                          frappe.db.insert\n//                                                         ({\n//                                                                   \"doctype\": \"Item Price\",\n//                                                                   \"item_code\":frm.doc.name,\n//                                                                   \"price_list\":\"PTS\",\n//                                                                   \"series\":frm.doc.product_series,\n//                                                                   \"brands\":frm.doc.product_brand,\n                                                                  \n//                                                                   \"price_list_rate\":frm.doc.super_stockist_price,\n//                                                                   \"mop\":frm.doc.mop,\n//                                                                   \"mrp\":frm.doc.mrp\n                                                                \n//                                                         }); \n                                                        \n//                                                          frappe.db.insert\n//                                                         ({\n//                                                                   \"doctype\": \"Item Price\",\n//                                                                   \"item_code\":frm.doc.name,\n//                                                                   \"price_list\":\"PTC\",\n//                                                                   \"series\":frm.doc.product_series,\n//                                                                   \"brands\":frm.doc.product_brand,\n                                                                \n//                                                                   \"dealer_delivery_price\":frm.doc.dealer_delivery_price,\n//                                                                   \"sub_dealer_price\":frm.doc.sub_dealer_price,\n//                                                                   \"price_list_rate\":frm.doc.mrp,\n//                                                                   \"mop\":frm.doc.mop,\n//                                                         }); \n                                                    \n//                                                 }\n                                                \n//                                                 else\n//                                                 {\n                                                  \n                                                    \n//                                                     if(lamit_price1!==frm.doc.buying_price || ss_price1!==frm.doc.super_stockist_price || mop1!==frm.doc.mop|| mrp1!==frm.doc.mrp ||cost_of_price!==frm.doc.cost_of_the_price)\n//                                                     {\n                                                        \n//                                                         $.each(r.message,function(i,v)\n//                                                             {\n                                                                \n                                                               \n                                                                \n//                                                                 if(v.price_list==\"Lamit Buying\")\n//                                                                 {\n                                                                   \n//                                                                     frappe.db.set_value(\"Item Price\",v.name,\"price_list_rate\",frm.doc.buying_price)\n//                                                                 }\n                                                                \n//                                                                 else if(v.price_list==\"PTS\")\n//                                                                 {\n//                                                                     frappe.db.set_value(\"Item Price\",v.name,\"price_list_rate\",frm.doc.super_stockist_price)\n//                                                                 }\n                                                                \n//                                                                 else if(v.price_list==\"PTC\")\n//                                                                 {\n//                                                                     frappe.db.set_value(\"Item Price\",v.name,\"price_list_rate\",frm.doc.mrp)\n//                                                                 }\n                                                                \n//                                                             })\n//                                                         // console.log(\"PASSESS------------\")\n                                                        \n                                                        \n//                                                     }\n                                                    \n//                                                 }\n                                                \n//                                             }\n                                            \n                                            \n//                                         }\n//                                     }\n//     \t                 })\n    \t                 \n//     }\n    \n    \n// }\n\t\n\t\n\t\n\t\n\t\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Target",
  "enabled": 1,
  "modified": "2023-03-23 09:32:23.090732",
  "module": null,
  "name": "Target List",
  "script": "frappe.listview_settings['Target'] = \n{\n hide_name_column: true,\n \n refresh: function(listview)\n {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t    \n\t    listview.page.add_inner_button(\"Set Target\", function() \n        {\n            ButtonFunction(listview);\n        });;\n\t    \n }\n    \n};\n\nfunction ButtonFunction(listview) \n{\n    var year;\n    var month;\n    var exist_incentv=[];\n    var exist_additional_salary_doc=[];\n    var new_incentiv_calc_e=[];\n    var total_sale=0;\n    var incentive=0;\n    var target_of_existing_e=[]\n    var target_of_new_e=[]\n    var calc_achieve_percetg=0\n    var targt_and_incentive_exist_doc=[]\n    var targt_and_incentive_new_doc=[]\n    var year_list=[]\n    var active=0\n    \n            const month1 = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n            var today=new Date();\n            var v_year=today.getFullYear();\n            var v_month = month1[today.getMonth()];\n            var end=flt(v_year)+10\n            for(var i=0;i<10;i++)\n            {\n                year_list[i]=flt(v_year)+flt(i)-2;\n            }\n    \n    \n    \n      var d = new frappe.ui.Dialog\n             ({\n                \ttitle: __(\"Set Target\"),\n                \tfields:\n                \t[     \n                \t    {\n                    \t\tfieldtype: \"Select\",\n                    \t\tfieldname: \"target_for\",\n                    \t\tlabel: __(\"Designation\"),\n                    \t\toptions:[\" \",\"Area Sales Manager\",\"Sales Officer\",\"Marketing Supervisor\",\"Marketing Officer\",\"Sales Manager\",\"Sales Admin\"],\n                    \t\treqd: 1,\n                    \t\t\"onchange\":()=>\n                    \t\t{\n                    \t\t    var target_for1 = d.get_field(\"target_for\");\n                    \t\t     var total_visit1 = d.get_field(\"total_visit\");\n                    \t\t     var new_customer1 = d.get_field(\"new_customer\");\n\n                    \t\t    if(target_for1.value !=\"Sales Officer\")\n                    \t\t    {\n                    \t\t        total_visit1.df.reqd=0\n                    \t\t        total_visit1.df.hidden=1\n                    \t\t        total_visit1.refresh();\n                    \t\t        \n                    \t\t        new_customer1.df.reqd=0\n                    \t\t        new_customer1.df.hidden=1\n                    \t\t        new_customer1.refresh();\n                    \t\t    }\n                    \t\t    else\n                    \t\t    {\n                    \t\t        total_visit1.df.reqd=1\n                    \t\t        total_visit1.df.hidden=0\n                    \t\t        total_visit1.refresh();\n                    \t\t        \n                    \t\t        new_customer1.df.reqd=1\n                    \t\t        new_customer1.df.hidden=0\n                    \t\t        new_customer1.refresh();\n                    \t\t    }\n                    \t\t},\n                    \t},\n                    \t{\n                    \t\tfieldtype: \"Data\",\n                    \t\tfieldname: \"total_visit\",\n                    \t\tlabel: __(\"Total Visit / Day\"),\n                    // \t\treqd:1,\n                    \t\thidden:1,\n                    \t},\n                    \t{\n                    \t\tfieldtype: \"Data\",\n                    \t\tfieldname: \"target\",\n                    \t\tlabel: __(\"Target\"),\n                    \t\treqd: 1,\n                    \t},\n                    \t     {\"fieldtype\":\"Column Break\"},\n                    \t   {\n                    \t\tfieldtype: \"Date\",\n                    \t\tfieldname: \"date\",\n                    \t\tlabel: __(\"Effective From\"),\n                    \t\tdefault:frappe.datetime.nowdate(),\n                    \t\treqd: 1,\n                    \t},\n                    \t{\n                    \t\tfieldtype: \"Data\",\n                    \t\tfieldname: \"new_customer\",\n                    \t\tlabel: __(\"New Visit / Day\"),\n                    // \t\treqd:0,\n                    \t\thidden:1,\n                    \t},\n                    \t    {\"fieldtype\":\"Section Break\"},\n                    \t            {\"fieldtype\":\"Column Break\"},\n                    \t            {\"fieldtype\":\"Column Break\"},\n                    \t            {\"fieldtype\":\"Column Break\"},\n                    \t            {\"fieldtype\":\"Column Break\"},\n                        {\"fieldtype\": \"Button\", \"label\":\"Assign\", \"fieldname\":\"assign\"},\n \n                \t]\n           \n            });\n\n                d.fields_dict.assign.input.onclick = function()\n                {\n                    //To select all area sales manager\n                        d_target_for=d.fields_dict.target_for.value;\n                        d_effective_from=d.fields_dict.date.value;\n                        d_total_visit=d.fields_dict.total_visit.value;\n                        d_new_customer=d.fields_dict.new_customer.value;\n                        d_target=d.fields_dict.target.value;\n                        \n                        var newdate=new Date(d_effective_from);\n                        var year=newdate.getFullYear();\n                        var month=newdate.getMonth();\n                        var effective_to=frappe.datetime.add_days(newdate,-1);\n                        var date_today=frappe.datetime.now_datetime()\n                        var active1=0\n                        var active_previous=0\n                        var active_new=0\n                            \n                        const month1 = [\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n                        const month2 =month1[month];\n                        \n                        if(date_today.split(\" \")[0]==d_effective_from)\n                        {\n                             active_new=1  \n                             active_previous=0\n                        }\n                        else\n                        {\n                           active_new=0 \n                           active_previous=1\n                        }\n\n                        frappe.call\n                        ({\n                            method: \"frappe.client.get_list\",\n                            args: \n                            {\n                                doctype: \"Employee\",\n                                filters:{\n                                    \"designation\":d_target_for,\n                                    \"company\":\"Lamit\"\n                                },\n                                fields: ['name'],\n                                limit_page_length:500,\n                            },\n                            callback:function(r) \n                            {\n                                var j=0\n                                $.each(r.message,function(i,v)\n                                {\n                                    j=1+flt(j)\n                                    var emp_name1=v.name\n                                    frappe.call\n                                    ({\n                                        method: \"frappe.client.get_list\",\n                                        args: \n                                        {\n                                            doctype: \"Target\",\n                                            filters:{\n                                                \"employee\":v.name,\n                                                \"active\":1\n                                                    },\n                                            fields: ['name'],\n                                        },\n                                        callback:function(s) \n                                        {\n                                          if(s.message[0])\n                                          {\n                                                      if(active_previous==0)\n                                                      {\n                                                            frappe.db.set_value(\"Target\",s.message[0].name,{\"active\":0,\"effective_to\":effective_to,\"deactivate_date\":effective_to});\n                                                      }\n                                                      else\n                                                      {\n                                                            frappe.db.set_value(\"Target\",s.message[0].name,{\"deactivate_date\":d_effective_from});\n                                                      }\n\n                                                     frappe.call\n                            \t                    ({\n                                                        \"method\":\"release_incentive\",\n                                                        \"args\":{\n                                                                     employee:emp_name1,\n                                                                },\n                                                    });\n                                          }\n                                        }\n                                    });\n                                                                                \n                                });\n                                \n                               \n                                $.each(r.message,function(i,v)\n                                {\n                                \n                                                                                                  frappe.db.insert\n                                                                        \t                       ({\n                                                                                                        doctype:'Target',    \n                                                                                                        'employee':v.name,\n                                                                                                         'effective_from':d_effective_from,\n                                                                                                         \"target\":d_target,\n                                                                                                         \"total_visit\":d_total_visit,\n                                                                                                         \"new_customer\":d_new_customer,\n                                                                                                         \"designation\":d_target_for,\n                                                                                                         \"active\":active_new,\n                                                                                                         \"year\":year,\n                                                                                                         \"month\":month2\n                                                                                                    });   \n                                });\n                            }\n                        })\n\n                        d.hide();\n                };\n            d.show();\n}\n\n\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Incentive",
  "enabled": 1,
  "modified": "2023-03-23 09:30:56.942727",
  "module": null,
  "name": "Incentive",
  "script": "var trigger_count=1;\n\nfrappe.listview_settings['Incentive'] = \n{\n    hide_name_column: true,\n \n     onload: function(listview)\n     {\n        \n    \t    $(\".comment-count\").hide();\n    \t    //$(\".frappe-timestamp\").hide();\n    \t    $(\".avatar-small\").hide();\n    \t    $(\"div[data-fieldname = name]\").hide();\n    \t    \n    \t    listview.page.add_inner_button(\"Release Incentive\", function() \n            {\n                check_availability(listview)\n            });;\n    \t    \n    \t    \n    \t    \n    \t   // listview.page.add_inner_button(\"Set Incentive\", function() \n        //     {\n        //         //ButtonFunction(listview);\n        //     });;\n    \t    \n     },\n\n};\n\nfunction check_availability(listview)\n{\n    var trigger_tbl=1\n      data=[]\n    var cost_center1\n\n    //   var ds=\"Sales Officer\"\n                        \tvar fields =\n                         \t[\n                         \t    {\"fieldtype\":\"Section Break\",label: __(\"Filter Employees\"),},\n                         \t    \n                                {\n                                \t\tfieldtype: \"Select\",\n                                \t\tfieldname: \"designation\",\n                                \t\tlabel: __(\"Designation\"),\n                                \t\toptions:[\" \",\"Sales Officer\",\"Marketing Officer\",\"Marketing Supervisor\",\"Area Sales Manager\",\"Sales Admin\",\"Sales Manager\"],\n                                        'onchange':() =>\n                                         { \n                                             if(trigger_tbl==1)\n                                             {\n                                                 var designation4 = d.get_field(\"designation\");\n                                                 var employee4 = d.get_field(\"employee\");\n                                                 employee4.value=null\n                                                 employee4.refresh()\n                                                 if(designation4.value !=null)\n                                                 {\n                                                        var tbl1 = d.get_field(\"incentive_table\");\n                                                     \n                                                        while(d.fields_dict.incentive_table.df.data[0] !=undefined)\n                                                        {\n                                                            d.fields_dict.incentive_table.grid.grid_rows.forEach(function(row)\n                                                            {\n                                                                row.remove();\n                                                            }); \n                                                        }\n                                                                \n                                                        frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get_list\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Incentive\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"release_incentive\":1,\n                                                                        \"designation\":designation4.value\n                                                                    },\n                                                                    \n                                                                    fields:[\"name\",\"employee\",\"employee_name\",\"journal_entry\",\"cumulative_grand_total\",\"total_received_amount\",\"total_outstanding\",\"incentive_amount\",\"total_released_amount\",\"incentive_outstanding_amount\"],\n                                                                    order_by:\"creation desc\",\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                                 if(doc1.message[0])\n                                                                 {\n                                                                    $.each(doc1.message,function(i,v)\n                                                                    {\n                                                                        tbl1.df.data.push({\"suject\":\"uuuuuuu\"})\n                                                                        tbl1.df.data[i].incentive_id=v.name\n                                                                        tbl1.df.data[i].employee=v.employee\n                                                                        tbl1.df.data[i].employee_name=v.employee_name\n                                                                        tbl1.df.data[i].journal_entry=v.journal_entry\n                                                                        tbl1.df.data[i].grand_total=v.cumulative_grand_total\n                                                                        tbl1.df.data[i].received_amount=v.total_received_amount\n                                                                        // tbl1.df.data[i].received_amount=v.total_outstanding\n                                                                        tbl1.df.data[i].incentive=v.incentive_amount\n                                                                        if(flt(v.incentive_amount)-flt(v.total_released_amount)>0)\n                                                                        {\n                                                                            tbl1.df.data[i].outstanding_incentive=flt(v.incentive_amount)-flt(v.total_released_amount)\n                                                                            tbl1.df.data[i].release_incentive_amount=flt(v.incentive_amount)-flt(v.total_released_amount)\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            tbl1.df.data[i].outstanding_incentive=0\n                                                                            tbl1.df.data[i].release_incentive_amount=0\n                                                                        }\n                                                                    })\n                                                                 }\n                                                             \n                                                             tbl1.refresh();\n                                                         })\n                                                 }\n                                                 trigger_tbl=2\n                                             }\n                                             else\n                                             {\n                                                trigger_tbl=1 \n                                             }\n                                             \n                                         },\n                                },\n                                    {\"fieldtype\":\"Column Break\",},\n                                \n                                {\n                                \t\tfieldtype: \"Link\",\n                                \t\tfieldname: \"employee\",\n                                \t\tlabel: __(\"Employee\"),\n                                \t\toptions:\"Employee\",\n                                // \t\tfilters:{designation:ds},\n                                \t\t 'onchange':() =>\n                                         { \n                                             if(trigger_tbl==1)\n                                             {\n                                                 var designation4 = d.get_field(\"designation\");\n                                                 var employee4 = d.get_field(\"employee\");\n                                                 designation4.value=null\n                                                 designation4.refresh()\n                                                 \n                                                 if(employee4.value !=null)\n                                                 {\n                                                            var tbl1 = d.get_field(\"incentive_table\");\n                                                     \n                                                            while(d.fields_dict.incentive_table.df.data[0] !=undefined)\n                                                            {\n                                                                d.fields_dict.incentive_table.grid.grid_rows.forEach(function(row)\n                                                                {\n                                                                    row.remove();\n                                                                }); \n                                                            }\n                                                     \n                                                        frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get_list\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Incentive\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"release_incentive\":1,\n                                                                        \"employee\":employee4.value\n                                                                    },\n                                                                    \n                                                                    fields:[\"name\",\"employee\",\"employee_name\",\"cumulative_grand_total\",\"total_received_amount\",\"total_outstanding\",\"incentive_amount\",\"total_released_amount\",\"incentive_outstanding_amount\"],\n                                                                    order_by:\"creation desc\",\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                                 if(doc1.message[0])\n                                                                 {\n                                                                    $.each(doc1.message,function(i,v)\n                                                                    {\n\n                                                                        tbl1.df.data.push({\"suject\":\"uuuuuuu\"})\n                                                                        tbl1.df.data[i].incentive_id=v.name\n                                                                        tbl1.df.data[i].employee=v.employee\n                                                                        tbl1.df.data[i].employee_name=v.employee_name\n                                                                        tbl1.df.data[i].journal_entry=v.journal_entry\n                                                                        tbl1.df.data[i].grand_total=v.cumulative_grand_total\n                                                                        tbl1.df.data[i].received_amount=v.total_received_amount\n                                                                        // tbl1.df.data[i].received_amount=v.total_outstanding\n                                                                        tbl1.df.data[i].incentive=v.incentive_amount\n                                                                        if(flt(v.incentive_amount)-flt(v.total_released_amount)>0)\n                                                                        {\n                                                                            tbl1.df.data[i].outstanding_incentive=flt(v.incentive_amount)-flt(v.total_released_amount)\n                                                                            tbl1.df.data[i].release_incentive_amount=flt(v.incentive_amount)-flt(v.total_released_amount)\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                            tbl1.df.data[i].outstanding_incentive=0\n                                                                            tbl1.df.data[i].release_incentive_amount=0\n                                                                        }\n                                                                    })\n                                                                 }\n                                                             \n                                                             tbl1.refresh();\n                                                         })\n                                                 }\n                                                 trigger_tbl=2\n                                             }\n                                             else\n                                             {\n                                                trigger_tbl=1 \n                                             }\n                                             \n                                         },\n                                },\n                                    {\"fieldtype\":\"Column Break\",},\n                                \n                                {\n                                \t\tfieldtype: \"Link\",\n                                \t\tfieldname: \"mode_of_payment\",\n                                \t\tlabel: __(\"Mode Of Payment\"),\n                                \t\toptions:\"Mode of Payment\",\n                                \t\treqd:1,\n                                \t\t 'onchange':() =>\n                                         { \n                                             if(trigger_tbl==1)\n                                             {\n                                                        var default_account=\" \"\n                                                        var mode_of_payment1 = d.get_field(\"mode_of_payment\");\n                                                        var lamit_account1 = d.get_field(\"company_account\");\n                                                        var currency1 = d.get_field(\"currency\");\n                                                        var account_type1 = d.get_field(\"account_type\");\n                                                        var payment_mode=mode_of_payment1.value\n                                                        var reference_date1 = d.get_field(\"reference_date\");\n                                                        var incentive_table1=d.get_field(\"incentive_table\");\n                                                        \n                                                        \n                                                        frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Mode of Payment\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"name\":mode_of_payment1.value,\n                                                                    },\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                             $.each(doc1.message.accounts,function(i,v)\n                                                             {\n                                                                 if(v.company==\"Lamit\")\n                                                                 {\n                                                                     default_account=v.default_account\n                                                                 }\n                                                             })\n\n                                                             if(default_account!=\" \")\n                                                             {\n                                                                 lamit_account1.value=default_account\n                                                                 \n                                                                 frappe.db.get_value(\"Account\", \n                                                                 {\n                                                            \t\t\t\"name\":default_account,\n                                                            \t },\n                                                            \t\t['account_currency',\"account_type\"], \n                                                            \t\tfunction (value)\n                                                            \t\t{\n                                                            \t\t     currency1.value=value.account_currency;\n                                                            \t\t     account_type1.value=value.account_type;\n                                                            \t\t     \n                                                            \t\t     if(value.account_type==\"Bank\")\n                                                            \t\t     {\n                                                            \t\t        reference_date1.df.reqd = true; \n                                                            \t\t      //  \t{fieldtype:'Data', fieldname:'release_incentive_amount',label: __('Incentive Release Amount'), in_list_view:1,columns:1.2},\n                        \t\t\t\t                                        // {fieldtype:'Data', fieldname:'reference_no',\n                                                            \t\t        \n                                                            \t\t        \n                                                            \t\t      //  $.each(incentive_table1.df.data[i],function(i,v)\n                                                            \t\t      //  {\n                                                            \t\t      //    //  if(flt(v.data[i].release_incentive_amount,2)>0)\n                                                            \t\t      //    //  {\n                                                            \t\t      //           tbl1.df.data[i].incentive_id=v.name\n                                                            \t\t      //          console.log(\"vvvvvv\",v.data[i])\n                                                            \t\t      //    //    //  v.reference_no.df.reqd=true;\n                                                            \t\t      //    //  }\n                                                            \t\t      //  })\n                                                            \t\t        \n                                                            \t\t        \n                                                            \t\t     }\n                                                            \t\t     else\n                                                            \t\t     {\n                                                            \t\t         reference_date1.df.reqd = false; \n                                                            \t\t     }\n                                                                         reference_date1.refresh();\n                                                            \t\t     currency1.refresh()\n                                                            \t\t     account_type1.refresh()\n                                                            \t\t});\n                                                             }\n                                                             else\n                                                             {\n                                                                 mode_of_payment1.value=\" \"\n                                                                 lamit_account1.value=\" \"\n                                                                 currency1.value=\" \"\n                                                                 account_type1.value=\" \"\n                                                                 reference_date1.df.reqd = false; \n                                                                  msgprint(\"Please set default \"+payment_mode+\" account of lamit to select this mode of payment\")\n                                                             }\n                                                             \n                                                             mode_of_payment1.refresh();\n                                                             lamit_account1.refresh();\n                                                             account_type1.refresh()\n                                                             currency1.refresh()\n                                                             reference_date1.refresh();\n                                                         })\n                                                 \n                                                 trigger_tbl=2\n                                             }\n                                             else\n                                             {\n                                                trigger_tbl=1 \n                                             }\n                                             \n                                         },\n                                },\n                                    {\"fieldtype\":\"Column Break\",},\n                                \n                                {\n                                \t\tfieldtype: \"Date\",\n                                \t\tfieldname: \"reference_date\",\n                                \t\tlabel: __(\"Cheque/Reference Date\"),\n                                \t\tdefault:frappe.datetime.nowdate()\n                                },\n                                    {\"fieldtype\":\"Section Break\",hidden:1},\n                                {\n                                \t\tfieldtype: \"Link\",\n                                \t\tfieldname: \"company_account\",\n                                \t\tlabel: __(\"Account\"),\n                                \t\toptions:\"Company\",\n                                },\n                                    {\"fieldtype\":\"Column Break\",},\n                                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"lamit_cost_center\",\n                                \t\tlabel: __(\"Cost Center\"),\n                                },\n                                    {\"fieldtype\":\"Column Break\",},\n                                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"currency\",\n                                \t\tlabel: __(\"Currency\"),\n                                },\n                                    {\"fieldtype\":\"Column Break\",},\n                                {\n                                \t\tfieldtype: \"Data\",\n                                \t\tfieldname: \"account_type\",\n                                \t\tlabel: __(\"Account Type\"),\n                                },\n                                    {\"fieldtype\":\"Section Break\",},\n                        \t\t{\n                        \t\t\tfieldtype:'Table', fieldname: 'incentive_table',\n                        \t\t\tdescription: __('Outstanding Incentive'),\n                        \t\t\tfields:\n                        \t\t\t[\n                        \t\t\t\t{fieldtype:'Data', fieldname:'incentive_id',label: __('Incentive ID'),in_list_view:1,columns:1.2},\n                        \t\t\t\t{fieldtype:'Link', fieldname:'employee',label: __('Employee')},\n                        \t\t\t\t{fieldtype:'Data', fieldname:'employee_name',label: __('Employee Name'), in_list_view:1,columns:1.2},\n                        \t\t\t\t{fieldtype:'Data', fieldname:'journal_entry',label: __('Journal Entry')},\n                        \t\t\t\t{fieldtype:'Data', fieldname:'grand_total',label: __('Grand Total'), in_list_view:1,columns:1.2},\n                        \t\t\t\t{fieldtype:'Data', fieldname:'received_amount',label: __('Received Amount'), in_list_view:1,columns: 1.2},\n                        \t\t\t\t{fieldtype:'Data', fieldname:'incentive',label: __('Total Incentive'), in_list_view:1,columns: 1.2},\n                        \t\t\t\t{fieldtype:'Data', fieldname:'outstanding_incentive',label: __('Outstanding Incentive'), in_list_view:1,columns: 1.2},\n                        \t\t\t\t{fieldtype:'Data', fieldname:'release_incentive_amount',label: __('Incentive Release Amount'), in_list_view:1,columns:1.2,\n                        \t\t\t\t    'onchange':() =>\n                    \n                                             { \n                                                \n                                                for(var i=0;i<d.get_field(\"incentive_table\").df.data.length;i++){\n                                                    if(parseInt(d.get_field(\"incentive_table\").df.data[i].outstanding_incentive) < parseInt(d.get_field(\"incentive_table\").df.data[i].release_incentive_amount)){\n                                                        msgprint(\"Incentive release amount is more than outstanding amount at row \"+(i+1))\n                                                    }\n                                                }    \n                                                \n                                                \n\n                                                // if (d.get_field(\"incentive_table\").df.data[d.get_field(\"incentive_table\").df.data.length - 1].release_incentive_amount)\n                                                // {\n                                                //     if(parseInt(d.get_field(\"incentive_table\").df.data[d.get_field(\"incentive_table\").df.data.length - 1].release_incentive_amount) > parseInt(d.get_field(\"incentive_table\").df.data[d.get_field(\"incentive_table\").df.data.length - 1].outstanding_incentive)){\n                                                //         msgprint(\"Successs !\")\n                                                //     }\n                                                // }\n                                                 \n\n                                                //  if(trigger_tbl==1)\n                                                //  {\n                                                //      var incentive_table = d.get_field(\"incentive_table\");\n                                                //      console.log(\"dddd\",d.fields_dict.incentive_table.df.data.idx)\n                                                //     //  var outstanding_incentive = d.get_field(\"outstanding_incentive\");\n                                                //     //  var release_incentive_amount = d.get_field(\"release_incentive_amount\");\n                                                //     //  console.log(\"outstanding_incentive--\",incentive_table.df.row)\n                                                     \n                                                //     //  if(flt(release_incentive_amount.values)>flt(outstanding_incentive.values))\n                                                //     //  {\n                                                //     //      release_incentive_amount.value=\" \"\n                                                //     //      msgprint(\"Can't release more than outstanding amount\")\n                                                //     //      release_incentive_amount.refresh()\n                                                //     //  }\n                                                     \n                                                     \n                                                //      trigger_tbl=2\n                                                //  }\n                                                //  else\n                                                //  {\n                                                //     trigger_tbl=1 \n                                                //  }  \n                                              },\n                        \t\t\t\t},\n                        \t\t\t\t{fieldtype:'Data', fieldname:'reference_no',label: __('Cheque/Reference No'),\n                        \t\t\t\t'depends_on':'release_incentive_amount.value',\n                        \t\t\t\tin_list_view:1,columns:1.2},\n                        \t\t\t],\n                        \t\t\t\n                        // \t\t\tcannot_add_rows: 1,\n                                    cannot_delete_rows : 1,\n                                    // cannot_edit_row:1,\n                        \t\t\tdata: data,\n                        \t\t\tget_data: function() \n                        \t\t\t{\n                        \t\t\t\treturn data\n                        \t\t\t}\n                                },\n                            ]\n                    \t\n                    \t    \tvar d = new frappe.ui.Dialog\n                            \t({\n                            \t\ttitle: __(\"Release Incentive\"),\n                            \t\tfields: fields,\n                            \t\tprimary_action: function(values) \n                            \t\t{\n                            \t\t    var exist_reference=\" \"\n                            \t\t    if(values.account_type==\"Bank\")\n                            \t\t    {\n                            \t\t        $.each(values.incentive_table,function(i,v)\n                                \t\t    {\n                                \t\t          if(flt(v.release_incentive_amount,2)>0)\n                                \t\t          {\n                                \t\t              if(!v.reference_no)\n                                \t\t              {\n                                \t\t                  exist_reference=\"false\"\n                                \t\t              }\n                                \t\t          }\n                                \t\t    })\n                                \t\t  \n                                \t\t    if(exist_reference==\" \")\n                                \t\t    {\n                                    \t\t    $.each(values.incentive_table,function(i,v)\n                                    \t\t    {\n                                    \t\t        var date_today=frappe.datetime.now_datetime().split(\" \")[0]\n        \n                                    \t\t          if(flt(v.release_incentive_amount,2)>0)\n                                    \t\t          {\n                                        \t\t            frappe.db.insert\n                                                            ({   \n                                                                \"doctype\": \"Payment Entry\", \n                                                                \"payment_type\":\"Pay\",\n                                                                \"posting_date\":date_today,\n                                                                \"company\":\"Lamit\",\n                                                                \"reference_date\":date_today,\n                                                                \"reference_no\":v.reference_no,\n                                                                \"mode_of_payment\":values.mode_of_payment,\n                                                                \"party_type\":\"Employee\",\n                                                                \"party\":v.employee,\n                                                                \"docstatus\":1,\n                                                                \"party_name\":v.employee_name,\n                                                                \"paid_from\":values.company_account,\n                                                                \"paid_from_account_currency\":values.currency,\n                                                                \"references\":[{\n                                                                                    \"reference_doctype\": \"Journal Entry\",\n                                                                                    \"reference_name\":v.journal_entry,\n                                                                                    \"total_amount\":flt(v.incentive,2),\n                                                                                    \"outstanding_amount\":flt(v.outstanding_incentive,2),\n                                                                                    \"allocated_amount\":flt(v.release_incentive_amount,2),\n                                                                                    // \"exchange_rate\": 1.0,\n                                                                                    // \"exchange_gain_loss\":0,\n                                                                             }],\n                                                                \"paid_amount\":flt(v.release_incentive_amount,2),\n                                                                 \"received_amount\":flt(v.release_incentive_amount,2),\n                                                                //  \"source_exchange_rate\":1\n                                                            }).then(function(doc1)\n                                                            {\n                                                                frappe.call\n                                                                ({\n                                                                  \"method\":\"add_release_details_into_incentive_doc\",\n                                                                    \"args\":{\n                                                                             incentive_id:v.incentive_id,\n                                                                             outstanding_amount:flt(v.outstanding_incentive,2)-flt(v.release_incentive_amount),\n                                                                             released_amount:flt(v.release_incentive_amount)\n                                                                            },\n                                                                });\n                                                            })\n                                    \t\t          }\n                                    \t\t      \n                                    \t\t    });\n                                    \t\t     d.hide();\n                                \t\t    }\n                                \t\t    else\n                                \t\t    {\n                                \t\t        msgprint(\"This mode of payment require reference no and reference date\")\n                                \t\t         d.show();\n                                \t\t    }\n                            \t\t    }\n                            \t\t    else\n                            \t\t    {\n                            \t\t          $.each(values.incentive_table,function(i,v)\n                                    \t\t    {\n                                    \t\t        var date_today=frappe.datetime.now_datetime().split(\" \")[0]\n        \n                                    \t\t          if(flt(v.release_incentive_amount,2)>0)\n                                    \t\t          {\n                                        \t\t            frappe.db.insert\n                                                            ({   \n                                                                \"doctype\": \"Payment Entry\", \n                                                                \"payment_type\":\"Pay\",\n                                                                \"posting_date\":date_today,\n                                                                \"company\":\"Lamit\",\n                                                                // \"mode_of_payment\":\"Cash\",\n                                                                \"mode_of_payment\":values.mode_of_payment,\n                                                                \"party_type\":\"Employee\",\n                                                                \"party\":v.employee,\n                                                                \"docstatus\":1,\n                                                                \"party_name\":v.employee_name,\n                                                                \"paid_from\":values.company_account,\n                                                                \"paid_from_account_currency\":values.currency,\n                                                                \"references\":[{\n                                                                                    \"reference_doctype\": \"Journal Entry\",\n                                                                                    \"reference_name\":v.journal_entry,\n                                                                                    \"total_amount\":flt(v.incentive,2),\n                                                                                    \"outstanding_amount\":flt(v.outstanding_incentive,2),\n                                                                                    \"allocated_amount\":flt(v.release_incentive_amount,2),\n                                                                                    // \"exchange_rate\": 1.0,\n                                                                                    // \"exchange_gain_loss\":0,\n                                                                             }],\n                                                                \"paid_amount\":flt(v.release_incentive_amount,2),\n                                                                 \"received_amount\":flt(v.release_incentive_amount,2),\n                                                                //  \"source_exchange_rate\":1\n                                                            }).then(function(doc1)\n                                                            {\n                                                                frappe.call\n                                                                ({\n                                                                  \"method\":\"add_release_details_into_incentive_doc\",\n                                                                    \"args\":{\n                                                                             incentive_id:v.incentive_id,\n                                                                             outstanding_amount:flt(v.outstanding_incentive,2)-flt(v.release_incentive_amount),\n                                                                             released_amount:flt(v.release_incentive_amount)\n                                                                            },\n                                                                });\n                                                                \n                                                            })\n                                    \t\t          }\n                                    \t\t    });\n                            \t\t         d.hide();\n                            \t\t    }\n                            \t\t    \n                            \t\t    \n                                        // d.hide();\n                            \t\t},\n                            \t\tprimary_action_label: __('Release')\n                            \t});\n                            \t\n                            \t var designation2 = d.get_field(\"designation\");\n                            \t var employee2 = d.get_field(\"employee\");\n                            \t var lamit_cost_center1 = d.get_field(\"lamit_cost_center\");\n                            \t \n                            \t frappe.db.get_value(\"Company\", \n                                 {\n                            \t\t\t\"name\":\"Lamit\",\n                            \t },\n                            \t\t['cost_center'], \n                            \t\tfunction (value)\n                            \t\t{\n                            \t\t     lamit_cost_center1.value=value.cost_center;\n                            \t\t     lamit_cost_center1.refresh()\n                            \t\t});\n\n                            \t if(designation2.value ==null&&employee2.value ==null)\n                            \t {\n                            \t                    frappe.call\n                                                    ({\n                                                        \"method\":\"frappe.client.get_list\",\n                                                        \"args\":\n                                                            {\n                                                                \"doctype\":\"Incentive\",\n                                                                \"filters\":\n                                                                {\n                                                                    \"release_incentive\":1\n                                                                },\n                                                                \n                                                                fields:[\"name\",\"employee\",\"employee_name\",\"journal_entry\",\"cumulative_grand_total\",\"total_received_amount\",\"total_outstanding\",\"incentive_amount\",\"total_released_amount\",\"incentive_outstanding_amount\"],\n                                                                order_by:\"creation desc\",\n                                                            },\n                                                    })\n                                                    .then(function(doc1)\n                                                     {\n                                                         if(doc1.message[0])\n                                                         {\n                                                            var tbl1 = d.get_field(\"incentive_table\");\n                                                     \n                                                            while(d.fields_dict.incentive_table.df.data[0] !=undefined)\n                                                            {\n                                                                d.fields_dict.incentive_table.grid.grid_rows.forEach(function(row)\n                                                                {\n                                                                    row.remove();\n                                                                }); \n                                                            }\n\n                                                            $.each(doc1.message,function(i,v)\n                                                            {\n                                                                tbl1.df.data.push({\"suject\":\"uuuuuuu\"})\n                                                                tbl1.df.data[i].incentive_id=v.name\n                                                                tbl1.df.data[i].employee=v.employee\n                                                                tbl1.df.data[i].employee_name=v.employee_name\n                                                                tbl1.df.data[i].journal_entry=v.journal_entry\n                                                                tbl1.df.data[i].grand_total=v.cumulative_grand_total\n                                                                tbl1.df.data[i].received_amount=v.total_received_amount\n                                                                // tbl1.df.data[i].received_amount=v.total_outstanding\n                                                                tbl1.df.data[i].incentive=v.incentive_amount\n                                                                if(flt(v.incentive_amount)-flt(v.total_released_amount)>0)\n                                                                {\n                                                                    tbl1.df.data[i].outstanding_incentive=flt(v.incentive_amount)-flt(v.total_released_amount)\n                                                                    tbl1.df.data[i].release_incentive_amount=flt(v.incentive_amount)-flt(v.total_released_amount)\n                                                                }\n                                                                else\n                                                                {\n                                                                    tbl1.df.data[i].outstanding_incentive=0\n                                                                    tbl1.df.data[i].release_incentive_amount=0\n                                                                }\n                                                            })\n                                                            \n                                                            \n                                                            tbl1.refresh();\n                                                         }\n                                                         else\n                                                         {\n                                                            // while(tbl1.df.data[0].incentive_id ==undefined)\n                                                            // {\n                                                            //     //  while(d.fields_dict.items.df.data[0].name!=undefined)\n                                                            //     //  {\n                                                            //         d.fields_dict.items.grid.grid_rows.forEach(function(row)\n                                                            //         {\n                                                            //             row.remove();\n                                                            //         }); \n                                                            //     // }\n                                                            // }\n                                                         }\n                                                     })\n                            \t }\n                            \td.$wrapper.find('.modal-content')\n                            \t.css({\n                            \t  \"position\": \"fixed\",\n                            \t  \"width\":\"90%\",\n                                  \"left\":\"5%\",\n                                  \n                                //   \"right\":\"5%\",\n                            \t});\n                            \td.$wrapper.find('.form-grid')\n                            \t.css({\n                            \t     \"overflow\":\"scroll\",\n                            \t     \"height\":\"200px\",\n                            \t     \"width\":\"100%\",\n                            \t     \"overflow\":\"auto\",\n                            \t});\n                                d.show();  \n}\n\n\n\n\n\n\n\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Lead",
  "enabled": 0,
  "modified": "2023-03-23 09:00:55.469196",
  "module": null,
  "name": "Lead",
  "script": "frappe.listview_settings['Lead'] = \n{\n        onload(listview)\n        {\n            listview.page.fields_dict.emp_id.get_query = function()\n            {\n\t\t\t\treturn {\n\t\t\t\t\t\"filters\": {\n\t\t\t\t\t    \"designation\":\"Sales Officer\"\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tlistview.page.fields_dict.assign_to_marketing_officer.get_query = function()\n            {\n\t\t\t\treturn {\n\t\t\t\t\t\"filters\": {\n\t\t\t\t\t    \"designation\":\"Marketing Officer\"\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n        },\n        \n        \n        \n        // refresh(listview) \n        // {\n          \n        //     $(\"div[data-fieldname = name]\").hide();\n        //     // hide_name_column: true \n            \n        //     console.log(\"List View!!!\")\n        //     // window.onload = function () {\n        //     //  document.querySelector(\"body > div.modal.fade.show > div > div > div.modal-header > div.fill-width.flex.title-section > h4\").innerHTML=\"Lead Created\";\n        //     // }\n        //     // document.querySelector(\"body > div.modal.fade.show > div > div > div.modal-header > div.fill-width.flex.title-section > h4\").text('Lead Created');\n        //     document.querySelector(\"body > div.modal.fade.show > div > div\").style.display = \"none\";\n        //     // var x=document.querySelector(\"#dialog-container\")\n        //     // if (x.style.display === \"none\") {\n        //     //     x.style.visibility = \"hidden\";\n        //     //     x.style.display = \"block\";\n        //     //   }\n        // },\n        \n        // hide_name_column: true\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 0,
  "modified": "2023-05-20 10:22:23.883830",
  "module": null,
  "name": "Purchase Order",
  "script": "var allowed_companies;\nvar taxes\n\nvar net_total=[]\nvar account=[]\nvar rate=[]\n\n\nvar items=[]\nvar container=[]\n\nvar purchase_order_id=[]\nvar quantity=[]\n\n\nvar a=[]\n\nfrappe.ui.form.on('Purchase Order', \n{\n  \n\trefresh(frm) \n\t{\n\t    \n\t     frm.set_df_property('supplier_name',  'hidden',1);\n\t    \n\t    \n\t   // frm.set_query(\"supplier\", function() {\n    //                     return {\n    //                         \"filters\": {\n                               \n    //                             \"supplier_name\":\"CHINA\"\n                                \n    //                         }\n    //                     };\n    //                 });\n\t    \n\t    \n\t  \n\t   // if(frm.doc.company!==\"Lamit\")\n\t   // {\n\t   //    // frm.set_df_property('purchase_type',  'hidden',1);\n\t        \n\t   // }\n\t    \n\t    cur_frm.dashboard.hide()\n\t   // console.log(frm.doc.status)\n\t   // console.log(frm.doc.taxes_and_charges,\"taxes_and_charges\")\n\t    taxes=frm.doc.taxes_and_charges\n\t    \n\t    \n\t  \n    \t    if(frappe.user.has_role(\"Sales Admin\"))\n    \t    {\n    \t        console.log(\"SALES ADMIN\")\n    \t        \n    \t        frm.set_df_property('purchase_type',  'hidden',1);\n    \t        \n    \t        \n    \t        \n    \t        \n    \t        \n    \t        if(frm.is_new())\n    \t            {\n    \t      \n    \t    \n    \t    \n    \t            frappe.call\n                        ({\n                                method: \"frappe.client.get_list\",\n                                args: \n                                {\n                                    doctype: \"Super Stockist\",\n                                    fields: [\"name\"],\n                                   \n                                   \n                                },\n                                callback:function(r) \n                                {\n                                    if(r.message)\n                                    {\n                                        \n                                       \n                                         \n                                          frm.set_value(\"company\",r.message[0].name)\n                                          frm.set_df_property('company',  'read_only',1);\n                                          \n                                          \n                                          \n                                        //   frm.set_value(\"supplier\",\"LAMIT\")\n                                          \n                                          if(r.message[0].name==\"ISHA\")\n                                          {\n                                              frm.set_value(\"naming_series\",\"ISHA-ORD-.YYYY.-\")\n                                              frm.set_df_property('naming_series',  'read_only',1);\n                                          }\n                                          else if(r.message[0].name==\"KP\")\n                                          {\n                                              frm.set_value(\"naming_series\",\"KP-ORD-.YYYY.-\")\n                                          }\n                                        //   if(r.message[0].name==\"ISHA\")\n                                        //   {\n                                        //       frm.set_value(\"naming_series\",\"ISHA-ORD-.YYYY.-\")\n                                        //   }\n                                        //   if(r.message[0].name==\"ISHA\")\n                                        //   {\n                                        //       frm.set_value(\"naming_series\",\"ISHA-ORD-.YYYY.-\")\n                                        //   }\n                                        //   if(r.message[0].name==\"ISHA\")\n                                        //   {\n                                        //       frm.set_value(\"naming_series\",\"ISHA-ORD-.YYYY.-\")\n                                        //   }\n                                        //   if(r.message[0].name==\"ISHA\")\n                                        //   {\n                                        //       frm.set_value(\"naming_series\",\"ISHA-ORD-.YYYY.-\")\n                                        //   }\n                                           \n                                        \n                                          \n                                                    frappe.call\n                                                        ({\n                                                            method: \"frappe.client.get_list\",\n                                                            args: \n                                                            {\n                                                                doctype: \"Supplier\",\n                                                                 fields: [\"internal_supplier\",\"name\"],\n                                                                filters:{\n                                                                    \"internal_supplier\":1,\n                                                                    // \"user\":frappe.session.user,\n                                                                },\n                                                               \n                                                            },\n                                                            callback:function(r) \n                                                            {\n                                                                if(r)\n                                                                {\n                                                                    console.log(r,\"kkkkkkkkkkkkkkk\")\n                                                                    if(r.message.length==0)\n                                                                    {\n                                                                        msgprint(\"Please create a supplier in supplier list and verify the intersupplier is true\")\n                                                                    }\n                                                                    else\n                                                                    {\n                                                                    \n                                                                        frm.set_value(\"supplier\",r.message[0].name)\n                                                                       frm.set_df_property('supplier',  'read_only',1);\n                                                                    }\n                                                                }\n                                                            }\n                                                        })\n                                          \n                                          \n                                          \n                                          \n                                    }\n                                    \n                                    \n                                    \n                                \n                                \n                                }\n                            })\n                            \n                        frm.set_df_property('name',  'hidden',1); \n                            \n                            \n                           \n    \t             }\n    \t    \n    \t    \n    \t           // frm.set_df_property('purchase_type',  'hidden',1); \n    \t    \n    \t    }\n    \t    \n    \t    \n    \t  \n\t   \n\t   // frm.set_df_property('company',  'read_only',1);\n\t   // frm.set_df_property('supplier',  'read_only',1);\n\t   \n\t   // frm.set_df_property('naming_series',  'read_only',1);\n\t    \n\t        setTimeout(() =>\n            {\n    \t\t\tfrm.remove_custom_button('Link to Material Request', 'Tools');\n    \t\t\tfrm.remove_custom_button('Update Rate as per Last Purchase', 'Tools');\n    \t\t\tfrm.remove_custom_button('Material Request', 'Get Items From');\n    \t\t\tfrm.remove_custom_button('Supplier Quotation', 'Get Items From');\n    \t\t\tfrm.remove_custom_button('Product Bundle', 'Get Items From');\n    \t\t\t\n    \t\t\tfrm.remove_custom_button('Hold', 'Status');\n    \t\t\tfrm.remove_custom_button('Close', 'Status');\n    \t\t\t\n    \t\t\tfrm.remove_custom_button('Subscription', 'Create');\n    \t\t\tfrm.remove_custom_button('Payment Request', 'Create');\n    \t\t\tfrm.remove_custom_button('Purchase Receipt', 'Create');\n    \t\t\t\n\t\t    },1000)\n\t\t    \n\t\t   if(frappe.user.has_role(\"Marketing Supervisor\") && frm.doc.status==\"To Receive and Bill\" ) \n    \t\t   {\n    \t\t       \n    \t\t       console.log(\"Marketing Supervisor\")\n    \t\t       \n    \t\t       setTimeout(() =>\n                        {\n                \t\t       \n                \t\t       frm.remove_custom_button('Payment', 'Create');\n                \t\t       frm.remove_custom_button('Purchase Invoice', 'Create');\n                \t\t       frm.remove_custom_button('Update Items');\n                        },1000)\n                        \n                        \n                        if(frm.doc.paid!==\"Paid\")\n                        {\n                        \n                        \n                        \n    \t\t    \n                \t\t    frm.add_custom_button('Create Proforma Invoice', () => \n                                 {\n                                     \n                                        frappe.route_options = {\"po_no\": frm.doc.name};\n                            \t\t\tdocument = frappe.new_doc(\"Sales Order\");\n                            \t\t\tfrappe.set_route(\"Form\", \"Sales Order\", document.name); \n                                     \n                                 })\n                        }\n    \t\t   }\n    \t\t   \n    \t   \n    \t   frm.change_custom_button_type('Create Proforma Invoice', null, 'primary');\n    \t\t   \n        \tif(frm.is_new())\n        \t\t{\n        \t\t    \n        \t\t \n        \t\t    \n        \t\t    \n        \t\t    if(frappe.user.has_role(\"Purchase Manager\"))\n        \t\t       {\n        \t\t            \n        \t\t        console.log(\"Purchase Manager\")\n        \t\t        \n        \t\t        frm.set_value(\"company\",\"Lamit\")\n        \t\t        frm.set_value(\"naming_series\",\"LMT-ORD-.YYYY.-\")\n        \t\t        \n        \t\t        frm.add_custom_button('Get Requested Products', () => \n                                     {\n                                         \n                                         cur_frm.clear_table(\"items\");\n                                         cur_frm.refresh_fields();\n                                         \n                                        //  console.log(\"ASDFGHJKL\")\n                                         \n                                         \n                                         if(frm.doc.supplier)\n                                         {\n                                         \n                                        \n                                         \n                                          frappe.call\n                                                ({\n                                                    method: \"frappe.client.get_list\",\n                                                    args: \n                                                    {\n                                                      'doctype':'Purchase Order',\n                                                      'fields':['name','order_status'], \n                                                        filters:\n                                        \t                {\n                                                                \t                    \n                                            \t                    'order_status':\"Completed\",\n                                            \t                    \n                                            \t                    'company': ['!=','Lamit'],\n                                            \t                    'ordered':0,\n                                            \t                    'status':\"To Receive and Bill\"\n                                                                \t \n                                                            }\n                                                            \n                                                    },\n                                                callback:function(r) \n                                                    {\n                                                        if(r.message)\n                                                        {\n                                                             console.log(r.message,\"11111111111\")\n                                                            \n                                                            \n                                                            if(r.message.length>0)\n                                                            {\n                                                            \n                                                            $.each(r.message,function(i,v)\n                                                             {\n                                                                 \n                                                                 var id=v.name\n                                                                \n                                                                 \n                                                                 frappe.call\n                                                                    ({\n                                                                        method: \"frappe.client.get\",\n                                                                        args: \n                                                                        {\n                                                                          'doctype':'Purchase Order',\n                                                                        //   'fields':['company','tax_category','name'],\n                                                                            filters:\n                                                            \t                {\n                                                                                    \t                    \n                                                                \t                    'name':id,\n                                                                                    \t \n                                                                                }\n                                                                                \n                                                                        },\n                                                                        callback:function(r) \n                                                                        {\n                                                                            if(r.message)\n                                                                            {\n                                                                                 console.log(r.message.items,\"2222222222222\")\n                                                                                \n                                                                                $.each(r.message.items,function(i,v)\n                                                                                    {\n                                                                                        \n                                                                                        items[i]=v.item_code\n                                                                                        container[i]=v.container\n                                                                                        purchase_order_id[i]=v.parent\n                                                                                        quantity[i]=v.qty\n                                                                                        \n                                                                                        \n                                                                                        \n                                                                                            var child = cur_frm.add_child(\"items\");\n                                                                                            frappe.model.set_value(child.doctype, child.name, \"item_code\",items[i]);\n                                                                                            frappe.model.set_value(child.doctype, child.name, \"container\",container[i]);\n                                                                                            frappe.model.set_value(child.doctype, child.name, \"purchase_order_id\",purchase_order_id[i]);\n                                                                                            frappe.model.set_value(child.doctype, child.name, \"qty\",quantity[i]);\n                                                                                                    \n                                                                                            cur_frm.refresh_field(\"items\");\n                                                                                        \n                                                                                        \n                                                                                        \n                                                                                    })\n                                                                                    \n                                                                                    items=[]\n                                                                                    container=[]\n                                                                                    purchase_order_id=[]\n                                                                                \n                                                                                \n                                                                                \n                                                                            }\n                                                                        }\n                                                                    })\n                                                                 \n                                                                 \n                                                             })\n                                                             \n                                                            }\n                                                            \n                                                            else\n                                                            {\n                                                                msgprint(\"There is pending PO in any SuperStockist\")\n                                                            }\n                                                             \n                                                             \n                                                             \n                                                            \n       \n                                                            \n                                                            \n                                                        }\n                                                    }\n                                                });\n                                         }\n                                         \n                                         else\n                                         {\n                                             \n                                             msgprint(\"Plz Select Supplier First\")\n                                             \n                                         }\n                                         \n                                         \n                                         \n                                         \n                                        \n                                            \n                                         \n                                     })\n                                     \n                                     \n                                     \n                                    //  purchase_order_id[i]=v.name\n                                    //  console.log(purchase_order_id,\"8123456789o123456789\")\n                                     \n                                     \n        \t\t        frm.change_custom_button_type('Get Requested Products', null, 'primary');\n        \t\t        \n        \t\t        \n        \t\t        \n        \t\t        \n        \t\t        \n        \t\t    }\n        \t\t    \n        \t\n        \t\t  \n        \t\t \n        \t\t    \n        \t\t    \n        \t\t}\n        \t\t\n        \t\t\n        \t\t\n        \tif(frappe.user.has_role(\"Executive Director\") ||  frappe.user.has_role(\"Managing Director\"))\n        \t{\n        \t     setTimeout(() =>\n                        {\n                \t\t\n                \t\t\t\n                \t\t\t\n                \t\t\tfrm.remove_custom_button('Payment', 'Create');\n                \t\t\tfrm.remove_custom_button('Purchase Invoice', 'Create');\n                \t\t\tfrm.remove_custom_button('Update Items');\n                \t\t\t\n            \t\t    },1000)\n        \t    \n        \t}\n    \t\t    \n    \t\t \n\t    \n\t    \n\t  \n\t},\n\t\n\t\n// \tonload(frm)\n// \t{\n\t    \n// \t     cur_frm.dashboard.hide()\n\t     \n\t     \n// \t     setTimeout(() =>\n//             {\n//     \t\t\tfrm.remove_custom_button('Link to Material Request', 'Tools');\n//     \t\t\tfrm.remove_custom_button('Update Rate as per Last Purchase', 'Tools');\n//     \t\t\tfrm.remove_custom_button('Material Request', 'Get Items From');\n//     \t\t\tfrm.remove_custom_button('Supplier Quotation', 'Get Items From');\n//     \t\t\tfrm.remove_custom_button('Product Bundle', 'Get Items From');\n    \t\t\t\n//     \t\t\tfrm.remove_custom_button('Hold', 'Status');\n//     \t\t\tfrm.remove_custom_button('Close', 'Status');\n    \t\t\t\n//     \t\t\tfrm.remove_custom_button('Subscription', 'Create');\n//     \t\t\tfrm.remove_custom_button('Payment Request', 'Create');\n//     \t\t\tfrm.remove_custom_button('Purchase Receipt', 'Create');\n    \t\t\t\n    \t\t\t\n// \t\t    },1000)\n\t     \n\t     \n\t     \n\t     \n// \t   //   if (frm.is_new())\n// \t   // {\n\t   \n//     // \t    if(frappe.user.has_role(\"Sales Admin\"))\n//     // \t    {\n    \t      \n    \t    \n    \t    \n//     // \t    frappe.call\n//     //                         ({\n//     //                             method: \"frappe.client.get_list\",\n//     //                             args: \n//     //                             {\n//     //                                 doctype: \"User Permission\",\n//     //                                 fields: [\"for_value\"],\n//     //                                 filters:{\n//     //                                     \"allow\":\"Super Stockist\",\n//     //                                     \"user\":frappe.session.user,\n//     //                                 },\n                                   \n//     //                             },\n//     //                             callback:function(r) \n//     //                             {\n//     //                                 if(r.message)\n//     //                                 {\n                                       \n//     //                                          allowed_companies=r.message[0].for_value;\n                                       \n//     //                                       frm.set_value(\"company\",r.message[0].for_value)\n//     //                                 }\n                                    \n                                    \n                                    \n                                \n                                \n//     //                             }\n//     //                         })\n                            \n                            \n                            \n//     //                         if(allowed_companies!==\"Lamit\")\n//     //                         \t    {\n//     //                         \t        frm.set_value(\"supplier\",\"Lamit\")\n                            \t        \n                            \t        \n                            \t        \n                            \t        \n//     //                         \t   }\n                            \t   \n//     //             frm.set_df_property('purchase_type',  'hidden',1);  \t   \n                           \n//     // \t    }\n\t    \n// \t   // }\n\t\t\n// \t    frm.set_df_property('company',  'read_only',1);\n// \t    frm.set_df_property('supplier',  'read_only',1);\n// \t    frm.set_df_property('naming_series',  'read_only',1);\n\t    \n\t    \n\t    \n// // \t    frm.set_query(\"item_code\", \"items\", function(doc, cdt, cdn) {\n// // \t\treturn {\n// // \t\t\tfilters:\n// // \t\t\t{\n// // \t\t\t\t\"has_variants\":0,\n// // \t\t\t}\n// // \t\t};\n// // \t});\n\n\n\n\t   \n// \t},\n\t\n\t\n\tcompany:function(frm)\n\t{\n\t    frm.set_value(\"super_stockist\",frm.doc.company)\n\t},\n\t\n\t\n\tonload:function(frm)\n\t{\n\t    \n\t    \n\t    \n\t \n    \t\t  \n    \t\t  \n    // \t\t  //  if(frm.doc.company==\"Lamit\")\n    \t\t    \n    \t\t    \n    \t\t      //  frm.set_query(\"supplier\", function() {\n            //             return {\n            //                 \"filters\": {\n                               \n            //                     \"supplier_type\":\"Company\"\n                                \n            //                 }\n            //             };\n            //         });\n            \n            \n            \n            if(frm.is_new())\n            \n            {\n           \n            \n            \n                console.log(frm.doc.transaction_date,\"------------\")\n                var g=flt(frm.doc.transaction_date.split(\"-\")[1])\n                console.log(g,\"--------------\")\n                \n                // \n                \n                if(g==\"1\")\n                {\n                frm.set_value(\"month\",\"January\")\n                }\n                \n                else if(g==\"2\")\n                {\n                frm.set_value(\"month\",\"February\")\n                }\n                else if(g==\"3\")\n                {\n                frm.set_value(\"month\",\"March\")\n                }\n                else if(g==\"4\")\n                {\n                frm.set_value(\"month\",\"April\")\n                }\n                else if(g==\"5\")\n                {\n                frm.set_value(\"month\",\"May\")\n                }\n                else if(g==\"6\")\n                {\n                frm.set_value(\"month\",\"June\")\n                }\n                else if(g==\"7\")\n                {\n                frm.set_value(\"month\",\"July\")\n                }\n                else if(g==\"8\")\n                {\n                frm.set_value(\"month\",\"August\")\n                }\n                else if(g==\"9\")\n                {\n                frm.set_value(\"month\",\"September\")\n                }\n                else if(g==\"10\")\n                {\n                frm.set_value(\"month\",\"October\")\n                }\n                else if(g==\"11\")\n                {\n                frm.set_value(\"month\",\"November\")\n                }\n                else if(g==\"12\")\n                {\n                frm.set_value(\"month\",\"December\")\n                }\n    \t\t    \n            }\n            \n            \n            \n            \n            // if(frm.doc.items.length>0)\n            // {\n            //     // frm.doc.items\n                \n                \n                \n                        \n            //           const productsCheck = {}\n\n            //             frm.doc.items.forEach(product => {\n                            \n            //                 // console.log(product.item_code)\n            //                 // console.log(product.qty)\n                            \n            //               if (product.item_code in productsCheck) \n            //               {\n            //                 productsCheck[product.item_code].qty += product.qty\n            //               } \n            //               else\n            //               {\n            //                 productsCheck[product.item_code] = product\n            //               }\n            //             })\n                        \n            //              console.log(productsCheck,\"8888888888888888888888\")\n                        \n                        \n                \n                                                        \n\n                \n            // }\n            \n            \n            \n            \n            \n\n    \t\t    \n    \t\t    \n     \t\t},\n    \t\t\n    \t\t\n    \t\t\n    \t\t\n    \t\t\n    \t\t\n    \t\t\n    \t\t\n    \t\t\n    \t\t\n//     //--------------------------------------------------------------------------------\t\t\n\t    \n// \t   // console.log(frm.doc.category,\"kkkkkkk\")\n\t    \n\t    \n// \t   // if(frm.doc.taxes==undefined)\n// \t   // {\n\t        \n\t        \n// \t   //    frappe.call\n//     //                         ({\n//     //                             method: \"frappe.client.get_list\",\n//     //                             args: \n//     //                             {\n//     //                                 doctype: \"Super Stockist\",\n//     //                                 fields: [\"name\"],\n                                    \n//     //                             },\n//     //                             callback:function(r) \n//     //                             {\n//     //                                 if(r.message)\n//     //                                 {\n                                        \n                                        \n                                        \n                                         \n                                          \n//     //                                     console.log(r.message[0].name,\"NAME\")  \n                                        \n                                        \n//     //                                     if(r.message[0].name!==\"Lamit\")\n//     //                                       {\n                                          \n                                              \n//     //                                       frappe.call\n//     //                                         ({\n//     //                                             method: \"frappe.client.get\",\n//     //                                             args: \n//     //                                             {\n//     //                                               'doctype':'Purchase Taxes and Charges Template',\n//     //                                             //   'fields':['company','tax_category','name'],\n//     //                                                 filters:\n//     //                                 \t                {\n                                                            \t                    \n//     //                                     \t                    'company':r.message[0].name,\n//     //                                                         \t 'tax_category':\"INSTATE\",\n//     //                                                         \t 'disabled':0\n//     //                                                     }\n                                                        \n//     //                                             },\n//     //                                             callback:function(r) \n//     //                                             {\n//     //                                                 if(r.message)\n//     //                                                 {\n                                                        \n//     //                                                     console.log(r.message.taxes,\"MESSAGE\")\n                                                        \n//     //                                                     $.each(r.message.taxes,function(i,v)\n                                                        \n//     //                                                                 {\n                                                                        \n//     //                                                                     net_total[i]=v.charge_type\n//     //                                                                     console.log(net_total)\n//     //                                                                     // account[]\n//     //                                                                     // rate[]    \n                                                         ",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Task",
  "enabled": 0,
  "modified": "2023-03-23 09:00:55.555232",
  "module": null,
  "name": "Task",
  "script": "frappe.listview_settings['Task'] = \n{\n        onload(listview)\n        {\n            listview.page.fields_dict.sales_officer2.get_query = function()\n            {\n\t\t\t\treturn {\n\t\t\t\t\t\"filters\": {\n\t\t\t\t\t    \"designation\":\"Sales Officer\"\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n// \t\t\tlistview.page.fields_dict.marketing_officer1.get_query = function()\n//             {\n// \t\t\t\treturn {\n// \t\t\t\t\t\"filters\": {\n// \t\t\t\t\t    \"designation\":\"Marketing Officer\"\n// \t\t\t\t\t}\n// \t\t\t\t};\n// \t\t\t};\n        },\n};\n\n\n\n\n\n\n\n\n// frappe.listview_settings['Customer'] = {\n// \trefresh: function(listview) {\n// \t   \t$(\"div[data-fieldname = name]\").hide();\n// \t},\n// \thide_name_column: true\n// };",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 0,
  "modified": "2023-03-23 09:00:55.591942",
  "module": null,
  "name": "Customer List",
  "script": "frappe.listview_settings['Customer'] = \n{\n        onload(listview)\n        {\n            listview.page.fields_dict.sales_executive.get_query = function()\n            {\n\t\t\t\treturn {\n\t\t\t\t\t\"filters\": {\n\t\t\t\t\t    \"designation\":\"Sales Officer\"\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tlistview.page.fields_dict.marketing_team_member.get_query = function()\n            {\n\t\t\t\treturn {\n\t\t\t\t\t\"filters\": {\n\t\t\t\t\t    \"designation\":\"Marketing Officer\"\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n        },\n};\n\n\n\n\n\n\n\n\n// frappe.listview_settings['Customer'] = {\n// \trefresh: function(listview) {\n// \t   \t$(\"div[data-fieldname = name]\").hide();\n// \t},\n// \thide_name_column: true\n// };",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Supplier",
  "enabled": 1,
  "modified": "2023-06-01 10:23:28.060636",
  "module": null,
  "name": "Supplier",
  "script": "var address_line1\nvar address_line2\nvar city\nvar state\n\n\nvar company=[];\nvar abbr=[];\n\n\nvar create_ledger;\n\nfrappe.ui.form.on('Supplier', {\n\t\n\tonload(frm)\n\t{\n\t    \n\t    console.log(frm.doc.internal_supplier)\n\t    if(frm.doc.internal_supplier==0 || frm.doc.internal_supplier==undefined)\n\t    {\n\t    \n\t    \n\t                    frappe.call\n        \t                 ({\n                                        method: 'frappe.client.get_list',\n                                        args:\n                                        {\n                                            'doctype':'Supplier',\n                                    \t   \tfilters:\n                                    \t   \t    {\n                                                     'internal_supplier':1,\n                                    \t       \t}  ,\n                                    \t       \t    \n                                    \t    'fields':[\"name\",\"supplier_group\"]\n                                    \t},\n                                        callback: function(r)\n                                        {\n                                            if(r.message)\n                                            { \n                                                console.log(\"KL\",r.message)\n                                                \n                                                if(r.message.length>0)\n                                                {\n                                                    \n                                                     frm.set_df_property('internal_supplier',  'hidden',1);\n                                                    \n                                                }\n                                                \n                                            }\n                                        }\n        \t                 })\n\t    }\n\t    \n\t        \n\t  \n\t    \n\t    \n\t     if (frm.is_new()) \n\t     \n\t        {\n\t            \n\t             cur_frm.clear_table(\"accounts\");\n                 cur_frm.refresh_fields();\n                 \n              \n                 \n                 \n                 if(frm.doc.internal_supplier==undefined)\n    \t\t\n            \t\t{\n            \t\t    \n            \t\t \n            \t\t    frm.set_value(\"default_price_list\",\"Lamit Buying\")\n            \t\t}\n            \t\telse\n                \t\t{\n                \t\t    frm.set_value(\"default_price_list\",\"PTS\")\n                \t\t}\n                \n\t            \n\t        }\n\t        \n\t   // frm.set_query(\"represents_company\", function() {\n    // \t\t\treturn {\n    // \t\t\t\t\"filters\":\n    // \t\t\t\t{\n    // \t\t\t\t// \t\"company\": frm.doc.company,\n    // \t\t\t\t\t\"is_group\": 1\n    // \t\t\t\t}\n    // \t\t\t};\n    // \t\t});\n    \t\t\n    // \t\tfrm.set_query(\"ledger_under\", function() {\n    // \t\t\treturn {\n    // \t\t\t\t\"filters\": {\n    // \t\t\t\t\"root_type\":\"Liability\"\n    // \t\t\t\t}\n    // \t\t\t};\n    // \t\t});\n    \t\t\n    \t\t\n   \n\t    \n\t},\n\t\n\t\n\t\n\trefresh(frm) \n\t{\n\t     \n\t    \n\t    cur_frm.dashboard.hide()\n\t    \n\t    address_line1=frm.doc.address_line1\n\t    address_line2=frm.doc.address_line2\n\t    city=frm.doc.city\n\t    state=frm.doc.state\n\t    \n\t   \n\t    \n\t    create_ledger=frm.doc.create_ledger\n\t    \n\t    \n\t    \n\t    \n\t},\n\t\n\ttax_category1:function(frm)\n\t{\n\t    frm.set_value(\"tax_category\",frm.doc.tax_category1)\n\t    \n\t    if(frm.doc.tax_category1==\"INSTATE\")\n\t    {\n\t        frm.set_value(\"state\",\"Kerala\")\n\t    }\n\t    else\n\t    {\n\t        frm.set_value(\"state\",undefined)\n\t    }\n\t    \n\t    \n\t},\n\t\n\tgstin:function(frm)\n\t{\n\t    frm.set_value(\"tax_id\",frm.doc.gstin)\n\t},\n\t\n\tcountry1:function(frm)\n\t{\n\t    frm.set_value(\"country\",frm.doc.country1)\n\t},\n\t\n\t\n\tinternal_supplier:function(frm)\n\t{\n\t    if(frm.doc.internal_supplier==1)\n\t    {\n\t    \n\t        frm.set_value(\"default_price_list\",\"PTS\") \n\t    }\n\t    else\n\t    {\n\t        frm.set_value(\"default_price_list\",\"Lamit Buying\")\n\t    }\n\t},\n\t\n\tafter_save(frm)\n\t{\n\t    \n\t    \n\t    var t1=frm.doc.name+\"-\"+\"Billing\"\n\t    \n\t    if(frm.doc.tax_category1 && frm.doc.address_line1)\n\t        {\n\t            \n\t           // console.log(\"YES\")\n    \t        frappe.call\n        \t                 ({\n                                        method: 'frappe.client.get_list',\n                                        args:\n                                        {\n                                            'doctype':'Address',\n                                    \t   \tfilters:{\n                                                     name:frm.doc.name+\"-\"+\"Billing\",\n                                    \t       \t    }  ,\n                                    \t       \t    \n                                    \t    'fields':[\"address_title\",\"address_type\"]\n                                    \t},\n                                        callback: function(r)\n                                        {\n                                            if(r.message)\n                                            {  \n                                                console.log(r.message)\n                                                \n                                                if(r.message.length==0)\n                                                {\n                                                    if(frm.doc.gstin)\n                                                    {\n\n                                                    \n                                                        frappe.db.insert\n                                                        ({\n                                                            \n                                                                      \"doctype\": \"Address\",\n                                                                      \"address_title\": frm.doc.name,\n                                                                      \"address_line1\": frm.doc.address_line1,\n                                                                      \"address_line2\": frm.doc.address_line2,\n                                                                      \"city\":frm.doc.city,\n                                                                      \"pincode\":frm.doc.pincode,\n                                                                    \n                                                                      \"state\":frm.doc.state,\n                                                                      \"tax_category\":frm.doc.tax_category1,\n                                                                      \"gstin\":frm.doc.gstin,\n                                                                      \"gst_category\":\"Registered Regular\",\n                                                                      \"gst_state\":\"Kerala\",\n                                                                      \"email_id\":frm.doc.email1,\n                                                                      \"phone\":frm.doc.mobile1,\n                                                                      \n                                                                       \n                                                                      'links':[\n                                                                                    {\n                                                                                        'link_doctype':\"Supplier\",                                                                                    'amount':frm.doc.reservation_pricing,\n                                                                                        \"link_name\":frm.doc.name\n                                                                                    }\n                                                                                ],\n                                                                       \n                                                        });\n                                                    }\n                                                    else\n                                                    {\n                                                        frappe.db.insert\n                                                        ({\n                                                            \n                                                                      \"doctype\": \"Address\",\n                                                                      \"address_title\": frm.doc.name,\n                                                                      \"address_line1\": frm.doc.address_line1,\n                                                                      \"address_line2\": frm.doc.address_line2,\n                                                                      \"city\":frm.doc.city,\n                                                                      \"pincode\":frm.doc.pincode,\n                                                                    \n                                                                      \"state\":frm.doc.state,\n                                                                      \"tax_category\":frm.doc.tax_category1,\n                                                                      \"gstin\":frm.doc.gstin,\n                                                                      \n                                                                      \"email_id\":frm.doc.email1,\n                                                                      \"phone\":frm.doc.mobile1,\n                                                                      \n                                                                       \n                                                                      'links':[\n                                                                                    {\n                                                                                        'link_doctype':\"Supplier\",                                                                                    'amount':frm.doc.reservation_pricing,\n                                                                                        \"link_name\":frm.doc.name\n                                                                                    }\n                                                                                ],\n                                                                       \n                                                        });\n                                                        \n                                                    }\n                                                    \n                                                }\n                                                \n                                                \n                                                else\n                                                {\n                                                    \n                                                    console.log(address_line1,\"address_line1\")\n                                                    console.log(frm.doc.address_line1,\"frm.doc.address_line1\")\n                                                    \n                                                    if(frm.doc.address_line1!=address_line1)\n                                                    {\n                                                   \n                                                    \n                                                     frappe.db.set_value('Address', t1, 'address_line1',frm.doc.address_line1)\n                                                    }\n                                                    else if(frm.doc.address_line2!=address_line2)\n                                                    {\n                                                        frappe.db.set_value('Address', t1, 'address_line2',frm.doc.address_line2)\n                                                    }\n                                                    \n                                                    else if(frm.doc.city!=city)\n                                                    {\n                                                        frappe.db.set_value('Address', t1, 'city',frm.doc.city)\n                                                    }\n                                                    \n                                                    else if(frm.doc.state!=state)\n                                                    {\n                                                        frappe.db.set_value('Address', t1, 'state',frm.doc.state)\n                                                    }\n                                                    \n                                                    \n                                                    \n                                                }\n                                                \n                                                \n                                                \n                                            }\n                                        }\n        \t                 });\n    \t                 \n\t        }\n\t},\n\n\n    before_save(frm)\n    \n    {\n        \n        \n       \n        //  console.log(frm.doc.create_ledger,\"frm.doc.createledger\")\n        \n        //   console.log(frm.doc.name,\"frm.doc.accounts\")\n           var supplier_name=frm.doc.name\n           console.log(supplier_name,\"supplier_namesupplier_name\")\n         \n          \n        \n        if(frm.doc.accounts.length===0 && frm.doc.create_ledger==1 && frm.doc.internal_supplier==1)\n        {\n            \n            \n           \n            \n                                    frappe.call\n                                            ({\n                                                \n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \n                                                        \"doctype\":\"Company\",\n                                                         \"filters\":\n                                                         {\n                                                             'name': ['!=','Lamit'],\n                                                             \n                                                         },\n                                                         \n                                                        \"fields\": [\"name\",\"abbr\"],\n                                                    },\n                                                    \n                                                    \n                                                 \n                                                // \"order_by\": 'posting_date desc',\n                                                callback:function(d)\n                                                {\n                                                  if(d)\n                                                  {\n                                                      console.log(d,\"LLK\")\n                                                      \n                                                      \n                                                      \n                                                      $.each(d.message,function(m,n){\n                                                          \n                                                          company[m]=n.name\n                                                          abbr[m]=n.abbr\n                                                        //   console.log(abbr)\n                                                          \n                                                          var p=\"Accounts Payable\"+\" \"+\"-\"+\" \"+abbr[m]\n                                                          var l=company[m]\n                                                          var p1=\"Lamit\"+\" \"+\"-\"+\" \"+abbr[m]\n                                                          console.log(p)\n                                                          console.log(l)\n                                                          \n                                                          \n                                                          \n                                                          \n                                                          \n                                                          \n                                                          \n                                                        \n                                                         frappe.db.insert\n                                                             \n                                                            ({\n                                                                \n                                                                 \n                                                                      \"doctype\": \"Account\",\n                                                                      \"company\": l,\n                                                                      \"parent_account\":p,\n                                                                      \"account_type\":\"Payable\",\n                                                                      \"account_name\":\"Lamit\",\n                                                                      \"super_stockist\":l\n                                                                    //   \"price_list_rate\":price_list_rate1\n                                                                      \n                                                            });\n                                                            \n                                                            console.log(\"SUCCESS\")\n                                                            var child = cur_frm.add_child(\"accounts\");\n                                                                 frappe.model.set_value(child.doctype, child.name, \"company\",l);\n                                                                 frappe.model.set_value(child.doctype, child.name, \"account\",p1);\n                                                                //  frappe.model.set_value(child.doctype, child.name, \"debit_in_account_currency\",values.debit);\n                                                                 \n                                                                \n                                                                 cur_frm.refresh_field(\"accounts\");\n                    \n                                                          \n                                                          \n                                                          \n                                                          \n                                                          \n                                                      })\n                                                      \n                                                      \n                                                  }\n                                                }\n                                            })\n            \n            \n            \n        \n        \n            \n        }\n        \n        \n        else if(frm.doc.accounts.length==0 && frm.doc.create_ledger==1 && frm.doc.default_price_list==\"Lamit Buying\")\n            \n            {\n                \n            \n            \n                console.log(\"supplier_name\",frm.doc.name)\n            \n            \n                                                    var account_name=frm.doc.name\n                                                    \n                                                     console.log(account_name,\"MMMMMMMM\")\n                                                   \n                                                    \n                                                     frappe.db.insert\n                                                             \n                                                            ({\n                                                                \n                                                                 \n                                                                      \"doctype\": \"Account\",\n                                                                      \"company\": \"Lamit\",\n                                                                      \"parent_account\":\"Accounts Payable - LM\",\n                                                                      \"account_type\":\"Payable\",\n                                                                      \"account_name\":account_name,\n                                                                      \"account_currency\":frm.doc.default_currency,\n                                                                      \"super_stockist\":\"Lamit\",\n                                                                   \n                                                                      \n                                                            });\n                                                            \n                                                            // console.log(\"SUCCESS\")\n                                                                var child = cur_frm.add_child(\"accounts\");\n                                                                frappe.model.set_value(child.doctype, child.name, \"company\",\"Lamit\");\n                                                                frappe.model.set_value(child.doctype, child.name, \"account\",account_name+\" \"+\"-\"+\" \"+\"LM\");\n                                                               \n                                                                cur_frm.refresh_field(\"accounts\");\n            \n            \n            \n        }\n        \n        \n        \n        \n        \n        \n        \n        \n    }\n\n\n\n\t\n\t\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Assign Sale Area",
  "enabled": 1,
  "modified": "2023-04-13 11:09:51.133510",
  "module": null,
  "name": "Sale Area",
  "script": "var asm_exist;\nvar marketing_officer_exist;\nvar sales_officer_exist;\nvar sales_admin_exist;\nvar asm_list=[];\nvar asm_empid_list=[];\nvar asm_email_list=[];\n\nvar sales_offc_list=[];\nvar sales_offc_email_list=[];\nvar sales_offc_empid_list=[];\n\nvar marketing_officer_list=[];\nvar marketing_offc_email_list=[];\nvar marketing_offc_empid_list=[];\n\n\n\nfrappe.ui.form.on('Assign Sale Area', \n{\n\tonload(frm) \n\t{\n\t    console.log(\"hhhhh....\")\n\t    if(frm.doc.name==undefined)\n\t    {\n\t        frm.set_value(\"company\",undefined)\n\t    }\n\t    \n\t    frm.trigger(\"field_filters\")\n\t    frm.trigger(\"employees_filter1\")\n\t    \n        if(frm.doc.area_sales_manager !=undefined)\n        {\n            if(frm.doc.area_sales_manager.length>0)\n            {\n                asm_exist=frm.doc.area_sales_manager_email\n            }\n            else\n            {\n              asm_exist=undefined \n            }\n        }\n        else\n        {\n            asm_exist=undefined\n        }\n        \n        if(frm.doc.sales_officer !=undefined)\n        {\n            if(frm.doc.sales_officer.length>0)\n            {\n                sales_officer_exist=frm.doc.sales_officer_email\n            }\n            else\n            {\n               sales_officer_exist=undefined \n            }\n            \n        }\n        else\n        {\n            sales_officer_exist=undefined\n        }\n        \n        if(frm.doc.marketing_officer !=undefined)\n        {\n            if(frm.doc.marketing_officer.length>0)\n            {\n                 marketing_officer_exist=frm.doc.marketing_officer_email;\n            }\n            else\n            {\n               marketing_officer_exist=undefined \n            }\n        }\n        else\n        {\n            marketing_officer_exist=undefined;\n        }\n        \n        if(frm.doc.sales_admin !=undefined)\n        {\n            if(frm.doc.sales_admin.length>0)\n            {\n                 sales_admin_exist=frm.doc.sales_admin_email;\n                 console.log(sales_admin_exist,\"yes\")\n            }\n            else\n            {\n              sales_admin_exist=undefined\n              console.log(sales_admin_exist,\"NO\")\n              \n            }\n        }\n        else\n        {\n            sales_admin_exist=undefined;\n            console.log(sales_admin_exist,\"NO\")\n        }\n        \n\t},\n\t\n\trefresh(frm)\n\t{\n\t     $('li').removeClass(\"disabled\");  \n\t   //     frm.set_query(\"customer_area\", function() \n    //         {\n    // \t\t\treturn {\n    // \t\t\t    filters:[\n    //                             ['district', '=',frm.doc.destrict],\n    //                         ]\n    // \t\t\t};\n    // \t\t});\n\t     \n\t},\n\t\n\tcompany(frm)\n\t{\n\t    frm.trigger(\"employees_filter\")  \n\t    \n\t    if(frm.doc.sales_admin !=undefined)\n\t    {\n\t        frm.set_df_property(\"sales_admin\",\"description\",\"\")\n\t    }\n\t    else\n\t    {\n\t        frm.set_df_property(\"sales_admin\",\"description\",\"Create sales admin for this company\")\n\t    }\n\t        frm.set_value(\"area_sales_manager_name\",undefined)\n\t        frm.set_value(\"sales_officer_name\",undefined)\n\t        frm.set_value(\"marketing_officer_name\",undefined)\n\t        frm.set_value(\"area_sales_manager\",undefined)\n    \t    frm.set_value(\"area_sales_manager_email\",undefined)\n    \t    frm.set_value(\"area_sales_manager1\",undefined)\n    \t    frm.set_value(\"sales_officer\",undefined)\n    \t    frm.set_value(\"sales_officer_email\",undefined)\n    \t    frm.set_value(\"sales_officer1\",undefined)\n    \t     frm.set_value(\"marketing_officer\",undefined)\n    \t    frm.set_value(\"marketing_officer_email\",undefined)\n    \t    frm.set_value(\"marketing_officer1\",undefined)\n\t    \n\t},\n\t\n\tcustomer_area:function(frm)\n    {\n        if(frm.doc.customer_area !=undefined)\n        {\n                frappe.call\n                  ({\n                        method: \"frappe.client.get_list\",\n                        args: \n                                {\n                                    doctype:\"Assign Sale Area\",\n                                    filters: { 'name':frm.doc.customer_area},\n                                },\n                            callback: function(r)\n                            {\n                                  if(r.message[0])\n                                  {\n                                         frm.set_df_property('customer_area', 'description',\"Already Exist\");\n                                         frappe.validated = false;\n                                  }\n                                  else\n                                  {\n                                      frm.set_df_property('customer_area', 'description',undefined);\n                                      frappe.validated = true;\n                                  }\n                            }\n                  });\n        }\n    },\n\t\n\tarea_sales_manager_name:function(frm)\n\t{\n\t    if(frm.doc.area_sales_manager_name !=undefined)\n\t    {\n    \t    var idx1=asm_list.indexOf(frm.doc.area_sales_manager_name)\n    \t    var idx2=asm_list.indexOf(frm.doc.area_sales_manager_name)\n    \t    frm.set_value(\"area_sales_manager\",asm_empid_list[flt(idx1)])\n    \t    frm.set_value(\"area_sales_manager_email\",asm_email_list[flt(idx2)])\n    \t    frm.set_value(\"area_sales_manager1\",asm_empid_list[flt(idx1)])\n\t    }\n\t    else\n\t    {\n\t        frm.set_value(\"area_sales_manager\",undefined)\n    \t    frm.set_value(\"area_sales_manager_email\",undefined)\n    \t    frm.set_value(\"area_sales_manager1\",undefined)\n\t    }\n\t},\n\t\n\tsales_officer_name:function(frm)\n\t{\n\t    if(frm.doc.sales_officer_name !=undefined)\n\t    {\n    \t    var idx1=sales_offc_list.indexOf(frm.doc.sales_officer_name)\n    \t    var idx2=sales_offc_list.indexOf(frm.doc.sales_officer_name)\n    \t    frm.set_value(\"sales_officer\",sales_offc_empid_list[flt(idx1)])\n    \t    frm.set_value(\"sales_officer_email\",sales_offc_email_list[flt(idx2)])\n    \t   // frm.set_value(\"sales_officer1\",frm.doc.sales_officer_name)\n    \t   frm.set_value(\"sales_officer1\",sales_offc_empid_list[flt(idx1)])\n\t    }\n\t    else\n\t    {\n\t        frm.set_value(\"sales_officer\",undefined)\n    \t    frm.set_value(\"sales_officer_email\",undefined)\n    \t    frm.set_value(\"sales_officer1\",undefined)\n\t    }\n\t},\n\t\n\tmarketing_officer_name:function(frm)\n\t{\n\t    if(frm.doc.marketing_officer_name !=undefined)\n\t    {\n    \t    var idx1=marketing_officer_list.indexOf(frm.doc.marketing_officer_name)\n    \t    var idx2=marketing_officer_list.indexOf(frm.doc.marketing_officer_name)\n    \t    frm.set_value(\"marketing_officer\",marketing_offc_empid_list[flt(idx1)])\n    \t    frm.set_value(\"marketing_officer_email\",marketing_offc_email_list[flt(idx2)])\n    \t   // frm.set_value(\"marketing_officer1\",frm.doc.marketing_officer_name)\n    \t    frm.set_value(\"marketing_officer1\",marketing_offc_empid_list[flt(idx1)])\n\t    }\n\t    else\n\t    {\n\t        frm.set_value(\"marketing_officer\",undefined)\n    \t    frm.set_value(\"marketing_officer_email\",undefined)\n    \t    frm.set_value(\"marketing_officer1\",undefined)\n\t    }\n\t},\n\t\n\tfield_filters:function(frm)\n\t{\n    \t frm.set_query(\"district\", function() \n            {\n    \t\t\treturn {\n    \t\t\t\t\"filters\": {\n    \t\t\t\t\t\"state\":frm.doc.state,\n    \t\t\t\t}\n    \t\t\t};\n    \t\t});\n    \t\t\n    \tfrm.set_query(\"customer_area\", function() \n            {\n    \t\t\treturn {\n    \t\t\t\t\"filters\": {\n    \t\t\t\t\t\"district\":frm.doc.district,\n    \t\t\t\t}\n    \t\t\t};\n    \t\t});\n    \t\t\n    \t\t\n    \t\t\n    \t\tfrm.set_query(\"company\", function() \n            {\n    \t\t\treturn {\n    \t\t\t\t\"filters\": {\n    \t\t\t\t\t\"is_group\":0,\n    \t\t\t\t}\n    \t\t\t};\n    \t\t});\n    \t\t\n    \t\t\n    \t\t\n    \t\t\n    \t\tfrm.set_query(\"marketing_officer\", function() \n            {\n    \t\t\treturn {\n    \t\t\t\t\"filters\": {\n    \t\t\t\t\t\"designation\":\"Marketing Officer\",\n    \t\t\t\t}\n    \t\t\t};\n    \t\t});\n    \t\t\n    \t\tfrm.set_query(\"sales_officer\", function() \n            {\n    \t\t\treturn {\n    \t\t\t\t\"filters\": {\n    \t\t\t\t\t\"designation\":\"Sales Officer\",\n    \t\t\t\t}\n    \t\t\t};\n    \t\t});\n    \t\t\n    // \t    frm.set_query(\"area_sales_manager1\", function() \n    //         {\n    // \t\t\treturn {\n    // \t\t\t\t\"filters\": {\n    // \t\t\t\t\t\"designation\":\"Area Sales Manager\",\n    // \t\t\t\t}\n    // \t\t\t};\n    // \t\t});\n    \t\t\n\t},\n\t\n\tafter_save(frm) \n\t{\n        //area sales manager section\n\t     if(asm_exist==undefined)\n\t     {\n\t          if(frm.doc.area_sales_manager_email!=undefined)\n              {\n                if(frm.doc.area_sales_manager_email.length>0)\n                {\n                    console.log(\"a1111\",frm.doc.area_sales_manager_email,\"  \",frm.doc.name)\n                   \n\t                    frappe.db.insert\n                        ({   \n                            \"doctype\": \"User Permission\", \n                            \"user\":frm.doc.area_sales_manager_email,\n                            \"allow\":\"Assign Sale Area\",\n                            \"for_value\":frm.doc.name,\n                            \"user_designation\":\"Area Sales Manager\"\n                        });\n                        asm_exist=frm.doc.area_sales_manager_email\n                }\n                 else\n                  {\n                       console.log(\"a2\")\n                        frm.trigger(\"delete_asm\")  \n                  }\n              }\n              else\n              {\n                   console.log(\"a3\")\n                    frm.trigger(\"delete_asm\")  \n              }\n\t     }\n\t     else\n\t     {\n\t            console.log(\"a4\")\n\t         if(asm_exist!=frm.doc.area_sales_manager_email)\n    \t     {\n    \t                                                        frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get_list\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"User Permission\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                            \t\"for_value\":frm.doc.name,\n                                                                                \"user\":asm_exist,\n                                                                            },\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message[0])\n                                                                        {\n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"delete_user_permission\",\n                                                                                    \"args\":{\n                                                                                             name:r.message[0].name,\n                                                                                            },\n                                                                                });\n                                                                        }\n                                                                        \n                                                                        if(frm.doc.area_sales_manager_email!=undefined)\n                                                                        {\n                                                                            if(frm.doc.area_sales_manager_email.length>0)\n                                                                            {\n                                                                                    frappe.db.insert\n                                                                                    ({   \n                                                                                        \"doctype\": \"User Permission\", \n                                                                                        \"user\":frm.doc.area_sales_manager_email,\n                                                                                        \"allow\":\"Assign Sale Area\",\n                                                                                        \"for_value\":frm.doc.name,\n                                                                                        // \"user_designation\":\"Area Sales Manager\"\n                                                                                    });\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                });  \n                    asm_exist=frm.doc.area_sales_manager_email                                                 \n    \t     }\n\t     }\n\t     \n\t     //marketing officer section\n\t     \n\t     if(marketing_officer_exist==undefined)\n\t     {\n\t          if(frm.doc.marketing_officer_email!=undefined)\n              {\n                if(frm.doc.marketing_officer_email.length>0)\n                {\n\t                    frappe.db.insert\n                        ({   \n                            \"doctype\": \"User Permission\", \n                            \"user\":frm.doc.marketing_officer_email,\n                            \"allow\":\"Assign Sale Area\",\n                            \"for_value\":frm.doc.name,\n                            // \"user_designation\":\"Marketing Officer\"\n                        });\n                        marketing_officer_exist=frm.doc.marketing_officer_email\n                }\n                 else\n                  {\n                        frm.trigger(\"delete_marketing_officer\")  \n                  }\n              }\n              else\n              {\n                    frm.trigger(\"delete_marketing_officer\")  \n              }\n\t     }\n\t     else\n\t     {\n\t         if(marketing_officer_exist!=frm.doc.marketing_officer_email)\n    \t     {\n    \t                                                        frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get_list\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"User Permission\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                            \t\"for_value\":frm.doc.name,\n                                                                                \"user\":marketing_officer_exist,\n                                                                            },\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message[0])\n                                                                        {\n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"delete_user_permission\",\n                                                                                    \"args\":{\n                                                                                             name:r.message[0].name,\n                                                                                            },\n                                                                                });\n                                                                        }\n                                                                        \n                                                                        if(frm.doc.marketing_officer_email!=undefined)\n                                                                        {\n                                                                            if(frm.doc.marketing_officer_email.length>0)\n                                                                            {\n                                                                                frappe.db.insert\n                                                                                    ({   \n                                                                                        \"doctype\": \"User Permission\", \n                                                                                        \"user\":frm.doc.marketing_officer_email,\n                                                                                        \"allow\":\"Assign Sale Area\",\n                                                                                        \"for_value\":frm.doc.name,\n                                                                                        // \"user_designation\":\"Marketing Officer\"\n                                                                                    });\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                });  \n                    marketing_officer_exist=frm.doc.marketing_officer_email                                                 \n    \t     }\n\t     }\n\t     \n\t     //sales officer\n\t     if(sales_officer_exist==undefined)\n\t     {\n\t         \n\t         console.log(\"YESsales_officer_exist\")\n\t          if(frm.doc.sales_officer_email!=undefined)\n              {\n                if(frm.doc.sales_officer_email.length>0)\n                {\n\t                    frappe.db.insert\n                        ({   \n                            \"doctype\": \"User Permission\", \n                            \"user\":frm.doc.sales_officer_email,\n                            \"allow\":\"Assign Sale Area\",\n                            \"for_value\":frm.doc.name,\n                            // \"user_designation\":\"Sales Officer\"\n                        });\n                        sales_officer_exist==frm.doc.sales_officer_email\n                }\n                 else\n                  {\n                        frm.trigger(\"delete_sales_officer\")  \n                  }\n              }\n              else\n              {\n                    frm.trigger(\"delete_sales_officer\")  \n              }\n\t     }\n\t     else\n\t     {\n\t         \n\t         console.log(\"NOsales_officer_exist\")\n\t         if(sales_officer_exist!=frm.doc.sales_officer_email)\n    \t     {\n    \t                                                        frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get_list\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"User Permission\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                            \t\"for_value\":frm.doc.name,\n                                                                                \"user\":sales_officer_exist,\n                                                                            },\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message[0])\n                                                                        {\n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"delete_user_permission\",\n                                                                                    \"args\":{\n                                                                                             name:r.message[0].name,\n                                                                                            },\n                                                                                });\n                                                                        }\n                                                                        \n                                                                        if(frm.doc.sales_officer_email!=undefined)\n                                                                        {\n                                                                            if(frm.doc.sales_officer_email.length>0)\n                                                                            {\n                                                                                frappe.db.insert\n                                                                                    ({   \n                                                                                        \"doctype\": \"User Permission\", \n                                                                                        \"user\":frm.doc.sales_officer_email,\n                                                                                        \"allow\":\"Assign Sale Area\",\n                                                                                        \"for_value\":frm.doc.name,\n                                                                                        // \"user_designation\":\"Sales Officer\"\n                                                                                    });\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                });  \n                    sales_officer_exist=frm.doc.sales_officer_email                                                 \n    \t     }\n\t     }\n\t     \n\t     \n\t     //Sales Admin--------------------------------------------------------------------------------\n\t     if(sales_admin_exist==undefined)\n\t     {\n\t         \n\t         \n\t         console.log(\"YESsales_admin_exist\")\n\t         \n\t          if(frm.doc.sales_admin_email!=undefined)\n              {\n                  console.log(\"111\")\n                if(frm.doc.sales_admin_email.length>0)\n                {\n                    console.log(\"2222\")\n\t                    frappe.db.insert\n                        ({   \n                            \"doctype\": \"User Permission\", \n                            \"user\":frm.doc.sales_admin_email,\n                            \"allow\":\"Assign Sale Area\",\n                            \"for_value\":frm.doc.name\n                        });\n                        sales_admin_exist==frm.doc.sales_admin_email\n                }\n                 else\n                  {\n                        frm.trigger(\"delete_sales_admin\")  \n                  }\n              }\n              else\n              {\n                    frm.trigger(\"delete_sales_admin\")  \n              }\n\t     }\n\t     else\n\t     {\n\t         console.log(\"NOsales_admin_exist\")\n\t         \n\t         if(sales_admin_exist!=frm.doc.sales_admin_email)\n    \t     {\n    \t                                                        frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get_list\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"User Permission\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                            \t\"for_value\":frm.doc.name,\n                                                                                \"user\":sales_admin_exist,\n                                                                            },\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message[0])\n                                                                        {\n                                                                            \n                                                                            console.log(r,\"RRRRRRRRRRRRRRRR\")\n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"delete_user_permission\",\n                                                                                    \"args\":{\n                                                                                             name:r.message[0].name,\n                                                                                            },\n                                                                                });\n                                                                        }\n                                                                        \n                                                                        if(frm.doc.sales_admin_email!=undefined)\n                                                                        {\n                                                                            if(frm.doc.sales_admin_email.length>0)\n                                                                            {\n                                                                                frappe.db.insert\n                                                                                    ({   \n                                                                                        \"doctype\": \"User Permission\", \n                                                                                        \"user\":frm.doc.sales_admin_email,\n                                                                                        \"allow\":\"Assign Sale Area\",\n                                                                                        \"for_value\":frm.doc.name\n                                                                                    });\n                                                                            }\n                                                                        }\n                                                                    }\n                                                                });  \n                     sales_admin_exist=frm.doc.sales_admin_email                                                 \n    \t     }\n\t     }\n    //     frappe.set_route(\"List\",\"Assign Sale Area\");    \n\t},\n\t\n\temployees_filter:function(frm)\n\t{\n\t    if(frm.doc.company !=undefined)\n\t    {\n\t        frappe.call\n            ({\n                \"method\":\"frappe.client.get_list\",\n                \"args\":\n                    {\n                        \"doctype\":\"User Permission\",\n                        \"filters\":\n                            \t{\n                            \t    \"allow\":\"Super Stockist\",\n                                \t\"for_value\":frm.doc.company,\n                                \t\"user_designation\":\"Area Sales Manager\"\n                                },\n                        \"fields\":[\"user_fullname\",\"user_employee_id\",\"user\"]\n                    },\n            })\n            .then(function(doc)\n            {\n                if(doc.message[0])\n                {\n                    \n                    $.each(doc.message,function(i,v)\n                    {\n                        asm_list[0]=\" \"\n                        asm_list[i+1]=v.user_fullname;\n                        asm_empid_list[i+1]=v.user_employee_id;\n                        asm_email_list[i+1]=v.user;\n                    })\n                    frm.set_df_property(\"area_sales_manager_name\",\"options\",asm_list)\n                    frm.set_value(\"area_sales_manager_name\",undefined)\n                    frm.set_df_property(\"area_sales_manager_name\",\"description\",undefined)\n                    frm.refresh_field('area_sales_manager_name');\n                }\n                else\n                {\n                    frm.set_df_property(\"area_sales_manager_name\",\"options\",\"\")\n                    frm.set_value(\"area_sales_manager\",undefined)\n            \t    frm.set_value(\"area_sales_manager_email\",undefined)\n            \t    frm.set_value(\"area_sales_manager1\",undefined)\n                    frm.set_df_property(\"area_sales_manager_name\",\"description\",\"( Create area sales manager for this company )\")\n                    frm.refresh_field('area_sales_manager_name');\n                }\n            })\n            \n            frappe.call\n            ({\n                \"method\":\"frappe.client.get_list\",\n                \"args\":\n                    {\n                        \"doctype\":\"User Permission\",\n                        \"filters\":\n                            \t{\n                            \t    \"allow\":\"Super Stockist\",\n                                \t\"for_value\":frm.doc.company,\n                                \t\"user_designation\":\"Sales Officer\"\n                                },\n                        \"fields\":[\"user_fullname\",\"user_employee_id\",\"user\"]\n                    },\n            })\n            .then(function(doc)\n            {\n                if(doc.message[0])\n                {\n                    sales_offc_list[0]=\" \"\n                    $.each(doc.message,function(i,v)\n                    {\n                        sales_offc_list[i+1]=v.user_fullname;\n                        sales_offc_empid_list[i+1]=v.user_employee_id;\n                        sales_offc_email_list[i+1]=v.user;\n                    })\n                    frm.set_df_property(\"sales_officer_name\",\"options\",sales_offc_list)\n                    frm.set_value(\"sales_officer_name\",undefined)\n                    frm.set_df_property(\"sales_officer_name\",\"description\",undefined)\n                    frm.refresh_field('sales_officer_name');\n                }\n                else\n                {\n                    frm.set_df_property(\"sales_officer_name\",\"options\",\"\")\n                    frm.set_value(\"sales_officer\",undefined)\n            \t    frm.set_value(\"sales_officer_email\",undefined)\n            \t    frm.set_value(\"sales_officer1\",undefined)\n                    frm.set_df_property(\"sales_officer_name\",\"description\",\"( Create sales officer for this company )\")\n                    frm.refresh_field('sales_officer_name');\n                }\n            })\n            \n            frappe.call\n            ({\n                \"method\":\"frappe.client.get_list\",\n                \"args\":\n                    {\n                        \"doctype\":\"User Permission\",\n                        \"filters\":\n                            \t{\n                            \t    \"allow\":\"Super Stockist\",\n                                \t\"for_value\":frm.doc.company,\n                                \t\"user_designation\":\"Marketing Officer\"\n                                },\n                        \"fields\":[\"user_fullname\",\"user_employee_id\",\"user\"]\n                    },\n            })\n            .then(function(doc)\n            {\n                if(doc.message[0])\n                {\n                    marketing_officer_list[0]=\" \"\n                    $.each(doc.message,function(i,v)\n                    {\n                        marketing_officer_list[i+1]=v.user_fullname;\n                        marketing_offc_empid_list[i+1]=v.user_employee_id;\n                        marketing_offc_email_list[i+1]=v.user;\n                    })\n                    frm.set_df_property(\"marketing_officer_name\",\"options\",marketing_officer_list)\n                    frm.set_value(\"marketing_officer_name\",undefined)\n                    frm.set_df_property(\"marketing_officer_name\",\"description\",undefined)\n                    frm.refresh_field('marketing_officer_name');\n                }\n                else\n                {\n                    frm.set_df_property(\"marketing_officer_name\",\"options\",\"\")\n                    frm.set_value(\"marketing_officer\",undefined)\n            \t    frm.set_value(\"marketing_officer_email\",undefined)\n            \t    frm.set_value(\"marketing_officer1\",undefined)\n                    frm.set_df_property(\"marketing_officer_name\",\"description\",\"( Create marketing officer for this company )\")\n                    frm.refresh_field('marketing_officer_name');\n                }\n            })\n\t    }\n\t},\n\t\n\temployees_filter1:function(frm)\n\t{\n\t    if(frm.doc.company !=undefined)\n\t    {\n\t        frappe.call\n            ({\n                \"method\":\"frappe.client.get_list\",\n                \"args\":\n                    {\n                        \"doctype\":\"User Permission\",\n                        \"filters\":\n                            \t{\n                            \t    \"allow\":\"Super Stockist\",\n                                \t\"for_value\":frm.doc.company,\n                                \t\"user_designation\":\"Area Sales Manager\"\n                                },\n                        \"fields\":[\"user_fullname\",\"user_employee_id\",\"user\"]\n                    },\n            })\n            .then(function(doc)\n            {\n                if(doc.message[0])\n                {\n                    \n                    $.each(doc.message,function(i,v)\n                    {\n                        asm_list[0]=\" \"\n                        asm_list[i+1]=v.user_fullname;\n                        asm_empid_list[i+1]=v.user_employee_id;\n                        asm_email_list[i+1]=v.user;\n                    })\n                    frm.set_df_property(\"area_sales_manager_name\",\"options\",asm_list)\n                    frm.refresh_field('area_sales_manager_name');\n                }\n                else\n                {\n                    frm.set_df_property(\"area_sales_manager_name\",\"options\",\"\")\n                    frm.set_df_property(\"area_sales_manager_name\",\"description\",\"( Create area sales manager for this company )\")\n                    frm.refresh_field('area_sales_manager_name');\n                }\n            })\n            \n            frappe.call\n            ({\n                \"method\":\"frappe.client.get_list\",\n                \"args\":\n                    {\n                        \"doctype\":\"User Permission\",\n                        \"filters\":\n                            \t{\n                            \t    \"allow\":\"Super Stockist\",\n                                \t\"for_value\":frm.doc.company,\n                                \t\"user_designation\":\"Sales Officer\"\n                                },\n                        \"fields\":[\"user_fullname\",\"user_employee_id\",\"user\"]\n                    },\n            })\n            .then(function(doc)\n            {\n                if(doc.message[0])\n                {\n                    sales_offc_list[0]=\" \"\n                    $.each(doc.message,function(i,v)\n                    {\n                        sales_offc_list[i+1]=v.user_fullname;\n                        sales_offc_empid_list[i+1]=v.user_employee_id;\n                        sales_offc_email_list[i+1]=v.user;\n                    })\n                    frm.set_df_property(\"sales_officer_name\",\"options\",sales_offc_list)\n                    frm.refresh_field('sales_officer_name');\n                }\n                else\n                {\n                    frm.set_df_property(\"sales_officer_name\",\"options\",\"\")\n                    frm.set_df_property(\"sales_officer_name\",\"description\",\"( Create sales officer for this company )\")\n                    frm.refresh_field('sales_officer_name');\n                }\n            })\n            \n            frappe.call\n            ({\n                \"method\":\"frappe.client.get_list\",\n                \"args\":\n                    {\n                        \"doctype\":\"User Permission\",\n                        \"filters\":\n                            \t{\n                            \t    \"allow\":\"Super Stockist\",\n                                \t\"for_value\":frm.doc.company,\n                                \t\"user_designation\":\"Marketing Officer\"\n                                },\n                        \"fields\":[\"user_fullname\",\"user_employee_id\",\"user\"]\n                    },\n            })\n            .then(function(doc)\n            {\n                if(doc.message[0])\n                {\n                    marketing_officer_list[0]=\" \"\n                    $.each(doc.message,function(i,v)\n                    {\n                        marketing_officer_list[i+1]=v.user_fullname;\n                        marketing_offc_empid_list[i+1]=v.user_employee_id;\n                        marketing_offc_email_list[i+1]=v.user;\n                    })\n                    frm.set_df_property(\"marketing_officer_name\",\"options\",marketing_officer_list)\n                    frm.refresh_field('marketing_officer_name');\n                }\n                else\n                {\n                    frm.set_df_property(\"marketing_officer_name\",\"options\",\"\")\n                    frm.set_df_property(\"marketing_officer_name\",\"description\",\"( Create marketing officer for this company )\")\n                    frm.refresh_field('marketing_officer_name');\n                }\n            })\n\t    }\n\t},\n\t\n\tdelete_asm:function(frm)\n\t{\n\t     frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get_list\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"User Permission\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                            \t\"for_value\":frm.doc.name,\n                                                                                \"user\":asm_exist,\n                                                                            },\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message[0])\n                                                                        {\n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"delete_user_permission\",\n                                                                                    \"args\":{\n                                                                                             name:r.message[0].name,\n                                                                                            },\n                                                                                });\n                                                                        }\n                                                                    }\n                                                                })\n                    asm_exist=undefined\n\t},\n\t\n\tdelete_marketing_officer:function(frm)\n\t{\n\t                                                            frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get_list\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"User Permission\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                            \t\"for_value\":frm.doc.name,\n                                                                                \"user\":marketing_officer_exist,\n                                                                            },\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message[0])\n                                                                        {\n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"delete_user_permission\",\n                                                                                    \"args\":{\n                                                                                             name:r.message[0].name,\n                                                                                            },\n                                                                                });\n                                                                                \n                                                                                  \n                                                                        }\n                                                                    }\n                                                                })\n                marketing_officer_exist=frm.doc.marketing_officer_email\n\t},\n\t\n\tdelete_sales_officer:function(frm)\n\t{\n\t                                                            frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get_list\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"User Permission\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                            \t\"for_value\":frm.doc.name,\n                                                                                \"user\":sales_officer_exist,\n                                                                            },\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message[0])\n                                                                        {\n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"delete_user_permission\",\n                                                                                    \"args\":{\n                                                                                             name:r.message[0].name,\n                                                                                            },\n                                                                                });\n                                                                        }\n                                                                    }\n                                                                })\n            sales_officer_exist=frm.doc.sales_officer_email\n\t},\n\t\n    delete_sales_admin:function(frm)\n\t{\n\t                                                            frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get_list\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"User Permission\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                            \t\"for_value\":frm.doc.name,\n                                                                                \"user\":sales_admin_exist,\n                                                                            },\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message[0])\n                                                                        {\n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"delete_user_permission\",\n                                                                                    \"args\":{\n                                                                                             name:r.message[0].name,\n                                                                                            },\n                                                                                });\n                                                                        }\n                                                                    }\n                                                                })\n            sales_admin_exist=undefined\n\t},\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Assign Sale Area",
  "enabled": 0,
  "modified": "2023-03-23 09:00:55.723504",
  "module": null,
  "name": "Assign Sale Area List",
  "script": "frappe.listview_settings['Assign Sale Area'] = \n{\n    onload: function(listview) \n    {\n            listview.page.fields_dict.area_sales_manager1.get_query = function()\n            {\n\t\t\t\treturn {\n\t\t\t\t\t\"filters\": {\n\t\t\t\t\t    \"designation\":\"Area Sales Manager\"\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tlistview.page.fields_dict.sales_officer1.get_query = function()\n            {\n\t\t\t\treturn {\n\t\t\t\t\t\"filters\": {\n\t\t\t\t\t    \"designation\":\"Sales Officer\"\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tlistview.page.fields_dict.marketing_officer1.get_query = function()\n            {\n\t\t\t\treturn {\n\t\t\t\t\t\"filters\": {\n\t\t\t\t\t    \"designation\":\"Marketing Officer\"\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n    },\n\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Tax Rule",
  "enabled": 1,
  "modified": "2023-03-23 09:00:55.763941",
  "module": null,
  "name": "Tax Rule",
  "script": "frappe.ui.form.on('Tax Rule', {\n    \n    \n    onload(frm)\n    {\n         frm.set_query(\"sales_tax_template\", function() {\n    \t\t\treturn {\n    \t\t\t\t\"filters\": {\n    \t\t\t\t\t\"company\": frm.doc.company,\n    \t\t\t\t// \t\"is_group\": 0\n    \t\t\t\t}\n    \t\t\t};\n    \t\t});\n    \t\t\n    \t\t\n    \t\tfrm.set_query(\"purchase_tax_template\", function() {\n    \t\t\treturn {\n    \t\t\t\t\"filters\": {\n    \t\t\t\t\t\"company\": frm.doc.company,\n    \t\t\t\t// \t\"is_group\": 0\n    \t\t\t\t}\n    \t\t\t};\n    \t\t});\n    }\n    \n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2023-05-03 09:53:44.647610",
  "module": null,
  "name": "Product catalogue",
  "script": "frappe.ui.form.on('Item', {\n\titem_code:function(frm)\n\t{\n\t\t\n\t\tlet item=frm.doc.item_code\n\t    cur_frm.set_value(\"item_name\",item)\n\t},\n\trefresh(frm)\n\t{\n\t     $('li').removeClass(\"disabled\");\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Issue",
  "enabled": 1,
  "modified": "2023-03-23 09:00:55.840375",
  "module": null,
  "name": "Issue",
  "script": "frappe.ui.form.on('Issue',\n{\n   \n    \n    \n\tonload:function(frm)\n\t{\n\t    cur_frm.dashboard.hide()\n\t    \n\t   if (frm.is_new())\n\t   {\n\t       frm.set_df_property(\"status\",\"hidden\",1);\n\t   }\n\t   else\n\t   {\n\t       if(frappe.user.has_role(\"Script Manager\"))\n\t       {\n\t           frm.set_df_property(\"status\",\"hidden\",0);\n\t       }\n\t       else\n\t       {\n\t           frm.set_df_property(\"status\",\"hidden\",1);\n\t       }\n\t       \n\t   }\n\t},\n\t\n\trefresh:function(frm)\n\t{\n\t    cur_frm.dashboard.hide()\n\t}\n\n    //  onload(frm)\n    // {\n    //     var x=[[1,7,3],[3,5,6],[6,8,9]];\n    //     var y=[[1,1,1,1],[6,7,3,0],[4,5,9,1]];\n    //     // console.log(y[1][0])\n        \n    //     for(var i=0;i<x.length;i++)\n    //     {\n    //      var j=0   \n    //         // for(var j=0;j<x[0].length;j++)\n    //         // {\n              \n    //             for(var k=0;k<y[0].length;k++)\n    //             {\n                    \n    //                 for(var m=0;m<y.length;m++)\n    //                 {\n    //                     console.log(\"i  \",i)\n    //                      console.log(\"j  \",j)\n    //                      console.log(\"k  \",k)\n    //                      console.log(\"m  \",m)\n    //                      console.log(\"x[i][j]\",x[i][j])\n    //                      console.log(\"y[m][k]\",y[m][k])\n    //                      if(flt(j)<x[0].length-1)\n    //                      {\n    //                          j=flt(j)+1\n    //                      }\n    //                 }\n                    \n    //             }\n    //       // }\n    //     }\n    // }\n\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 1,
  "modified": "2023-06-09 14:08:01.638876",
  "module": null,
  "name": "Sales Order -Form",
  "script": "var seekPermission\nvar check_item\nlet cus\nvar s_customer_area=[];\nvar allowed_companies=[]\nfrappe.ui.form.on('Sales Order', \n{\n    onload:function(frm) \n\t{\n\t    \n\t    \n\t   // console.log(\"frm.doc.customer_area  \",frm.doc.customer_area)\n\t   //console.log(\"frm.doc.sale_area  \",frm.doc.sale_area)\n\t   // console.log(frm.doc.po_no,\"jjjjjjjjjjjjjjjj0\")\n\t    \n\t    \n\t   // if(frm.doc.company==\"Lamit\")\n\t   // {\n\t   //     frm.set_df_property('sale_area',  'hidden',1);\n\t   //      frm.set_df_property('mobile_no',  'hidden',1);\n\t   //      frm.set_value(\"naming_series\",\"LMT-SO-.YYYY.-\")\n\t        \n\t   //     console.log(\"LAMITLAMIT\")\n\t        \n\t   // }\n\t    \n\t    \n\t    po_id(frm);\n\t    \n\t    \n\t   // console.log(frm.doc.total,\"123456789789456123\")\n\t   // if(frm.doc.total===undefined )\n\t   // {\n\t   //     frm.save();\n\t   // }\n\t    \n\t    \n\t  \n\t    \n\t   if (frm.is_new())\n\t   \n\t    {\n    \t     \n           // frm.set_value(\"company\",undefined)\n    \t   \n    \t   \n    \t    \n    \t   //if (frm.is_new())\n    \t   //{\n    \t   //    if(frm.doc.customer!==undefined)\n    \t   //    {\n    \t   //        frm.set_value(\"company\",undefined)\n    \t   //    }\n    \t   //}\n    \t    \n    \t    \n    \t    s_customer_area=[];\n    \t    frm.trigger(\"filter_customer\");\n    \t    cur_frm.dashboard.hide();\n    \t   // frm.trigger(\"sales_team_filter\");\n    \t    frm.trigger(\"sales_team\");\n    \t    frm.trigger(\"sale_area\");\n    \t    frm.trigger(\"customer\");\n    \t    \n    \t    \n    \t    \n    \t    \n    \t    \n    \t    \n    \t    \n\t    \n\t   }\n\t   \n\t   \n\n\t    // //cur_frm.dashboard.frm.fields[0].df.hidden=1\n        //  //  $(\".form-link-title\").hide();\n        \n        \n        \n\t   setTimeout(() =>\n\t   {\n\t       // frm.toggle_display(\"naming_series\", false);\n            cur_frm.remove_custom_button('Quotation','Get Items From');\n            cur_frm.remove_custom_button('Purchase Order','Create');\n            cur_frm.remove_custom_button('Subscription','Create');\n            \n            cur_frm.remove_custom_button('Pick List','Create');\n             \n            cur_frm.remove_custom_button('Work Order','Create');\n            cur_frm.remove_custom_button('Project','Create');\n            cur_frm.remove_custom_button('Payment Request','Create');\n            cur_frm.remove_custom_button('Delivery Note','Create');\n            cur_frm.remove_custom_button('Material Request','Create');\n            cur_frm.remove_custom_button('Request for Raw Materials','Create');\n               \n            cur_frm.remove_custom_button('Hold','Status');\n            cur_frm.remove_custom_button('Close','Status');\n               \n\n              \n       },1000);\n       \n       \n       \n        if(frappe.user.has_role(\"Marketing Supervisor\"))\n    \t    {\n                //   setTimeout(() =>\n            \t   //{\n            \t       \n                //       cur_frm.remove_custom_button('Sales Invoice','Create'); \n                      \n            \t   //},1000);  \n    \t    }\n\t},\n\t\n\trefresh(frm)\n\t{\n\t     $('li').removeClass(\"disabled\");\n\t    \n\t   \n\t    cur_frm.dashboard.hide();\n\t     //frm.toggle_display(\"naming_series\", false);\n\t   setTimeout(() =>\n\t   {\n\t       //  frm.toggle_display(\"naming_series\", false);\n              cur_frm.remove_custom_button('Quotation','Get Items From');\n              cur_frm.remove_custom_button('Purchase Order','Create');\n              cur_frm.remove_custom_button('Subscription','Create');\n              \n              cur_frm.remove_custom_button('Pick List','Create');\n              \n              cur_frm.remove_custom_button('Work Order','Create');\n              cur_frm.remove_custom_button('Project','Create');\n              cur_frm.remove_custom_button('Payment Request','Create');\n              cur_frm.remove_custom_button('Delivery Note','Create');\n              cur_frm.remove_custom_button('Material Request','Create');\n              cur_frm.remove_custom_button('Request for Raw Materials','Create');\n               \n               \n               \n              cur_frm.remove_custom_button('Hold','Status');\n              cur_frm.remove_custom_button('Close','Status');\n            \n\n\n        },1000);\n        \n        \n        // if(frappe.user.has_role(\"Marketing Supervisor\"))\n    \t   // {\n        //           setTimeout(() =>\n        //     \t   {\n            \t       \n        //               cur_frm.remove_custom_button('Sales Invoice','Create'); \n                      \n        //     \t   },1000);  \n    \t   // }\n        \n        \n        \n    //      setTimeout(() =>\n\t   //{\n    //       cur_frm.remove_custom_button('Update Items');   \n\t   //},10);\n\t   \n        \n        frm.trigger(\"company_filter\")\n        \n        \n\t},\n\t\n\tcompany:function(frm)\n    {\n        frm.set_value(\"super_stockist\",frm.doc.company) \n        \n        if(frm.doc.company==\"Lamit\")\n        {\n            frm.set_value(\"naming_series\",\"LMT-SO-.YYYY.-\")\n            frm.set_df_property('sale_area',  'hidden',1);\n\t        frm.set_df_property('mobile_no',  'hidden',1);\n        }\n        \n       \n        \n        \n        \n        \n    },\n\t\n   \n\t\n\tcustomer(frm)\n\t{\n\t    if(frm.doc.po_no==undefined)\n\t    {\n\t    \n\t    \n\t                frappe.call\n\t                 ({\n                                method: 'frappe.client.get_list',\n                                args:\n                                {\n                                    'doctype':'Customer',\n                            \t   \tfilters:{\n                                             name:frm.doc.customer,\n                            \t       \t    }  ,\n                            \t    fields:[\"source\",\"engineer1\",\"shop1\",\"contractor\",\"customer1\",\"employee1\"]\n                            \t},\n                            \t\n                                callback: function(r)\n                                {\n                                    if(r.message[0])\n                                    {\n                                        \n                                        \n                                        frm.set_value(\"source1\",r.message[0].source);\n                                        \n                                        if(r.message[0].source==\"ENGINEER / ARCHITECTS\")\n                                        {\n                                            frm.set_value(\"source_name\",r.message[0].engineer1);\n                                        }\n                                        else if(r.message[0].source==\"SHOPS\")\n                                        {\n                                            frm.set_value(\"source_name\",r.message[0].shop1);\n                                        }\n                                        else if(r.message[0].referenced_by==\"CONTRACTORS / TRUSS WORKERS\")\n                                        {\n                                            frm.set_value(\"source_name\",r.message[0].contractor);\n                                        }\n                                        else if(r.message[0].referenced_by==\"CUSTOMER\")\n                                        {\n                                            frm.set_value(\"source_name\",r.message[0].customer1);\n                                        }\n                                        else if(r.message[0].referenced_by==\"EMPLOYEE\")\n                                        {\n                                            frm.set_value(\"source_name\",r.message[0].employee1);\n                                        }\n                                        else\n                                        {\n                                            frm.set_value(\"source_name\",undefined);\n                                        }\n                                        \n                                        \n                                    }\n                                }\n\t                 }) ;\n\t                 \n\t    }\n\t},\n\t\n\t\n\ton_submit:function(frm)\n\t{\n\t    if(frm.doc.po_no)\n\t    {\n\t        \n\t        frappe.db.set_value('Purchase Order', frm.doc.po_no, 'paid', 'Paid')\n\t        \n\t    }\n\t    \n\t},\n\t\n// \tcustomer_area(frm)\n// \t{\n// \t    frm.set_value(\"sale_area\",frm.doc.customer_area)\n// \t},\n\t\n\tsale_area:function(frm)\n\t{\n\t    \n\t   // console.log(\"frm.doc.sale_areasupervisorsupervisorsupervisor  \",frm.doc.sale_area)\n\t    \n\t    if(frm.doc.company!==\"Lamit\" && frm.doc.sale_area!==undefined && frm.doc.internal_customer==0)\n\t    \n\t    {\n\t        \n\t        console.log(\"YESSS\")\n\t    \n\t    \n\t                 frappe.call\n\t                 ({\n                                method: 'frappe.client.get_list',\n                                args:\n                                {\n                                    'doctype':'Assign Sale Area',\n                            \t   \tfilters:{\n                                             name:frm.doc.sale_area,\n                            \t       \t    }  ,\n                            \t    fields:[\"sales_officer\",\"sales_officer_name\",\"sales_officer_email\",\"marketing_officer\",\"marketing_officer_email\",\"area_sales_manager\",\"area_sales_manager_email\",\"sales_admin\",\"sales_admin_email\"]\n                            \t},\n                            \t\n                                callback: function(r)\n                                {\n                                    console.log(\"sales team111...\",r.message)\n                                    if(r.message[0])\n                                    {\n                                        frm.set_value(\"sales_executive\",r.message[0].sales_officer)\n                                        frm.set_value(\"sales_executive_name\",r.message[0].sales_officer_name)\n                                        frm.set_value(\"sales_officer_email\",r.message[0].sales_officer_email)\n                                        frm.set_value(\"marketing_team_member\",r.message[0].marketing_officer)\n                                        frm.set_value(\"marketing_officer_email\",r.message[0].marketing_officer_email)\n                                        frm.set_value(\"area_sales_manager\",r.message[0].area_sales_manager)\n                                        frm.set_value(\"area_sales_manager_email\",r.message[0].area_sales_manager_email)\n                                        frm.set_value(\"sales_admin\",r.message[0].sales_admin)\n                                        frm.set_value(\"sales_admin_email\",r.message[0].sales_admin_email)\n                                    }\n                                }\n\t                 })\n\t               \n\t               \n\t    }\n\t    \n\t},\n\t\n\t\n\t\n// \tcompany_filter:function(frm)\n//     {\n//                         frappe.call\n//                         ({\n//                             method: \"frappe.client.get_list\",\n//                             args: \n//                             {\n//                                 doctype: \"User Permission\",\n//                                 fields: [\"for_value\"],\n//                                 filters:{\n//                                     \"allow\":\"Super Stockist\",\n//                                     \"user\":frappe.session.user,\n//                                 },\n                               \n//                             },\n//                             callback:function(r) \n//                             {\n//                                 if(r.message[0])\n//                                 {\n//                                      $.each(r.message,function(i,v)\n//                                      {\n//                                          allowed_companies[i]=v.for_value;\n//                                      });\n//                                 }\n//                             }\n//                         })\n//                         .then(function(doc)\n//                         {\n//                              frm.set_query(\"company\", function()\n//                                 \t  {\n//                                             return {\n//                                                 \"filters\": {\n//                                                     \"is_group\":0,\n//                                                     \"name\":[\"in\",allowed_companies]\n//                                                 }\n//                                             };\n//                                       });\n//                         })    \n//     },\n\n\n\n\n\n\n\n    \n\tsales_team:function(frm)\n\t{\n\t    \n\t    if(frm.doc.company!==\"Lamit\" && frm.doc.sale_area!==undefined && frm.doc.internal_customer==0)\n\t    \n\t    {\n\t    \n\t    \n\t    \n\t                frappe.call\n\t                 ({\n                                method: 'frappe.client.get_list',\n                                args:\n                                {\n                                    'doctype':'Company',\n                            \t   \tfilters:{\n                                             name:\"Lamit\",\n                            \t       \t    }  ,\n                            \t    fields:[\"sales_manager\",\"sales_manager_email\",\"marketing_supervisor\",\"marketing_supervisor_email\"]\n                            \t},\n                            \t\n                                callback: function(r)\n                                {\n                                    if(r.message[0])\n                                    {\n                                        frm.set_value(\"sales_manager\",r.message[0].sales_manager);\n                                        frm.set_value(\"sales_manager_email\",r.message[0].sales_manager_email);\n                                        frm.set_value(\"marketing_head\",r.message[0].marketing_supervisor);\n                                        frm.set_value(\"marketing_supervisor_email\",r.message[0].marketing_supervisor_email);\n                                    }\n                                }\n\t                 }) ;  \n\t                 \n\t                 \n\t    }\n\t    \n\t    \n\t    \n\t},\n\t\n\t\n\t\n\t\n\t\n\tafter_save:function(frm)\n    {\n       allowed_companies=[]  \n    },\n    \n    \n    validate:function(frm)\n    {\n        //  if (frm.doc.transaction_date < frappe.datetime.get_today()) \n        // {\n        //     frappe.msgprint(__(\"You can not select Past date\"));\n        //     frappe.validated = false;\n        // }\n    },\n    \n    \n    transaction_date:function(frm)\n    {\n       cur_frm.clear_table(\"payment_schedule\");\n    },\n    \n    \n    delivery_date:function(frm)\n    {\n        if(frm.doc.items !=undefined)\n        {\n            if(frm.doc.items.length>0)\n            {\n                $.each(frm.doc.items,function(i,v)\n                {\n                    \n                    v.delivery_date=frm.doc.delivery_date\n                    \n                })\n                frm.refresh_field(\"items\")\n            }\n        }\n    },\n    \n    \n    before_cancel:function(frm)\n    {\n        if(frm.doc.po_no)\n        {\n             frappe.db.set_value('Purchase Order', frm.doc.po_no, 'paid', undefined)\n        }\n        \n    },\n    \n\t\n// \tcompany(frm)\n// \t{\n// \t    frm.trigger(\"sales_team\");\n\t    \n// // \t   \t             frappe.call\n// // \t                 ({\n// //                                 method: 'frappe.client.get_list',\n// //                                 args:\n// //                                 {\n// //                                     'doctype':'Company',\n// //                             \t   \tfilters:{\n// //                                              name:\"Lamit\",\n// //                             \t       \t    }  ,\n// //                             \t    fields:[\"sales_manager\",\"sales_manager_email\",\"marketing_supervisor\",\"marketing_supervisor_email\"]\n// //                             \t},\n                            \t\n// //                                 callback: function(r)\n// //                                 {\n// //                                     if(r.message[0])\n// //                                     {\n// //                                         frm.set_value(\"sales_manager\",r.message[0].sales_manager);\n// //                                         frm.set_value(\"sales_manager_email\",r.message[0].sales_manager_email);\n// //                                         frm.set_value(\"marketing_head\",r.message[0].marketing_supervisor);\n// //                                         frm.set_value(\"marketing_supervisor_email\",r.message[0].marketing_supervisor_email);\n// //                                     }\n// //                                 }\n// // \t                 }) ;\n// \t},\n\n\n\n\t\n// \tsales_team_filter(frm)\n// \t{\n// \t    frm.set_query(\"sales_executive\", function() \n// \t\t{\n//             return {\n//             \"filters\": {\n//                 \"designation\":\"Sales Officer\",\n//                 // \"group_or_ledger\": \"Ledger\"\n//             }\n//         };\n//         });\n        \n//         frm.set_query(\"area_sales_manager\", function() \n// \t\t{\n//             return {\n//             \"filters\": {\n//                 \"designation\":\"Area Sales Manager\",\n//                 // \"group_or_ledger\": \"Ledger\"\n//                 }\n//             };\n//         });\n        \n//         frm.set_query(\"marketing_head\", function() \n// \t\t{\n//             return {\n//             \"filters\": {\n//                 \"designation\":\"Marketing Supervisor\",\n//                 // \"group_or_ledger\": \"Ledger\"\n//             }\n//             };\n//         });\n        \n//         frm.set_query(\"marketing_team_member\", function() \n// \t\t{\n//             return {\n//             \"filters\": {\n//                 \"designation\":\"Marketing Officer\",\n//                 // \"group_or_ledger\": \"Ledger\"\n//                 }\n//             };\n//         });\n\t    \n// \t},\n\n\n\n\n    // on_submit:function(frm)\n    // {\n    //     frappe.set_route(\"List\",\"Sales Order\");\n    // },\n    \n    \nitems_on_form_rendered:function(frm, cdt, cdn)\n{\n    \n    frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-delete-row\").hide();\n    frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-insert-row-below\").hide();\n    frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-insert-row\").hide();\n    frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-duplicate-row\").hide();\n    frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-move-row\").hide();\n\n}\n\t\n\t\n});\n\n\n\nvar po_id=function(frm)\n{\n    \n    \n            frm.set_df_property('sale_area',  'hidden',1);\n            frm.set_df_property('mobile_no',  'hidden',1);\n            \n            frm.set_df_property('naming_series',  'read_only',1);\n            \n            \n            \n            \n            if(frm.doc.po_no)\n            {\n                // frm.set_df_property('company',  'read_only',1);\n                // frm.set_df_property('customer',  'read_only',1);\n                // frm.set_df_property('po_no',  'read_only',1);\n                // frm.set_df_property('po_date',  'read_only',1);\n                \n            }\n    \n    if(frm.is_new())\n    \n    \n    {\n      \n    \n        if(frm.doc.po_no)\n       {\n           \n           \n           \n            cur_frm.clear_table(\"items\");\n            cur_frm.refresh_fields();\n            \n            \n            frm.set_value(\"naming_series\",\"LMT-SO-.YYYY.-\")\n            \n            \n           \n            \n            \n                        frappe.call\n        \t                 ({\n                                        method: 'frappe.client.get',\n                                        args:\n                                        {\n                                            doctype:'Purchase Order',\n                                    \t   \tfilters:\n                                    \t   \t{\n                                    \t   \t    \n                                                     \"name\":frm.doc.po_no\n                                                     \n                                                     \n                                    \t    }  ,\n                                    \t   // fields:[\"tax_category\",\"name\",\"title\"]\n                                    \t},\n                                    \t\n                                        callback: function(r)\n                                        {\n                                            if(r)\n                                            {\n                                                \n                                                console.log(r.message)\n                                                frm.set_value(\"company\",r.message.supplier)\n                                                frm.set_value(\"customer\",r.message.company)\n                                                frm.set_value(\"po_date\",r.message.transaction_date)\n                                                \n                                                \n                                                $.each(r.message.items,function(i,v)\n                                                    {\n                                                        var item=v.item_code\n                                                        var container=v.container\n                                                        var mop=v.mop\n                                                        var mrp=v.mrp\n                                                        var qty=v.qty\n                                                        var rate=v.rate\n                                                        var amount=v.amount\n                                                        \n                                                        console.log(rate,\">>>>>>>>>>>\")\n                                                        \n                                                        \n                                                        var child = cur_frm.add_child(\"items\");\n                                                        \n                                                        frappe.model.set_value(child.doctype, child.name, \"item_code\",item);\n                                                        frappe.model.set_value(child.doctype, child.name, \"mop\",mop);\n                                                        frappe.model.set_value(child.doctype, child.name, \"mrp\",mrp);\n                                                        frappe.model.set_value(child.doctype, child.name, \"qty\",qty);\n                                                        frappe.model.set_value(child.doctype, child.name, \"rate\",rate);\n                                                        frappe.model.set_value(child.doctype, child.name, \"price_list_rate\",rate);\n                                                        frappe.model.set_value(child.doctype, child.name, \"amount\",amount);\n                                                        \n                                                        \n                                                        frappe.model.set_value(child.doctype, child.name, \"container\",container);\n\n                                                                \n                                                        cur_frm.refresh_field(\"items\");\n                                                    })\n                                                \n                                                \n                                                \n\n                                            }\n                                        }\n        \t                 })\n            \n        }  \n    }\n    \n}\n\n\n\n\n\n\n\nfrappe.ui.form.on('Sales Order Item', {\n\trefresh(frm) {\n\t    \n\t    \n\t    \n\t\t// your code here\n\t},\n\t\n\t\n\t\n// items_on_form_rendered:function(frm, cdt, cdn){\n// frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-delete-row\").hide();\n// frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-insert-row-below\").hide();\n// frm.fields_dict[\"items\"].grid.wrapper.find(\".grid-insert-row\").hide();\n// }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 0,
  "modified": "2023-03-23 09:00:55.924577",
  "module": null,
  "name": "Product List",
  "script": "frappe.listview_settings['Item'] = \n{\n\trefresh: function(listview) \n    {\n        // $(`.list-row-col:contains(Status)`).hide();\n        //  $('.btn-primary').hide();\n        $('span.indicator-pill.blue.filterable.ellipsis').hide();\n       \n   \n        // $(`.list-row-col:contains(enabled)`).hide();\n\n    },\n\n    //\thide_status_column: true\n// \thide_docstatus_column:true;\n};\n\n// frappe.listview_settings['Timesheet'] =\n// {\n// \trefresh: function(listview)\n//     {\n//         $('.btn-primary').hide();\n//         $('ellipsis').hide();\n// \t   \t$(\"div[data-fieldname = name]\").hide();\n// \t   \t//$(\"div[data-fieldname = docstatus]\").hide();\n// \t},\n// \thide_name_column: true\n// };",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Address",
  "enabled": 1,
  "modified": "2023-06-14 15:42:19.742034",
  "module": null,
  "name": "Address",
  "script": "frappe.ui.form.on('Address', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t   // frm.set_df_property('country',  'hidden',1);\n\t   // frm.set_df_property('state',  'hidden',1);\n\t    \n\t\t// your code here\n\t},\n\tonload(frm)\n\t{\n\t   //  frm.set_df_property('country',  'hidden',1);\n\t   //  frm.set_df_property('state',  'hidden',1);\n\t},\n\t\n\t\n\tstates:function(frm)\n\t{\n\t    frm.set_value(\"state\",frm.doc.states)\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Company",
  "enabled": 1,
  "modified": "2023-05-14 10:48:03.860646",
  "module": null,
  "name": "Company",
  "script": "\n// company=[];\n// frappe.ui.form.on('Company', {\n// \trefresh(frm) {\n// \t\t// your code here\n// \t},\n\t\n\t\n// \tafter_save(frm)\n// \t{\n// \t    if(frm.doc.service_area.length>0)\n//                 {\n                    \n                    \n                    \n//                      $.each(frm.doc.service_area, function(i, d)\n//                                     {\n                                        \n//                                       company[i]=d.customer_area;\n//                                     //   console.log(company,\"kkkkkkkkkkkk\");\n                                     \n                                        \n//                                     });\n                                    \n//                                     console.log(frm.doc.sales_area[0],\"-------------------\")\n                                    \n                                    \n                                    \n//                                       frappe.call\n//                                       ({\n                                                                                                                        \n//                                             method: \"frappe.client.get_list\",\n//                                             args: \n//                                                     {\n//                                                         doctype: \"User Permission\",\n                                                    \n//                                                         filters: { 'user':frm.doc.email_id,'allow':\"EMP ID\"},\n//                                                     },\n//                                                 callback: function(res)\n//                                                 {\n//                                                     if(res)\n//                                                       {\n//                                                           if(res.message.length==0)\n//                                                           {\n                                                              \n//                                                           }\n//                                                       }\n//                                                 }\n//                                       })\n//                 }\n                                      \n// \t}\n// })\n\nvar address_line1\nvar\taddress_line2\nvar\tcity\n\nfrappe.ui.form.on('Company',\n{\n   \n\n\t\n\tonload(frm)\n\t{\n\t    \n\t    frm.set_df_property('address_html',  'hidden',1);\n\t    \n\t    \n\t   // if (frm.is_new())\n    //     {\n    //         frm.set_value(\"parent_company\",\"Lamit\")    \n    //     }\n\t    cur_frm.dashboard.hide()\n\t    \n\t    frm.set_query(\"warehouse\", function() \n            {\n                return {\n                    \"filters\": \n                    {\n                      \"company\":frm.doc.name,\n                    }\n                };\n            });\n            \n            \n            // frm.set_query(\"company\", function() \n            //         {\n            //             return {\n            //                 \"filters\": \n            //                 {\n            //                   \"company\": \"Lamit\",\n            //                 }\n            //             };\n            //         });\n            \n            \n\t    \n\t},\n\t\n    refresh(frm) \n\t{\n\t     $('li').removeClass(\"disabled\");\n\t    cur_frm.dashboard.hide()\n\t    \n\t     frm.set_df_property('address_html',  'hidden',1);\n\t     \n\t     address_line1=frm.doc.address_line1\n\t     address_line2=frm.doc.address_line1\n\t     city=frm.doc.city\n\t     \n\t    \n\t    \n\t\t// your code here\n\t},\n\t\n\t before_save(frm)\n    {\n        if (frm.is_new())\n        {\n                                      frappe.call\n                                      ({\n                                                                                                                        \n                                            method: \"frappe.client.get_list\",\n                                            args: \n                                                    {\n                                                        doctype: \"Super Stockist\",\n                                                    \n                                                        filters: { 'stockist_name':frm.doc.company_name},\n                                                    },\n                                                callback: function(res)\n                                                {\n                                                    if(res)\n                                                      {\n                                                          if(res.message.length==0)\n                                                          {\n                                                                frappe.db.insert\n                                                                ({\n                                                                    \"doctype\": \"Super Stockist\",\n                                                                    \"stockist_name\": frm.doc.company_name,\n                                                                    \n                                                                });\n                                                          }\n                                                      }\n                                                }\n                                      })\n            \n            \n          \n        }\n    },\n\t\n\tafter_save(frm)\n\t{\n\t   // location.reload();\n\t   // location.refresh() \n\t   ///frappe.set_route('List', \"Company\") \n\t   // frm.reload_doc()\n\t   \n\t   \n\t   \n\t    var t1=frm.doc.name+\"-\"+\"Billing\"\n\t    console.log(t1)\n\t    \n\t    if(frm.doc.address_line1)\n\t        {\n\t            \n\t            console.log(\"YES\")\n    \t        frappe.call\n        \t                 ({\n                                        method: 'frappe.client.get_list',\n                                        args:\n                                        {\n                                            'doctype':'Address',\n                                    \t   \tfilters:{\n                                                     name:frm.doc.name+\"-\"+\"Billing\",\n                                    \t       \t    }  ,\n                                    \t       \t    \n                                    \t    'fields':[\"address_title\",\"address_type\"]\n                                    \t},\n                                        callback: function(r)\n                                        {\n                                            if(r.message)\n                                            {  \n                                                console.log(r.message)\n                                                \n                                                if(r.message.length==0)\n                                                {\n\n                                                    \n                                                    frappe.db.insert\n                                                    ({\n                                                        \n                                                                  \"doctype\": \"Address\",\n                                                                  \"address_title\": frm.doc.name,\n                                                                  \"address_line1\": frm.doc.address_line1,\n                                                                  \"address_line2\": frm.doc.address_line2,\n                                                                  \"city\":frm.doc.city,\n                                                                  \"pincode\":frm.doc.postal_code,\n                                                                //   \"state\":frm.doc.gst_state,\n                                                                  \"state\":\"Kerala\",\n                                                                //   \"tax_category\":frm.doc.tax_category1,\n                                                                  \"gstin\":frm.doc.gstin,\n                                                                  \"gst_state\":\"Kerala\",\n                                                                  \"gst_category\":frm.doc.gst_category,\n                                                                  \"email_id\":frm.doc.email,\n                                                                  \"phone\":frm.doc.phone_no,\n                                                                   \"is_your_company_address\":1,\n                                                                  \n                                                                   \n                                                                  'links':[\n                                                                                {\n                                                                                    'link_doctype':\"Company\",                   \n                                                                                    \"link_name\":frm.doc.name\n                                                                                }\n                                                                            ],\n                                                                   \n                                                    });\n                                                    \n                                                }\n                                                \n                                                \n                                                else if(frm.doc.address_line1!==address_line1 || frm.doc.address_line2!==address_line2 || frm.doc.city!==city)\n                                                {\n                                                    \n                                                    \n                                                    \n                                                     frappe.db.set_value(\"Address\",t1,{\"address_line1\":frm.doc.address_line1,\"address_line2\":frm.doc.address_line2,\"city\":frm.doc.city,\"gstin\":frm.doc.gstin,\"phone\":frm.doc.phone_no})\n                                                    \n                                                    \n                                                    \n                                                    \n                                                    \n                                                }\n                                                \n                                                \n                                                \n                                            }\n                                        }\n        \t                 });\n    \t                 \n\t        }\n\t    \n\t    \n\t    \n\t    \n\t}\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Assign Sale Area",
  "enabled": 1,
  "modified": "2023-09-23 15:52:40.738172",
  "module": null,
  "name": "Assign Sale Area",
  "script": "frappe.listview_settings['Assign Sale Area'] = \n{\n     refresh: function(listview)\n     {\n    \t   // listview.page.add_inner_button(\"Change Area Sales Manager\", function() \n        //     {\n        //         ButtonFunction(listview);\n        //     });;\n        \n        \n        listview.page.add_inner_button(\"Change Area Sales Manager\", function() {\n            ButtonFunction(listview);\n            \n        }, \"Change\", \"btn-primary\");\n        \n        listview.page.add_inner_button(\"Change Sales Officer\", function() {\n           \n            Sales_officer(listview);\n        }, \"Change\", \"btn-primary\");\n        \n        \n        listview.page.add_inner_button(\"Change Marketing Officer\", function() {\n           \n           Marketing_officer(listview)\n        }, \"Change\", \"btn-primary\");\n        \n     },\n};\n\nfunction ButtonFunction(listview) \n{\n    var manager=[];\n    var manager_name=[];\n    var manager_email=[];\n    \n    var manager_unique =[];\n    var manager_name_unique =[];\n    var manager_email_unique=[];\n    \n           \n      var d = new frappe.ui.Dialog\n             ({\n              \n                \ttitle: __(\"Change Area Sales Manager\"),\n                \tfields:\n                \t[     \n                \t    {\n                    \t\tfieldtype: \"Link\",\n                    \t\tfieldname: \"company\",\n                    \t\tlabel: __(\"Company\"),\n                    \t\toptions:\"Company\",\n                    \t\t//options:[\" \",\"Area Sales Manager\",\"Sales Officer\",\"Marketing Supervisor\",\"Marketing Officer\",\"Sales Manager\"],\n                    \t\treqd: 1,\n                    \t\t\"onchange\":()=>\n                    \t\t{\n                    \t\t  //  var d_target_for=d.fields_dict.company.value;\n                    \t\t    frappe.call\n                                ({\n                                    \"method\":\"frappe.client.get_list\",\n                                    \"args\":\n                                        {\n                                            \"doctype\":\"User Permission\",\n                                            \"filters\":\n                                                \t{\n                                                \t    \"allow\":\"Super Stockist\",\n                                                    \t\"for_value\":d.fields_dict.company.value,\n                                                    \t\"user_designation\":\"Area Sales Manager\"\n                                                    },\n                                            \"fields\":[\"user_fullname\",\"user_employee_id\",\"user\"]\n                                        },\n                                })\n                                .then(function(doc)\n                                {\n                                    if(doc.message[0])\n                                    {\n                                        $.each(doc.message,function(i,v)\n                                        {\n                                            manager.push(v.user_employee_id)\n                                            manager_name.push(v.user_fullname)\n                                            manager_email.push(v.user)\n                                        })\n                                    }\n                                })\n                                \n                                manager_unique = [...new Set(manager)];\n                                manager_name_unique = [...new Set(manager_name)];\n                                manager_email_unique = [...new Set(manager_email)];\n                                \n                    \t\t  //  var area_sales_manager1 = d.get_field(\"area_sales_manager1\");\n                    \t\t  //   area_sales_manager1.df.options=manager_unique;\n                    \t\t  //   area_sales_manager1.refresh()\n                    \t\t     \n                    \t\t     var area_sales_manager2 = d.get_field(\"area_sales_manager2\");\n                    \t\t     area_sales_manager2.df.options=manager_unique;\n                    \t\t     area_sales_manager2.refresh()\n                    \t\t},\n                    \t},\n                    \t   //  {\"fieldtype\":\"Section Break\"},\n                    // \t{\n                    // \t\tfieldtype: \"Select\",\n                    // \t\tfieldname: \"area_sales_manager1\",\n                    // \t\tlabel: __(\"Existing Area Sales Manager\"),\n                    // \t\treqd: 1,\n                    // \t},\n                    // \t     {\"fieldtype\":\"Column Break\"},\n                    \t   {\n                    \t\tfieldtype: \"Select\",\n                    \t\tfieldname: \"area_sales_manager2\",\n                    \t\tlabel: __(\"New Area Sales Manager\"),\n                    // \t\tdefault:frappe.datetime.nowdate(),\n                    \t\treqd: 1,\n                    \t},\n                    \t {\"fieldtype\":\"Section Break\"},\n                    \t            {\"fieldtype\":\"Column Break\"},\n                    \t            {\"fieldtype\":\"Column Break\"},\n                    \t            {\"fieldtype\":\"Column Break\"},\n                    \t            {\"fieldtype\":\"Column Break\"},\n                        {\"fieldtype\": \"Button\", \"label\":\"Submit\", \"fieldname\":\"assign\"},\n                    \t\n                \t]\n           \n            });\n\n                d.fields_dict.assign.input.onclick = function()\n                {\n                        var company=d.fields_dict.company.value;\n                        // var d_area_sales_manager1=d.fields_dict.area_sales_manager1.value;\n                        // var idx1=manager_unique.indexOf(d_area_sales_manager1)\n                        // var d_area_sales_manager_name1=manager_name_unique[flt(idx1)]\n                        // var d_area_sales_manager_email1=manager_email_unique[flt(idx1)]\n                        \n                        var d_area_sales_manager2=d.fields_dict.area_sales_manager2.value;\n                        var idx2=manager_unique.indexOf(d_area_sales_manager2)\n                        var d_area_sales_manager_name2=manager_name_unique[flt(idx2)]\n                        var d_area_sales_manager_email2=manager_email_unique[flt(idx2)]\n\n                                                        frappe.call\n                                                        ({\n                                                            \"method\":\"update_area_sales_manager\",\n                                                            \"args\":{\n                                                                         company:company,\n                                                                        //  area_sales_manager1:d_area_sales_manager1,\n                                                                        //  area_sales_manager_name1:d_area_sales_manager_name1,\n                                                                        //  area_sales_manager_email1:d_area_sales_manager_email1,\n                                                                         area_sales_manager2:d_area_sales_manager2,\n                                                                         area_sales_manager_name2:d_area_sales_manager_name2,\n                                                                         area_sales_manager_email2:d_area_sales_manager_email2,\n                                                                    },\n                                                        });\n\n\n\n\n\n                        d.hide();\n                };\n\n            d.show();\n}\n\nfunction Sales_officer(listview)\n{\n    let d = new frappe.ui.Dialog({\n                title: 'Enter details',\n                fields: [\n                    { label: 'Company', fieldname: 'company', fieldtype: 'Link', options: 'Company', reqd: 1,\n                        change() {\n                            const item = d.get_value('company');\n                            if (item) {\n                                frappe.call({\n                                    method: \"frappe.client.get_list\",\n                                    args: { doctype: \"Assign Sale Area\", filters: { 'company': item }, fields: [\"name\", \"state\", \"district\"] },\n                                    callback: (r) => {\n                                        if (r && r.message && r.message[0]) {\n                                            d.set_value('districts', r.message[0].district);\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    },\n                    { label: 'Districts', fieldname: 'districts', fieldtype: 'Data', read_only: 1 },\n                    { label: 'Employee', fieldname: 'employee', fieldtype: 'Link', options: 'Employee', reqd: 1,\n                        get_query() { return { filters: [['Employee', 'designation', '=', 'Sales Officer']] }; },\n                        change() {\n                            const item1 = d.get_value('employee');\n                            if (item1) {\n                                frappe.call({\n                                    method: \"frappe.client.get\", args: { doctype: \"Employee\", filters: { 'name': item1 } },\n                                    callback: (r) => {\n                                        if (r && r.message) {\n                                            d.set_value('employee_name', r.message.employee_name);\n                                            d.set_value('employee_email', r.message.user_id);\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    },\n                    { label: 'Employee Name', fieldname: 'employee_name', fieldtype: 'Data', read_only: 1 },\n                    { label: 'Employee Email', fieldname: 'employee_email', fieldtype: 'Data', read_only: 1 }\n                ],\n                size: 'small',\n                primary_action_label: 'Submit',\n                primary_action(values) {\n                    console.log(values);\n                    frappe.call({\n                        method: \"sales_officer_update\",\n                        args: {\n                            company: values.company,\n                            employee: values.employee,\n                            employee_name: values.employee_name,\n                            employee_email: values.employee_email\n                        },\n                    });\n                    d.hide();\n                }\n            });\n            d.show();\n}\n\n\n\nfunction Marketing_officer(listview)\n{\n    let d = new frappe.ui.Dialog({\n                title: 'Enter details',\n                fields: [\n                    { label: 'Company', fieldname: 'company', fieldtype: 'Link', options: 'Company', reqd: 1,\n                        change() {\n                            const item = d.get_value('company');\n                            if (item) {\n                                frappe.call({\n                                    method: \"frappe.client.get_list\",\n                                    args: { doctype: \"Assign Sale Area\", filters: { 'company': item }, fields: [\"name\", \"state\", \"district\"] },\n                                    callback: (r) => {\n                                        if (r && r.message && r.message[0]) {\n                                            d.set_value('districts', r.message[0].district);\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    },\n                    { label: 'Districts', fieldname: 'districts', fieldtype: 'Data', read_only: 1 },\n                    { label: 'Employee', fieldname: 'employee', fieldtype: 'Link', options: 'Employee', reqd: 1,\n                        get_query() { return { filters: [['Employee', 'designation', '=', 'Marketing Officer']] }; },\n                        change() {\n                            const item1 = d.get_value('employee');\n                            if (item1) {\n                                frappe.call({\n                                    method: \"frappe.client.get\", args: { doctype: \"Employee\", filters: { 'name': item1 } },\n                                    callback: (r) => {\n                                        if (r && r.message) {\n                                            d.set_value('employee_name', r.message.employee_name);\n                                            d.set_value('employee_email', r.message.user_id);\n                                        }\n                                    }\n                                });\n                            }\n                        }\n                    },\n                    { label: 'Employee Name', fieldname: 'employee_name', fieldtype: 'Data', read_only: 1 },\n                    { label: 'Employee Email', fieldname: 'employee_email', fieldtype: 'Data', read_only: 1 }\n                ],\n                size: 'small',\n                primary_action_label: 'Submit',\n                primary_action(values) {\n                    console.log(values);\n                    frappe.call({\n                        method: \"marketing_officer_update\",\n                        args: {\n                            company: values.company,\n                            employee: values.employee,\n                            employee_name: values.employee_name,\n                            employee_email: values.employee_email\n                        },\n                    });\n                    d.hide();\n                }\n            });\n            d.show();\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Quotation",
  "enabled": 0,
  "modified": "2023-03-23 09:00:56.086186",
  "module": null,
  "name": "Quotation List",
  "script": "frappe.listview_settings['Quotation'] = \n{\n\trefresh: function(listview) \n    {\n        $(`.list-row-col:contains(Status)`).hide();\n        $(\".status\").hide();\n         $(\"div[data-fieldname = status]\").hide();\n        // $(`.list-row-col:contains(Status1)`).hide();\n        // $(`.list-row-col:contains(Draft)`).hide();\n        // $(`.list-row-col:contains(Submitted)`).hide();\n        //       hide_name_column: true;\n        // \t   \t//$(\"div[data-fieldname = name]\").hide();\n    },\n\n    // \thide_name_column: true\n// \thide_docstatus_column:true;\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Reminder",
  "enabled": 0,
  "modified": "2023-03-23 09:00:56.124605",
  "module": null,
  "name": "Payment Reminder",
  "script": "frappe.ui.form.on('Payment Reminder',\n{\n\tnewevent:function(frm)\n\t{\n\t    msgprint(\"ggggggg\")\n\t    console.log(\"rrrrrrrrrooooooooo\")\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 1,
  "modified": "2023-06-14 15:49:44.074395",
  "module": null,
  "name": "Customer",
  "script": "var f1=[];\nvar data;\nvar trigger_count=1;\nvar sales_officer\nvar sales_officer_name\nvar h1\nvar t1;\nvar u1;\nvar g1;\nvar employee_name;\nvar employee;\nvar email1;\nvar change_sale_area;\n\nvar company=[]\nvar abbr=[]\n\n\nvar address1\nvar address2\nvar city\nvar pin\nvar email\nvar phone\n\nvar update_address=undefined\n\n\nfrappe.ui.form.on('Customer',\n{\n    onload(frm)\n\t{\n\t    \n\t    \n\t   // console.log(frm.doc.lead_name,\"frm.doc.lead_namefrm.doc.lead_name\")\n\t    \n\t   // change_sale_area=undefined;\n\t   cur_frm.dashboard.hide();\n\t   //frm.trigger(\"field_filters\")\n\t    \n\t     setTimeout(() => {\n\t\t\t\n\t\t\tfrm.remove_custom_button(\"Pricing Rule\", 'Create');\n\t\t\tfrm.remove_custom_button(\"Get Customer Group Details\",'Actions');\n \t\t\tfrm.remove_custom_button(\"Accounting Ledger\",\"View\");\n \t\t\tfrm.remove_custom_button(\"Accounts Receivable\",\"View\");\n \t\t\t\n \t\t\t// frm.set_df_property('customer_type',  'hidden', 1);\n\t\t\n// \t\t\tfrm.remove_custom_button(\"Add to Prospect\",'Action');\n\t\t\t\n\t\t}, 1);\n\t\t\n\t\t\n\t\tfrm.set_df_property('gst_category',  'hidden', 1);\n\t\tfrm.set_value(\"territory\",\"India\")\n\t\t\n\t\t\n\t     if (frm.is_new())\n\t     {\n\t\t\n    \t\tif(frm.doc.customer_type==\"Individual\")\n    \t\t{\n    \t\t    frm.set_value(\"default_price_list\",\"PTC\")\n    \t\t}\n    \t\t\n\t     }\n\t\t\n// \t\tif(frappe.user.has_role(\"Area Sales Manager\"))\n// \t    {\n// \t          frm.set_df_property('change_sale_area','readonly',0);\n// \t    }\n// \t    else\n// \t    {\n// \t        frm.set_df_property('change_sale_area','readonly',1);\n// \t    }\n\n\n\n\n\n            // if(frappe.user.has_role(\"Sales Admin\"))\n            // {\n                \n            //     frm.set_df_property('customer_type',  'hidden', 1);\n                \n            // }\n\n\n\n\n\n\n\n\n\n\n\t},\n    \n\trefresh(frm)\n\t{\n\t    \n\t   // address1=frm.doc.address_line1\n    //     address2=frm.doc.address_line2\n    //     city=frm.doc.city\n    //     pin=frm.doc.pin_code\n    //     email=frm.doc.email\n    //     phone=frm.doc.phone\n\n\t    \n\t    \n\t    \n\t    \n\t    \n\t     $('li').removeClass(\"disabled\");\n\t    cur_frm.dashboard.hide()\n\t    \n\t    setTimeout(() =>\n\t    {\n\t\t\t\n\t\t\tfrm.remove_custom_button(\"Pricing Rule\", 'Create');\n\t\t\tfrm.remove_custom_button(\"Accounting Ledger\",\"View\");\n\t\t\tfrm.remove_custom_button(\"Accounts Receivable\",\"View\");\n \t\t\tfrm.remove_custom_button(\"Get Customer Group Details\",'Actions');\n\t\t}, 1);\n\t\t\n\t\t\tfrm.set_df_property('gst_category',  'hidden', 1);\n\t\t\t\n\t\t\t\n \t\t    frm.set_df_property('default_price_list',  'read_only', 1);\n \t\t    frm.set_df_property('default_currency',  'read_only', 1);\n\n// \t\t if (!frm.is_new())\n//             {\n            \n                    \n//                 frm.add_custom_button(\"Meeting Updates\", () => \n//                 {   \n//                     u1=frm.doc.meeting_updates\n                \n//                     var u2=frm.doc.next_contact_employee\n               \n//                     let d = new frappe.ui.Dialog({\n//                                         title: 'Enter Meeting Updates',\n//                                         fields: [\n                                            \n//                                             {\n//                                                 label: 'Contact Date',\n//                                                 fieldname: 'contact_date',\n//                                                 fieldtype: 'Date',\n//                                                 default: frappe.datetime.nowdate()\n//                                             },\n//                                                 {\"fieldtype\":\"Column Break\",},\n//                                             {\n//                                                 label: 'Task',\n//                                                 fieldname: 'task',\n//                                                 fieldtype: 'Link',\n//                                                 options: 'Task',\n//                                                 filters:{\"status\":\"Open\",\"assigned_to\":frappe.session.user,\"customer\":frm.doc.name},\n//                                               'onchange':()=>\n//                                               {\n//                                                     frappe.call\n//                                                       ({\n//                                                                     method: 'frappe.client.get_list',\n//                                                                     args:\n//                                                                         {\n//                                                                         'doctype':'Task',\n//                                                                         'fields': ['subject'],\n//                                                                 \t\tfilters:\n//                                                                         \t{\n//                                                                                  'name':d.fields_dict.task.value,\n//                                                                 \t       \t}  \n//                                                                         },\n//                                                                         callback:function(r)\n//                                                                             {\n//                                                                                 if(r.message[0])\n//                                                                                 {\n//                                                                                  d.fields_dict.subject1.set_value(r.message[0].subject);\n//                                                                                  d.fields_dict.subject1.refresh();\n//                                                                                 }\n//                                                                                 else\n//                                                                                 {\n//                                                                                     d.fields_dict.subject1.set_value(\"\");\n//                                                                                  d.fields_dict.subject1.refresh();\n//                                                                                 }\n//                                                                             }\n//                                                       })\n                                                    \n//                                                 },\n//                                             },\n//                                                 {\"fieldtype\":\"Column Break\",},\n//                                             {\n//                                                 label: 'Subject',\n//                                                 fieldname: 'subject1',\n//                                                 fieldtype: 'Data',\n//                                                 // read_only:1,\n//                                                 //'fetch_from':'task1.subject',\n//                                               // fetch_from:'task.subject',\n//                                             },\n//                                                 {\"fieldtype\":\"Section Break\"},\n//                                             {\n//                                                 \"description\": \"Time format must be 12:00\",\n//                                                 label: 'From Time',\n//                                                 fieldname: 'from_time',\n//                                                 fieldtype: 'Data',\n//                                                 \"reqd\": 1\n//                                             },\n//                                                 {\"fieldtype\":\"Column Break\",},\n//                                             {\n//                                             \t\tfieldtype: \"Select\",\n//                                             \t\tfieldname: \"time1\",\n//                                             \t\tlabel: __(\"\"),\n//                                             \t\tdefault:\"AM\",\n//                                             \t\toptions:[\"AM\",\"PM\"],\n//                                             },\n                                            \n//                                                 {\"fieldtype\":\"Column Break\"},\n//                                             {\n//                                                 \"description\": \"Time format must be 12:00\",\n//                                                 label: 'To Time',\n//                                                 fieldname: 'to_time',\n//                                                 fieldtype: 'Data',\n//                                                 \"reqd\": 1\n                                                \n//                                             },\n//                                                 {\"fieldtype\":\"Column Break\",},\n//                                             {\n//                                             \t\tfieldtype: \"Select\",\n//                                             \t\tfieldname: \"time2\",\n//                                             \t\tlabel: __(\"\"),\n//                                             \t\tdefault:\"AM\",\n//                                             \t\toptions:[\"AM\",\"PM\"],\n//                                             },\n//                                                 {\"fieldtype\":\"Section Break\"},\n//                                             {\n//                                                 label: 'Meeting Updates',\n//                                                 fieldname: 'meeting_updates',\n//                                                 fieldtype: 'Small Text',\n//                                                 \"reqd\": 1\n//                                             },\n//                                                 {\"fieldtype\":\"Section Break\",label:'Schedule Next Meeting'},\n                                            \n//                                             {\n//                                                 label: 'Next Contact Date',\n//                                                 fieldname: 'next_contact_date',\n//                                                 fieldtype: 'Date',\n                                                \n//                                             },\n//                                                  {\"fieldtype\":\"Column Break\",},\n//                                             {\n//                                                 label: 'Next Contact Time',\n//                                                 fieldname: 'next_contact_time',\n//                                                 fieldtype: 'Data',\n//                                                 \"description\": \"Format must be 12:00\",\n//                                             },\n//                                                  {\"fieldtype\":\"Column Break\",},\n//                                             {\n//                                             \t\tfieldtype: \"Select\",\n//                                             \t\tfieldname: \"time3\",\n//                                             \t\tlabel: __(\"\"),\n//                                             \t\tdefault:\"AM\",\n//                                             \t\toptions:[\"AM\",\"PM\"],\n//                                             },\n                                            \n//                                                  {\"fieldtype\":\"Section Break\",},\n//                                             {\n//                                                 label: 'Subject',\n//                                                 fieldname: 'subject',\n//                                                 fieldtype: 'Data',\n//                                             },\n//                                         ],\n//                                         primary_action_label: 'Submit',\n//                                         primary_action(values) {\n//                                             // console.log(values);\n                                          \n                                           \n                                            \n                                            \n//                                             frappe.call\n//                                                     ({\n//                                                         \"method\":\"frappe.client.get\",\n//                                                         \"args\":\n//                                                         {\n//                                                             \"doctype\":\"Employee\",\n//                                                             \"filters\":\n//                                                             \t{\n//                                                                 \t\"user_id\":frappe.session.user,\n//                                                                 },\n//                                                                 fields:[\"name\",\"employee_name\"]\n//                                                         },\n//                                                         callback:function(r)\n//                                                         {\n//                                                             if(r.message)\n//                                                             {\n//                                                                 console.log(r.message.name)\n//                                                                 employee_name=r.message.name\n//                                                                 employee=r.message.employee_name\n//                                                                  console.log(employee_name,\"kkkk\")\n//                                                                  console.log(employee,\"-------------\")\n                                                                \n//                                                                 // console.log(values.meeting_updates,\"oooo\")\n                                                                \n                                                                \n                                                                \n//                                                                 var child = cur_frm.add_child(\"follow_up\");\n//                                                                 frappe.model.set_value(child.doctype, child.name, \"employee_id\",employee_name);\n//                                                                 frappe.model.set_value(child.doctype, child.name, \"name1\",employee);\n//                                                                 frappe.model.set_value(child.doctype, child.name, \"contact_date\",values.contact_date);\n//                                                                 frappe.model.set_value(child.doctype, child.name, \"fromtime\",values.from_time);\n//                                                                 frappe.model.set_value(child.doctype, child.name, \"totime\",values.to_time);\n//                                                                 frappe.model.set_value(child.doctype, child.name, \"next_contact_date\",values.next_contact_date);\n//                                                                 frappe.model.set_value(child.doctype, child.name, \"notes\",values.meeting_updates);\n//                                                                 cur_frm.refresh_field(\"follow_up\");\n                                                                \n                                                                \n                                                                \n//                                                                 if(values.next_contact_date)\n//                                                                 {\n                                                                 \n//                                                                     var time_24=0\n                            \t\n                              \n//                                                         \t\t\tif(values.time1==\"PM\")\n//                                                         \t\t\t{\n//                                                         \t\t\t      time_24=flt(12.00+flt((values.next_contact_time).replace(\":\",\".\"),2),2)\n//                                                         \t\t\t}\n//                                                         \t\t\telse\n//                                                         \t\t\t{\n//                                                         \t\t\t    time_24=values.next_contact_time\n//                                                         \t\t\t}  \n//                                                                             frappe.db.insert\n//                                                                             ({\n//                                                                                       \"doctype\": \"Task\",\n//                                                                                       \"subject\":values.subject,\n//                                                                                       \"assign\":employee_name,\n//                                                                                       \"due_date\":values.next_contact_date,\n//                                                                                       \"description\":values.subject,\n//                                                                                       \"customer\":frm.doc.name,\n//                                                                                       \"customer_name\":frm.doc.customer_name,\n//                                                                                       \"customer_location\":frm.doc.customer_area,\n//                                                                                       \"contact_time\":values.next_contact_time,\n//                                                                                       \"time_in_24\":parseFloat(time_24).toFixed(2)   \n//                                                                             });\n                                                                           \n                                                                    \n                                                                    \n//                                                                 }\n                                                                \n                                                                \n                                                                \n                                                               \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n//                                                                   frappe.call\n//                                                                         ({\n//                                                                             \"method\":\"frappe.client.get_list\",\n//                                                                             \"args\":\n//                                                                             {\n//                                                                                 \"doctype\":\"Timesheet\",\n//                                                                                 \"filters\":\n//                                                                                 \t{\n//                                                                                     \t\"employee\":employee_name,\n//                                                             \t\t\t\t\t\t\t \"date\":values.contact_date,\n//                                                             \t\t\t\t\t\t\t \"status\":\"Draft\",\n//                                                                                     },\n//                                                                             },\n//                                                                             callback:function(r)\n//                                                                             {\n//                                                                                 if(r.message[0])\n//                                                                                 {\n//                                                                                     // console.log(r.message[0],\"=========\")\n                                                                                    \n//                                                                                     console.log(values.contact_date)\n//                                                             \t                    frappe.call\n//                                                             \t                    ({\n//                                                                                         \"method\":\"timesheet_row_add\",\n//                                                                                         \"args\":{\n//                                                                                                  timesheet:r.message[0].name,\n//                                                                                                  type:\"Lead\",\n//                                                                                                  doc_id:frm.doc.name,\n//                                                                                                  from_time:values.from_time,\n//                                                                                                  to_time:values.to_time,\n//                                                                                                  date1:values.contact_date,\n//                                                                                                  employee:employee_name\n//                                                                                                 },\n//                                                                                     });\n                                                            \n//                                                                                 }\n//                                                                                 else\n//                                                                                 {\n                                                                                    \n//                                                                                     // console.log(\"name\",employee_name)\n//                                                                                     // console.log(\"date\",values.contact_date)\n//                                                                                       frappe.db.insert\n//                                                                 \t                       ({\n//                                                                                             doctype:'Timesheet',    \n//                                                                                             date:values.contact_date,\n//                                                                                             employee:employee_name,\n//                                                                                             employee_name:employee,\n//                                                                                             time_logs:\n//                                                                                             [\n//                                                                                               {\n//                                                                                                      type:\"Lead\",\n//                                                                                                      doc_id:frm.doc.name,\n//                                                                                                      from:values.from_time,\n//                                                                                                      to:values.to_time,\n//                                                                                                      date1:values.contact_date,\n//                                                                                                      employee:employee\n//                                                                                               },\n//                                                                                             ]\n//                                                                                             });\n                                                                                      \n//                                                                                 }\n//                                                                             }\n//                                                                         });\n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n                                                                \n//                                                                   frm.save();\n//                                                             }\n//                                                             f1=[]\n//                                                         }\n//                                                     })\n//                                                     //  frm.set_value(\"next_contact_date\",values.next_contact_date)\n                                            \n                                          \n                                          \n//                                              d.hide();\n                                           \n//                                         }\n                                        \n                                        \n                                        \n//                                     });\n//                                     d.$wrapper.find('.modal-content').css({\"width\":\"800px\"});\n//                                     d.show();\n//                     })\n                    \n//             }\n\n//         // //  frm.change_custom_button_type('Follow Up', null, 'primary');\n//           frm.change_custom_button_type('Meeting Updates', null, 'primary');\n\n\t\t h1=frappe.session.user;\n\n            //  frappe.call\n            //   ({\n            //                                                 method: \"frappe.client.get\",\n            //                                                 args: \n            //                                                 {\n            //                                                     doctype: \"Employee\",\n            //                                                     // fields: [\"employee_name\"],\n            //                                                     filters: { 'user_id':h1},\n            //                                                 },\n            //                                                     callback: function(res)\n            //                                                     {\n            //                                                         if(res)\n            //                                                         { \n                                                                        \n            //                                                             console.log(res.message.designation)\n                                                                       \n                                                                       \n                                                                        \n            //                                                             if(res.message.designation==\"Sales Officer\")\n            //                                                             {\n                                                                            \n                                                                        \t\n            //                                                              \tfrm.remove_custom_button(\"Check Availability\");\n                                                                       \n                                                                            \n                                                                            \n                                                                                                  \n            //                                                             }\n                                                                        \n                                                                        \n                                                                       \n            //                                                         }\n            //                                                     }\n            // })\n\n\t\t  //  frm.add_custom_button('Assign To Sales Officer', () =>\n    //         {   \n    //                 frm.trigger(\"check_availability\");\n    //                 trigger_count=1;\n    //         });\n            \n    //         frm.change_custom_button_type('Assign To Sales Officer', null, 'primary');\n\t},\n\t\n// \tchange_sale_area(frm)\n// \t{\n// \t    if(frm.doc.change_sale_area==1)\n// \t    {\n// \t       change_sale_area=\"true\" \n// \t    }\n// \t    else\n// \t    {\n// \t         change_sale_area=undefined\n// \t    }\n// \t},\n\t\n// \tlimited_vehicle_permissible(frm)\n//     {\n//         if (frm.doc.limited_vehicle_permissible ==1)\n//         {\n//             frm.set_value(\"all_vehicle_permissible\",0)\n//         }\n//     },\n    \n//     all_vehicle_permissible(frm)\n//     {\n//         if (frm.doc.all_vehicle_permissible ==1)\n//         {\n//              frm.set_value(\"limited_vehicle_permissible\",0)\n//         }\n//     },\n\t\n// \tcheck_availability: function (frm) \n//     {\n//             data=[]\n            \n            \n                    \n//                      frappe.call\n//                      ({\n//                             method: \"frappe.client.get_list\",\n//                             args: \n//                             {\n//                                 doctype: \"Sale Area\",\n//                                 fields: [\"allocated_by\",\"emp_name\"],\n//                                 filters: { 'name_of_lac':frm.doc.customer_area},\n//                             },\n//                                 callback: function(r)\n//                                 {\n//                                     if(r.message[0])\n//                                     {\n//                                         sales_officer=r.message[0].allocated_by\n//                                         sales_officer_name=r.message[0].emp_name\n//                                         //d.show();\n//                                     }\n//                                 }\n//                      })\n//                      .then(function(doc)\n//                      {\n//                          \tvar fields = [\n//         \t                {\n//                             \t\tfieldtype: \"Link\",\n//                             \t\tfieldname: \"employee\",\n//                             \t\tlabel: __(\"Sales Officer\"),\n//                             \t\toptions:\"Employee\",\n//                             \t\tdefault:sales_officer\n//                             },\n//                             {\n//                             \t\tfieldtype: \"Data\",\n//                             \t\tfieldname: \"customer\",\n//                             \t\tlabel: __(\"Lead Name\"),\n//                             \t\tdefault:frm.doc.name,\n//                             \t\tread_only:1\n//                             },\n                            \n                            \n    \n//                                  {\"fieldtype\":\"Column Break\",},\n                            \n//                             {\n//                             \t\tfieldtype: \"Data\",\n//                             \t\tfieldname: \"employee_name\",\n//                             \t\tlabel: __(\"Sales Officer Name\"),\n//                             \t\tdefault:sales_officer_name,\n//                             \t\tread_only:1\n//                             },\n//                             {\n//                             \t\tfieldtype: \"Data\",\n//                             \t\tfieldname: \"customer_area\",\n//                             \t\tlabel: __(\"Sale Area\"),\n//                             \t\tdefault:frm.doc.customer_area,\n//                             \t\tread_only:1\n//                             },\n//                                  {\"fieldtype\":\"Section Break\",},\n//                             {\n//                             \t\tfieldtype: \"Date\",\n//                             \t\tfieldname: \"date\",\n//                             \t\tlabel: __(\"Meeting Date\"),\n//                             \t\tdefault:frappe.datetime.nowdate(),\n//                             \t\treqd: 1,\n//                             \t\t'onchange': () =>\n//                                     {  \n//                                         //  while(d.fields_dict.items.df.data[0].name!=undefined)\n//                                         //  {\n//                                         //     d.fields_dict.items.grid.grid_rows.forEach(function(row)\n//                                         //     {\n//                                         //         row.remove();\n//                                         //     }); \n//                                         //  }\n                                \n//                                       // d.fields_dict.employee.text=\"SOF-5\"\n//                                       // d.fields_dict.employee.value=\"SOF-5\"\n//                                           //.fields_dict.items.grid.refresh();\n                                          \n//                                         if(trigger_count==\"1\")\n//                                         {\n//                                                 d.fields_dict.items.grid.grid_rows.forEach(function(row)\n//                                                 {\n//                                                     row.remove();\n//                                                 });\n                                            \n                                            \n                                            \n//                                                 frappe.call\n//                                                 ({\n//                                                     \"method\":\"frappe.client.get_list\",\n//                                                     \"args\":\n//                                                         {\n//                                                             \"doctype\":\"Task\",\n//                                                             \"filters\":\n//                                                             {\n//                                                                 \"assign\":d.fields_dict.employee.value,\n//                                                                 \"due_date\":d.fields_dict.date.value\n//                                                             },\n//                                                             fields:[\"name\",\"subject\",\"contact_time\",\"customer_name\",\"customer_location\",\"time1\",\"lead_location\"],\n//                                                             order_by:\"time_in_24\",\n//                                                         },\n//                                                 })\n//                                                 .then(function(doc1)\n//                                                  {\n//                                                      if(doc1.message.length>0)\n//                                                      {\n//                                                                   for(var j=0;j<doc1.message.length;j++)\n//                                                                     {\n//                                                                                 d.fields_dict.items.df.data.push({\"suject\":\"uuuuuuu\"})\n//                                                                                 d.fields_dict.items.df.data[j].name=doc1.message[j].name\n//                                                                                 // d.fields_dict.items.df.data[j].customer_name=doc1.message[j].customer_name\n//                                                                                 if(doc1.message[j].lead_location !=undefined)\n//                                                                                 {\n//                                                                                     d.fields_dict.items.df.data[j].customer_location=doc1.message[j].lead_location \n//                                                                                 }\n//                                                                                 else\n//                                                                                 {\n//                                                                                     d.fields_dict.items.df.data[j].customer_location=doc1.message[j].customer_location\n//                                                                                 }\n//                                                                                 d.fields_dict.items.df.data[j].subject=doc1.message[j].subject\n//                                                                                 d.fields_dict.items.df.data[j].contact_time=doc1.message[j].contact_time\n//                                                                                  d.fields_dict.items.df.data[j].time1=doc1.message[j].time1\n//                                                                     }\n//                                                                       d.fields_dict.items.grid.refresh();\n//                                                      }\n//                                                  });\n//                                                  trigger_count=2\n//                                         }\n//                                         else\n//                                         {\n//                                             trigger_count=1\n//                                         }\n//                                     },\n//                             },\n//                                  {\"fieldtype\":\"Column Break\",},\n//                             {\n//                                 \t\tfieldtype: \"Select\",\n//                                 \t\tfieldname: \"time\",\n//                                 \t\tlabel: __(\"Meeting Time\"),\n//                                 \t\treqd:1,\n//                                 \t\toptions:[\"07:00\",\"07:15\",\"07:30\",\"07:45\",\"08:00\",\"08:15\",\"08:30\",\"08:45\",\"09:00\",\"09:15\",\"09:30\",\"09:45\",\"10:00\",\"10:15\",\"10:30\",\"10:45\",\"11:00\",\"11:15\",\"11:30\",\"11:45\",\"12:00\"],\n//                                 },\n//                                  {\"fieldtype\":\"Column Break\",},\n//                             {\n//                                 \t\tfieldtype: \"Select\",\n//                                 \t\tfieldname: \"time1\",\n//                                 \t\tlabel: __(\"\"),\n//                                 \t\tdefault:\"AM\",\n//                                 \t\toptions:[\"AM\",\"PM\"],\n//                                 \t\t'onchange':()=>{\n//                                 \t\t    if (d.fields_dict.time1.value=='PM')\n//                                 \t\t    {\n//                                 \t\t        var field = d.get_field(\"time\");\n//                                                 field.df.options=[\"01:00\",\"01:15\",\"01:30\",\"01:45\",\"02:00\",\"02:15\",\"02:30\",\"02:45\",\"03:00\",\"03:15\",\"03:30\",\"03:45\",\"04:00\",\"04:15\",\"04:30\",\"04:45\",\"05:00\",\"05:15\",\"05:30\",\"05:45\",\"06:00\",\"06:15\",\"06:30\",\"06:45\",\"07:00\",\"07:15\",\"07:30\",\"07:45\",\"08:00\",\"08:15\",\"08:30\",\"08:45\",\"09:00\",\"09:15\",\"09:30\",\"09:45\",\"10:00\"]\n//                                                 field.refresh();\n//                                 \t\t    }\n//                                 \t\t    else if(d.fields_dict.time1.value=='AM')\n//                                 \t\t    {\n//                                 \t\t        var field = d.get_field(\"time\");\n//                                                 field.df.options=[\"07:00\",\"07:15\",\"07:30\",\"07:45\",\"08:00\",\"08:15\",\"08:30\",\"08:45\",\"09:00\",\"09:15\",\"09:30\",\"09:45\",\"10:00\",\"10:15\",\"10:30\",\"10:45\",\"11:00\",\"11:15\",\"11:30\",\"11:45\",\"12:00\"]\n//                                                 field.refresh();\n//                                 \t\t    }\n//                                 \t\t}\n//                             },\n//                                  {\"fieldtype\":\"Section Break\",},\n//                             {\n//                                 \t\tfieldtype: \"Data\",\n//                                 \t\tfieldname: \"subject\",\n//                                 \t\tlabel: __(\"Subject\"),\n//                                 \t\treqd:1\n//                             },\n//         \t                {\n//                             \t\tfieldtype: \"Data\",\n//                             \t\tfieldname: \"remarks\",\n//                             \t\tlabel: __(\"Remark\"),\n//                             // \t\treqd:1\n//                             },\n//                                  {\"fieldtype\":\"Section Break\",},\n//                     \t\t{\n//                     \t\t\tfieldtype:'Table', fieldname: 'items', read_only:1,\n//                     \t\t\tdescription: __('Existing Task'),\n//                     \t\t\tfields: \n//                     \t\t\t[\n//                     \t\t\t    \t{fieldtype:'Read Only', fieldname:'name',label: __('Task'), in_list_view:1,columns:2},\n//                     \t\t\t    \t{fieldtype:'Read Only', fieldname:'subject',label: __('Subject'), in_list_view:1,columns:2},\n//                         \t\t\t\t// {fieldtype:'Read Only', fieldname:'customer_name',label: __('Customer Name'), in_list_view:1,columns: 2},\n//                         \t\t\t\t{fieldtype:'Read Only', fieldname:'customer_location',label: __('Lead/Customer Area'), in_list_view:1,columns:2},\n                        \t\t\t\t\n//                         \t\t\t\t{fieldtype:'read Only', fieldname:'contact_time',label: __('Contact Time'), in_list_view:1,columns: 1},\n//                         \t\t\t\t{fieldtype:'Read Only', fieldname:'time1',label: __('time'), in_list_view:1,columns: 1},\n//                     \t\t\t\t// {fieldtype:'Read Only', fieldname:'name',label: __('Task'), in_list_view:1},\n//                     \t\t\t\t// {fieldtype:'Read Only', fieldname:'subject',label: __('Subject'), in_list_view:1},\n//                     \t\t\t\t// {fieldtype:'read Only', fieldname:'contact_time',label: __('Contact Time'), in_list_view:1},\n//                     \t\t\t],\n//                     \t\t\tcannot_add_rows: 1,\n//                                 cannot_delete_rows : 1,\n//                                 //cannot_edit_row:1,\n//                     \t\t\tdata: data,\n//                     \t\t\tget_data: function() \n//                     \t\t\t{\n//                     \t\t\t\treturn data\n//                     \t\t\t}\n//                     \t\t}\n//                     \t]\n                    \t\n//                     \t    \tvar d = new frappe.ui.Dialog\n//                             \t({\n//                             \t\ttitle: __(\"Check Availability & Assign Task\"),\n//                             \t\tfields: fields,\n//                             \t\tprimary_action: function(values) \n//                             \t\t{\n//                                         var time_24=0\n//                             \t\t    var remark1=undefined\n  \n//                             \t\t\tif(values.time1==\"PM\")\n//                             \t\t\t{\n//                             \t\t\t      time_24=flt(12.00+flt((values.time).replace(\":\",\".\"),2),2)\n//                             \t\t\t}\n//                             \t\t\telse\n//                             \t\t\t{\n//                             \t\t\t    time_24=values.time\n//                             \t\t\t}\n                            \t\t\t\n//                             \t\t\tif(values.remarks==undefined)\n//                             \t\t\t{\n//                             \t\t\t   remark1=values.subject\n//                             \t\t\t}\n//                             \t\t\telse\n//                             \t\t\t{\n//                             \t\t\t     remark1=values.remarks\n//                             \t\t\t}\n                            \t\t\t\n                            \t\t\t                        \n                                                                              \n                            \t\t\t\n//                             \t\t\t                                   frappe.db.insert\n//                                                                           ({\n//                                                                               \"doctype\": \"Task\",\n//                                                                               \"subject\":values.subject,\n//                                                                               \"assign\":values.employee,\n//                                                                               \"due_date\":values.date,\n//                                                                               \"description\":values.remarks,\n//                                                                               \"contact_time\":values.time,\n//                                                                               \"customer\":frm.doc.name,\n//                                                                               \"customer_name\":frm.doc.name,\n//                                                                               \"customer_location\":frm.doc.customer_area,\n//                                                                               \"time1\":values.time1,\n//                                                                               \"time_in_24\":parseFloat(time_24).toFixed(2)       \n                                                                                                            \n//                                                                               });\n//                                                                             //console.log(\"aaaa\",values.employee)\n//                                                                                 frm.set_value(\"assigned_to1\",values.employee)\n\n//                                                                                  var child = cur_frm.add_child(\"task_to_sales_officer\");\n//                                                                                  frappe.model.set_value(child.doctype, child.name, \"date\",values.date);\n//                                                                                  frappe.model.set_value(child.doctype, child.name, \"time\",values.time);\n//                                                                                  frappe.model.set_value(child.doctype, child.name, \"subject\",values.subject);\n//                                                                                  frappe.model.set_value(child.doctype, child.name, \"emp_id\",values.employee);\n//                                                                                  frappe.model.set_value(child.doctype, child.name, \"note\",values.remarks);\n                    \n//                                                                                  cur_frm.refresh_field(\"task_to_sales_officer\");\n//                                                                                  trigger_count=1\n//                                                                                  d.hide();\n//                                                                                  frm.save(); \n//                             \t\t},\n//                             \t\tprimary_action_label: __('Assign')\n//                             \t});\n                            \t\n//                             \tvar field1 = d.get_field(\"employee\");\n//                             \tfield1.df.read_only = 1;\n                            \t\n                            \t\n//                             \tfield1.refresh();\n//                             \td.$wrapper.find('.modal-content').css({\"width\":\"800px\"});\n//                                 d.show();         \n//                      })\n//         },\n        \n    \n //------------------------------------------------------------------------------------------------------------------------------   \n    \n    \n    before_save(frm)\n    {\n        // if(frm.doc.sales_executive ==undefined)\n        // {\n        //      frappe.call\n        //       ({\n        //                                                     method: \"frappe.client.get_list\",\n        //                                                     args: \n        //                                                     {\n        //                                                         doctype: \"Lead\",\n        //                                                         filters: { 'name':frm.doc.lead_name},\n        //                                                          fields:[\"assigned_to1\"],\n        //                                                     },\n                                                           \n        //                                                         callback: function(res)\n        //                                                         {\n        //                                                             frm.set_value(\"sales_executive\",res.message[0].assigned_to1)\n        //                                                         }\n        //     })\n\n        // }\n        \n        \n        var account_name=frm.doc.customer_name+\" \"+\"-\"+\" \"+\"LM\"\n        console.log(account_name)\n        \n        \n         if(frm.doc.create_ledger==1)\n        {\n            \n            // console.log(\"KLKL\")\n            \n                                    frappe.call\n                                            ({\n                                                \n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \n                                                         \"doctype\":\"Account\",\n                                                         \"filters\":{\"company\":\"Lamit\",\"name\":frm.doc.customer_name+\" \"+\"-\"+\" \"+\"LR\",\"is_group\":0},\n                                                         \"fields\": [\"name\",\"company\",\"parent_account\"],\n                                                    },\n                                                    \n                                                    \n                                                 \n                                                // \"order_by\": 'posting_date desc',\n                                                callback:function(d)\n                                                {\n                                                  if(d)\n                                                  {\n                                                      console.log(d,\"LLK\")\n                                                      \n                                                      if(d.message.length==0)\n                                                      {\n                                                          \n                                                          frappe.db.insert\n                                                             \n                                                            ({\n                                                                \n                                                                 \n                                                                      \"doctype\": \"Account\",\n                                                                      \"company\":\"Lamit\",\n                                                                      \"parent_account\":\"Accounts Receivable - LR\",\n                                                                      \"account_type\":\"Receivable\",\n                                                                      \"account_name\":frm.doc.customer_name\n                                                                    //   \"price_list_rate\":price_list_rate1\n                                                                      \n                                                            });\n                                                            \n                                                                 var child = cur_frm.add_child(\"accounts\");\n                                                                 frappe.model.set_value(child.doctype, child.name, \"company\",\"Lamit\");\n                                                                 frappe.model.set_value(child.doctype, child.name, \"account\",frm.doc.customer_name+\" \"+\"-\"+\" \"+\"LR\");\n                                                                //  frappe.model.set_value(child.doctype, child.name, \"debit_in_account_currency\",values.debit);\n                                                                 \n                                                                \n                                                                 cur_frm.refresh_field(\"accounts\");\n                                                          \n                                                      }\n                                                      \n                                                 \n                                                      \n                                                  }\n                                                }\n                                            })\n           \n        }\n        \n        \n    },\n    \n    \n    \n    \n    \n    \n    //-------------------------------------------------------------------------------------------------------------------------------\n\t\n// \tstate(frm)\n// \t{\n// \t   frm.set_value(\"district\",undefined)\n// \t   frm.set_value(\"customer_area\",undefined)\n// \t   frm.set_value(\"sale_district\",undefined)\n// \t   frm.set_value(\"sale_area\",undefined)\n// \t},\n\t\n// \tdistrict(frm)\n// \t{\n// \t   frm.set_value(\"customer_area\",undefined)\n// \t   frm.set_value(\"sale_district\",frm.doc.district)\n// \t   frm.set_value(\"sale_area\",undefined)\n// \t},\n\t\n// \tcustomer_area(frm)\n// \t{\n// \t   frm.set_value(\"sale_area\",frm.doc.customer_area)\n// \t},\n\t\n// \tsale_district(frm)\n// \t{\n// \t   frm.set_value(\"sale_area\",undefined)\n// \t},\n\n// \tfield_filters:function(frm)\n//     {\n//             // frm.set_query(\"district\", function() \n//             //     {\n//             //     return {\n//             //         \"filters\": \n//             //         {\n//             //             \"state\": frm.doc.state,\n//             //             // \"group_or_ledger\": \"Ledger\"\n//             //         }\n//             //     };\n//             // });\n            \n//             // frm.set_query(\"customer_area\", function() \n//             //     {\n//             //     return {\n//             //         \"filters\": \n//             //         {\n//             //             \"district\": frm.doc.district,\n//             //             // \"group_or_ledger\": \"Ledger\"\n//             //         }\n//             //     };\n//             // });\n\n//             //  frm.set_query(\"sale_district\", function() \n//             //     {\n//             //     return {\n//             //         \"filters\": \n//             //         {\n//             //             \"state\": frm.doc.state,\n//             //             // \"group_or_ledger\": \"Ledger\" \n//             //         }\n//             //     };\n//             // });\n            \n//             // frm.set_query(\"sale_area\", function() \n//             //     {\n//             //     return {\n//             //         \"filters\": \n//             //         {\n//             //             \"district\": frm.doc.sale_district,\n//             //             // \"group_or_ledger\": \"Ledger\"\n//             //         }\n//             //     };\n//             // });\n//         },\n\n\n\ncustomer_type:function(frm)\n\n{\n    if(frm.doc.customer_type==\"Company\")\n    {\n        frm.set_value(\"customer_group\",\"SuperStockist\")\n        \n        frm.set_value(\"default_price_list\",\"PTC\")\n    }\n    else if(frm.doc.customer_type==\"Individual\")\n    {\n        frm.set_value(\"default_price_list\",\"PTC\")\n    }\n},\n\n\nafter_save:function(frm)\n{\n    if(frm.doc.customer_type==\"Company\" ||frm.doc.customer_type==\"Individual\" )\n    {\n        if(frm.doc.address_line11)\n        {\n                                    frappe.call\n                                        ({\n                                                            method: \"frappe.client.get_list\",\n                                                            args: \n                                                            {\n                                                                doctype: \"Address\",\n                                                                filters: { 'name':frm.doc.customer_name+\"-\"+\"Billing\"},\n                                                                 fields:[\"address_line1\",\"city\",\"name\"],\n                                                            },\n                                                           \n                                                                callback: function(res)\n                                                                {\n                                                                    \n                                                                    if(res)\n                                                                    {\n                                                                        console.log(res,\"llllll\")\n                                                                        if(res.message.length==0)\n                                                                        {\n                                                                          if(frm.doc.gstin)\n                                                                          {\n                                                                            \n                                                                            frappe.db.insert\n                                                                          ({\n                                                                              \"doctype\": \"Address\",\n                                                                              \"address_title\":frm.doc.customer_name,\n                                                                              \"address_line1\":frm.doc.address_line11,\n                                                                              \"address_line2\":frm.doc.address_line22,\n                                                                              \"city\":frm.doc.city,\n                                                                              \"pincode\":frm.doc.pin_code,\n                                                                              \"phone\":frm.doc.phone,\n                                                                              \"email_id\":frm.doc.email,\n                                                                              \"tax_category\":frm.doc.tax_category1,\n                                                                              \"gstin\":frm.doc.gstin,\n                                                                              \"gst_category\":\"Registered Regular\",\n                                                                              \"gst_state\":\"Kerala\",\n                                                                              \"state\":\"Kerala\",\n                                                                              \"country\":\"India\",\n                                                                              'links':[\n                                                                                {\n                                                                                    'link_doctype':\"Customer\",                                                                                    \n                                                                                    \"link_name\":frm.doc.name\n                                                                                }\n                                                                            ],\n                                                                              \n                                                                              \n                                                                                  \n                                                                                                            \n                                                                              });\n                                                                              \n                                                                              update_address=\"false\"\n                                                                              \n                                                                          }\n                                                                          \n                                                                          else\n                                                                          {\n                                                                              console.log(\"KKKKKLLLLLLLLLLLL\")\n                                                                              \n                                                                              frappe.db.insert\n                                                                          ({\n                                                                              \"doctype\": \"Address\",\n                                                                              \"address_title\":frm.doc.customer_name,\n                                                                              \"address_line1\":frm.doc.address_line11,\n                                                                              \"address_line2\":frm.doc.address_line22,\n                                                                              \"city\":frm.doc.city,\n                                                                              \"pincode\":frm.doc.pin_code,\n                                                                              \"phone\":frm.doc.phone,\n                                                                              \"email_id\":frm.doc.email,\n                                                                              \"tax_category\":frm.doc.tax_category1,\n                                                                              \"gstin\":frm.doc.gstin,\n                                                                              \"state\":\"Kerala\",\n                                                                              \"country\":\"India\",\n                                                                              'links':[\n                                                                                {\n                                                                                    'link_doctype':\"Customer\",                                                                                   \n                                                                                    \"link_name\":frm.doc.name\n                                                                                }\n                                                                            ],\n                                                                              \n                                                                              \n                                                                                  \n                                                                                                            \n                                                                              });\n                                                                              \n                                                                          }\n                                                                            \n                                                                        }\n                                                                        \n                                                                        \n                                                                        else\n                                                                            {\n                                                                                if(update_address==\"true\")\n                                                                                {\n                                                                                    \n                                                                                        frappe.db.set_value(\"Address\",frm.doc.customer_name+\"-\"+\"Billing\",\n                                                                                        {\n                                                                                              \"address_line1\": frm.doc.address_line11,\n                                                                                              \"address_line2\":frm.doc.address_line22,\n                                                                                              \"city\":frm.doc.city,\n                                                                                              \"pincode\":frm.doc.pin_code,\n                                                                                              \n                                                                                              \"state\":\"Kerala\",\n                                                                                             \n                                                                                              \"tax_category\":frm.doc.tax_category1,\n                                                                                              \"email_id\":frm.doc.email,\n                                                                                              \"phone\":frm.doc.phone\n                                                                                        })\n                                                                                    \n                                                                                    \n                                                                                }\n                                                                                \n                                                                            }\n                                                                    }\n                                                                   \n                                                                }\n                                             })\n\n        }\n            \n            \n            \n        }\n    },\n    \n     address_line1:function(frm)\n        {\n            update_address=\"true\"  \n            console.log(update_address)\n        },\n        address_line2:function(frm)\n        {\n            update_address=\"true\"  \n        },\n        email:function(frm)\n        {\n            update_address=\"true\"  \n        },\n        phone:function(frm)\n        {\n            update_address=\"true\" \n            \n        },\n        pin_code:function(frm)\n        {\n            update_address=\"true\"  \n        },\n        city:function(frm)\n        {\n            update_address=\"true\"  \n        },\n    \n    \ntax_category1:function(frm)\n{\n    frm.set_value(\"tax_category\",frm.doc.tax_category1)\n},\n\n\ninternal_customer:function(frm)\n{\n    if(frm.doc.internal_customer==1)\n    {\n        frm.set_value(\"default_price_list\",\"PTS\")\n        \n    }\n    else\n    {\n        frm.set_value(\"default_price_list\",\"PTC\")\n        \n    }\n    \n}\n\n\n\n\n\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Assign User Permission",
  "enabled": 1,
  "modified": "2023-03-23 09:00:56.205023",
  "module": null,
  "name": "Assign User Permission",
  "script": "frappe.ui.form.on('Assign User Permission',\n{\n// \trefresh(frm)\n// \t{\n// \t\t// your code here\n\t\t \n// \t}\n\t\n\tafter_save(frm)\n\t{\n\t   // frappe.call\n    //           ({\n                                                                                                \n    //                             method: \"frappe.client.get_list\",\n    //                             args: \n    //                                 {\n    //                                     doctype: \"User Permission\",\n                                        \n    //                                     filters: { 'user':frm.doc.email,'for_value':frm.doc.company},\n                                        \n    //                                     'fields': ['name','user','for_value','allow'],\n    //                                 },\n    //                                     callback: function(res)\n    //                                     {\n    //                                         if(res)\n    //                                         {\n    //                                             if(res.message.length==0)\n    //                                             {\n    //                                             // if(res.message.length==0)\n    //                                             // {\n    //                                                 console.log(res.message.length)\n    //                                             // }\n                                                \n    //                                             frappe.db.insert({\n    //                                                       \"doctype\": \"User Permission\",\n    //                                                       \"user\": frm.doc.email,\n    //                                                       \"allow\": \"Super Stockist\",\n    //                                                       \"for_value\":frm.doc.company\n                                                           \n    //                                                      });\n    //                                             }\n                                           \n    //                                         }\n    //                                     }\n    //             });\n                \n                \n                \n                \n                \n         var obj={}\n        obj.notification= {\n                                            \"body\":\"You have a access to the company\"+\" \"+frm.doc.company+\" \"+\"is Enabled\",\n                                            \"title\":\"Company Access Enabled\"\n                          }\n                          \n                          \n            // var email=frm.doc.assigned_to             \n            \n            \n            \n            if(frm.doc.company) \n            {\n                console.log(frm.doc.company)\n                \n                          \n\n    \t          frappe.call\n                  ({\n                                    method: \"frappe.client.get_list\",\n                                    args: \n                                        {\n                                            doctype: \"User\",\n                                            \n                                            filters: {'name':frm.doc.email},\n                                            \n                                            'fields': ['fcm_token'],\n                                        },\n                                            callback: function(res)\n                                            {\n                                                if(res.message[0])\n                                                { \n                                                    obj.to=res.message[0].fcm_token\n                                                }\n                                            }\n                    })\n                    .then(function(doc)\n                    {\n                              var serverKey=\"AAAA_GkVXHc:APA91bHSdFXpQWyGyPdNFOiJdeNnwwao9Wgw9RAhR5SA2dtcUOx7CLEFWN9VY3YIm65P5GeC6IW4MXWKOsF26DXjKbgBFplj7Xo_y5ZJ8_2Zc76wdoplB-OWTZOEU8_ICxjlZZ3Xnc8e\"\n                                $.ajax({\n                                          type: 'POST',\n                                          url: 'https://fcm.googleapis.com/fcm/send',\n                                          headers:\n                                          {\n                                            'Content-Type': 'application/json',\n                                            'Authorization': 'key='+serverKey\n                                          },\n                                          data: JSON.stringify(obj),\n                                          success: function(response)\n                                          {\n                                                console.log(response);\n                                          },\n                                      });   \n                    })\n        \n                \n        \n            }\n                \n                \n                \n                \n                \n                \n    \n    \n    \n    \n    \n    \n    \n            \n\t},\n\t\n\trefresh(frm)\n\t{\n\t     $('li').removeClass(\"disabled\");\n\t    \n\t    if(frm.doc.employee_name!==undefined)\n\t    {\n\t       frm.set_df_property('employee_name',  'read_only', 1); \n\t       \n\t    }\n\t    \n\t    if(frm.doc.email!==undefined)\n\t    {\n\t   \n\t        frm.set_df_property('email',  'read_only',  1);\n\t        \n\t    }\n\t    \n\t   // if(frm.doc.company!==undefined)\n\t   // {\n\t   \n\t   //      frm.set_df_property('company',  'read_only', 1);\n\t  \n\t   // }\n\t    \n\t    \n\t    \n\t    \n\t    \n\t    \n\t    \n\t    \n\t    frm.add_custom_button('Remove Permission', () => \n                 {\n                   frappe.call\n                    ({ \n                        method: \"frappe.client.get_list\",\n                                    args: \n                                    {\n                                        doctype: \"User Permission\",\n                                        \n                                        filters: { 'user':frm.doc.email,'for_value':frm.doc.company},\n                                        \n                                        'fields': ['name','user','for_value','allow'],\n                                    },\n                                        callback: function(res)\n                                        {\n                                            if(res)\n                                            {\n                                                if(res.message.length>0)\n                                                {\n                                                    console.log(res.message[0].name)\n                                                    //  frappe.delete_doc(\"User Permission\",)\n                                                     frappe.db.delete_doc('User Permission',res.message[0].name); \n                                                      msgprint(\"You are Successfully Removed User Permission\")\n                                                    \n                                                }\n                                                \n                                                else\n                                                {\n                                                    msgprint(\"You are already removed User Permission\")\n                                                }\n                                                \n                                                \n                                                \n                                                console.log(res.message)\n                                            }\n                                        }\n                                        \n                     \n                 })\n                   \n                 })\n                 \n                 frm.change_custom_button_type('Remove Permission', null, 'danger')\n\t            \n\t}\n})\n\n ",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2023-05-31 17:00:24.422997",
  "module": null,
  "name": "Payment Entry",
  "script": "var allowed_companies=[];\n\nvar purchase_no;\n\nfrappe.ui.form.on('Payment Entry',\n{\n\trefresh(frm) \n\t{\n\t     $('li').removeClass(\"disabled\");\n\t    frm.trigger(\"company_filter\");\n\t},\n\t\n\tcompany:function(frm)\n    {\n        frm.set_value(\"super_stockist\",frm.doc.company)  ;\n    },\n    \n    company_filter:function(frm)\n    {\n                        frappe.call\n                        ({\n                            method: \"frappe.client.get_list\",\n                            args: \n                            {\n                                doctype: \"User Permission\",\n                                fields: [\"for_value\"],\n                                filters:\n                                {\n                                    \"allow\":\"Super Stockist\",\n                                    \"user\":frappe.session.user,\n                                },\n                               \n                            },\n                            callback:function(r) \n                            {\n                                if(r.message[0])\n                                {\n                                     $.each(r.message,function(i,v)\n                                     {\n                                         allowed_companies[i]=v.for_value;\n                                     });\n                                }\n                            }\n                        })\n                        .then(function(doc)\n                        {\n                             frm.set_query(\"company\", function()\n                                \t  {\n                                            return {\n                                                \"filters\": {\n                                                    \"is_group\":0,\n                                                    \"name\":[\"in\",allowed_companies]\n                                                }\n                                            };\n                                      });\n                        })    \n    },\n    \n    after_save(frm)\n    {\n        allowed_companies=[];\n        \n       \n        \n        \n       \n        \n            \n        \n        \n       \n        \n        \n    },\n    \n    onload(frm)\n    {\n        console.log(\"frm\",frm)\n        \n        if (frm.is_new())\n        {\n          frm.set_value(\"super_stockist\",frm.doc.company)\n        //   console.log(frm.doc.party_type)\n          \n          if(frm.doc.party_type==\"Customer\")\n          {\n            //   console.log(frm.doc.party_type,\"CUSTOMER\")\n              frappe.call\n                        ({\n                            method: \"frappe.client.get_list\",\n                            args: \n                            {\n                                doctype:\"Customer\",\n                                filters:{\n                                            'name':frm.doc.party,\n                                        },\n                                fields:['name',\"customer_area\"],\n                            },\n                            callback:function(r) \n                            {\n                                if(r.message[0])\n                                {\n                                    \n                                    console.log(r.message[0].customer_area)\n                                    frm.set_value(\"sale_area\",r.message[0].customer_area)\n                                    \n                                }\n                            }\n                        })\n              \n          }\n          \n          \n          if(frm.doc.company==\"Lamit\")\n          {\n              \n              if(frm.doc.party_type==\"Customer\")\n              {\n                  if(frm.doc.references.length>0)\n                  {\n                      var order=frm.doc.references[0].reference_doctype\n                      var order_id=frm.doc.references[0].reference_name\n                    //   console.log(order)\n                    //   console.log(order_id)\n                      if(order==\"Sales Order\")\n                          {\n                              frappe.call\n        \t                 ({\n                                        method: 'frappe.client.get',\n                                        args:\n                                        {\n                                            doctype:'Sales Order',\n                                    \t   \tfilters:\n                                    \t   \t{\n                                    \t   \t    \n                                                     \"name\":frm.doc.order_id\n                                                     \n                                                     \n                                    \t    }  ,\n                                    \t   // fields:[\"tax_category\",\"name\",\"title\"]\n                                    \t},\n                                    \t\n                                        callback: function(r)\n                                        {\n                                            if(r)\n                                            {\n                                                console.log(r.message,\"LLLLLLLL\")\n                                                \n                                                purchase_no=r.message.po_no\n                                                \n                                                if(r.message.po_no)\n                                                {\n                                                    frm.set_value(\"purchase_order\",purchase_no)\n                                                }\n                                                \n                                            }\n                                        }\n        \t                 })\n                              \n                          }\n                  }\n              }\n              \n          }\n          \n          \n        }\n        \n        \n        \n        \n        \n        \n        console.log(frm.doc.sale_area)\n        \n    },\n    \n    \n    on_submit(frm)\n    {\n        // if(frm.doc.party_type==\"Supplier\")\n        // {\n        //     if(frm.doc.party==\"Lamit\")\n        //     {\n        //         if(frm.doc.references.length>0)\n        //         {\n                    \n        //             console.log(frm.doc.references,\"ppppp\")\n        //             var t1=frm.doc.references[0].reference_doctype\n        //             var t2=frm.doc.references[0].reference_name\n                    \n                    \n        //             frappe.db.set_value(t1, t2, 'status1', 'Advance Paid')\n\n                    \n                    \n                    \n                    \n        //         }\n        //     }\n        // }\n        \n        \n       //SHINIL -------------------------------------------\n        \n        \n        if(frm.doc.purchase_order)\n        {\n            \n            frappe.db.set_value('Purchase Order',frm.doc.purchase_order, 'payment_created',1)\n            // console.log(\"SUCCESS\")\n            \n        }\n        \n        \n        \n        //------------------------------------------------------------\n        \n        \n        if(frm.doc.company==\"Lamit\")\n        {\n            \n            if(frm.doc.references.length>0)\n            {\n        \n                var t1=frm.doc.references[0].reference_doctype\n                var t2=frm.doc.references[0].reference_name\n                \n                if(t1==\"Sales Order\")\n                {\n                \n                \n                \n                 var obj={}\n                obj.notification= {\n                                                    \"body\":\"New Payment Entry Amount\"+\" \"+frm.doc.paid_amount+\" \"+\"is submitted againt\"+\" \"+t1+\" \"+t2+\" \"+\"on\"+\" \"+frm.doc.posting_date,\n                                                    \"title\":\"Payment Updated Successfully\"\n                                  }\n                                  \n                                  \n                    // var email=frm.doc.assigned_to             \n                    \n                    \n                    \n                    \n                        if(frm.doc.sale_area!=undefined)\n                        {\n                            \n                            frappe.call\n                                ({\n                                    method: \"frappe.client.get_list\",\n                                    args: \n                                    {\n                                        doctype:\"Assign Sale Area\",\n                                        filters:{\n                                                    'name':frm.doc.sale_area,\n                                                },\n                                        fields:['name',\"sales_officer_email\"],\n                                    },\n                                    callback:function(r) \n                                    {\n                                        if(r.message[0])\n                                        {\n                                            \n                                            console.log(r.message[0].sales_officer_email)\n                                            if(r.message[0].sales_officer_email!=undefined)\n                                            {\n                                                \n                                                \n                                                frappe.call\n                                                      ({\n                                                                        method: \"frappe.client.get_list\",\n                                                                        args: \n                                                                            {\n                                                                                doctype: \"User\",\n                                                                                \n                                                                                filters: {'name':r.message[0].sales_officer_email},\n                                                                                \n                                                                                'fields': ['fcm_token'],\n                                                                            },\n                                                                                callback: function(res)\n                                                                                {\n                                                                                    if(res.message[0])\n                                                                                    { \n                                                                                        obj.to=res.message[0].fcm_token\n                                                                                    }\n                                                                                }\n                                                        })\n                                                        .then(function(doc)\n                                                        {\n                                                                  var serverKey=\"AAAA7i72nSA:APA91bFVkyguvpCvIHM6IUZwqzLrqK8ZWjlBhSJ6MupORQbLJKAGIeaLhvCjK1xQAKrRpGl-J3qCYJ_GULF6w36gMtXmT5YA3CdoeE6AJtcPA7ApC90Ozi4czj0C1BXj1vWG1Vl0cuIq\"\n                                                                    $.ajax({\n                                                                              type: 'POST',\n                                                                              url: 'https://fcm.googleapis.com/fcm/send',\n                                                                              headers:\n                                                                              {\n                                                                                'Content-Type': 'application/json',\n                                                                                'Authorization': 'key='+serverKey\n                                                                              },\n                                                                              data: JSON.stringify(obj),\n                                                                              success: function(response)\n                                                                              {\n                                                                                    console.log(response);\n                                                                              },\n                                                                          });   \n                                                        })\n                                                \n                                                \n                                                \n                                                \n                                            }\n                                            \n                                            \n                                        }\n                                    }\n                                })\n                            \n                            \n                        \n                                  \n        \n            \t       //   frappe.call\n                    //       ({\n                    //                         method: \"frappe.client.get_list\",\n                    //                         args: \n                    //                             {\n                    //                                 doctype: \"User\",\n                                                    \n                    //                                 filters: {'name':frm.doc.assigned_to},\n                                                    \n                    //                                 'fields': ['fcm_token'],\n                    //                             },\n                    //                                 callback: function(res)\n                    //                                 {\n                    //                                     if(res.message[0])\n                    //                                     { \n                    //                                         obj.to=res.message[0].fcm_token\n                    //                                     }\n                    //                                 }\n                    //         })\n                    //         .then(function(doc)\n                    //         {\n                    //                   var serverKey=\"AAAA_GkVXHc:APA91bHSdFXpQWyGyPdNFOiJdeNnwwao9Wgw9RAhR5SA2dtcUOx7CLEFWN9VY3YIm65P5GeC6IW4MXWKOsF26DXjKbgBFplj7Xo_y5ZJ8_2Zc76wdoplB-OWTZOEU8_ICxjlZZ3Xnc8e\"\n                    //                     $.ajax({\n                    //                               type: 'POST',\n                    //                               url: 'https://fcm.googleapis.com/fcm/send',\n                    //                               headers:\n                    //                               {\n                    //                                 'Content-Type': 'application/json',\n                    //                                 'Authorization': 'key='+serverKey\n                    //                               },\n                    //                               data: JSON.stringify(obj),\n                    //                               success: function(response)\n                    //                               {\n                    //                                     console.log(response);\n                    //                               },\n                    //                           });   \n                    //         })\n                \n                        }\n                        \n                }\n        \n            }\n        }\n        \n        \n        \n        \n        \n        \n        \n        \n        \n    },\n    \n    \n    before_cancel(frm)\n    {\n        \n        if(frm.doc.party_type==\"Supplier\")\n        {\n            if(frm.doc.party==\"Lamit\")\n            {\n                if(frm.doc.references.length>0)\n                {\n                    \n                    console.log(frm.doc.references,\"ppppp\")\n                    var j1=frm.doc.references[0].reference_doctype\n                    var j2=frm.doc.references[0].reference_name\n                    \n                    \n                    frappe.db.set_value(j1, j2, 'status1',undefined)\n\n                    \n                    \n                    \n                    \n                }\n            }\n        }\n        \n        \n    }\n    \n    \n    \n    \n    \n    \n    \n    \n});\n\n\n\n\n//frappe.ui.form.on('Payment Entry',\n// {\n// \tonload(frm) \n// \t{\n// \t      frm.trigger(\"sales_team_filter\");\n\t    \n\t    \n// \t\tif(frm.doc.references !=undefined)\n// \t\t{\n// \t\t   if(frm.doc.references[0].reference_doctype==\"Sales Invoice\")\n// \t\t   {\n// \t\t        frm.set_value(\"sales_invoice\",frm.doc.references[0].reference_name);\n\t\t        \n// \t\t                frappe.call\n//                         ({\n//                             method: \"frappe.client.get_list\",\n//                             args: \n//                             {\n//                                 doctype:\"Sales Invoice\",\n//                                 filters:{\n//                                             'name':frm.doc.references[0].reference_name,\n//                                         },\n//                                 fields:['sales_order',\"sales_executive\",\"area_sales_manager\",\"marketing_head\",\"marketing_team_member\",\"shop\",\"engineer\",\"contractor\"],\n//                             },\n//                             callback:function(r) \n//                             {\n//                                 if(r.message[0])\n//                                 {\n//                                     frm.set_value(\"sales_order\",r.message[0].sales_order);\n//                                     frm.set_value(\"sales_executive\",r.message[0].sales_executive);\n//                                     frm.set_value(\"area_sales_manager\",r.message[0].area_sales_manager);\n//                                     frm.set_value(\"marketing_head\",r.message[0].marketing_head);\n//                                     frm.set_value(\"marketing_team_member\",r.message[0].marketing_team_member);\n//                                     frm.set_value(\"shop\",r.message[0].shop);\n//                                     frm.set_value(\"engineer\",r.message[0].engineer);\n//                                     frm.set_value(\"contractor\",r.message[0].contractor);\n//                                 }\n//                             }\n//                         });\n                        \n//                                                                                     frappe.call\n//                                                                                     ({\n//                                                                                         \"method\":\"frappe.client.get_list\",\n//                                                                                         \"args\":\n//                                                                                             {\n//                                                                                             \"doctype\":\"Sales Invoice Item\",\n//                                                                                             \"filters\":{\"parent\":frm.doc.references[0].reference_name},\n//                                                                                             'parent': 'Sales Invoice',\n//                                                                                             \"fields\":[\"item_code\",\"item_group\",\"incentive\"]\n//                                                                                             },\n//                                                                                         callback:function(p)\n//                                                                                         {\n//                                                                                             if(p.message.length>0)\n//                                                                                             {\n//                                                                                                 frm.set_value(\"item_group\",p.message[0].item_group)\n//                                                                                                 frm.set_value(\"incentive\",p.message[0].incentive)\n                                                                                                \n//                                                                                                 // $.each(p.message,function(i,v)\n//                                                                                                 // {\n//                                                                                                 //     var childTable = cur_frm.add_child(\"item_incentive_table\");\n//                                                                                                 //     childTable.item=v.item_code;\n//                                                                                                 //     childTable.item_group=v.item_group\n//                                                                                                 //     childTable.incentive=v.incentive\n//                                                                                                 //     cur_frm.refresh_fields(\"item_incentive_table\");\n//                                                                                                 // })\n//                                                                                             }\n//                                                                                         }\n//                                                                                     })\n                \n\t   \n// \t\t   }\n// \t\t   else if(frm.doc.references[0].reference_doctype==\"Sales Order\")\n// \t\t   {\n// \t\t       frm.set_value(\"sales_order\",frm.doc.references[0].reference_name);\n// \t\t   }\n// \t\t}\n\t\t\n// \t},\n\t\n//     sales_team_filter(frm)\n// \t{\n// \t    frm.set_query(\"sales_executive\", function() \n// \t\t{\n//             return {\n//             \"filters\": {\n//                 \"designation\":\"Sales Officer\",\n//                 // \"group_or_ledger\": \"Ledger\"\n//             }\n//         };\n//         });\n        \n//         frm.set_query(\"area_sales_manager\", function() \n// \t\t{\n//             return {\n//             \"filters\": {\n//                 \"designation\":\"Area Sales Manager\",\n//                 // \"group_or_ledger\": \"Ledger\"\n//                 }\n//             };\n//         });\n        \n//         frm.set_query(\"marketing_head\", function() \n// \t\t{\n//             return {\n//             \"filters\": {\n//                 \"designation\":\"Marketing Supervisor\",\n//                 // \"group_or_ledger\": \"Ledger\"\n//             }\n//             };\n//         });\n        \n//         frm.set_query(\"marketing_team_member\", function() \n// \t\t{\n//             return {\n//             \"filters\": {\n//                 \"designation\":\"Marketing Officer\",\n//                 // \"group_or_ledger\": \"Ledger\"\n//                 }\n//             };\n//         });\n\t    \n// \t}\n\t\n\t\n// });",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet",
  "enabled": 0,
  "modified": "2023-03-23 09:00:56.303831",
  "module": null,
  "name": "Timesheet List1",
  "script": "frappe.listview_settings['Timesheet'] = \n{\n\trefresh: function(listview) \n    {\n        $(`.list-row-col:contains(Title)`).hide();\n        $(`.list-row-col:contains(employee_name)`).hide();\n        // $(`.list-row-col:contains(Draft)`).hide();\n        // $(`.list-row-col:contains(Submitted)`).hide();\n        //       hide_name_column: true;\n        \t //  \t$(\"div[data-fieldname = name]\").hide();\n    },\n\n    // \thide_name_column: true\n// \thide_docstatus_column:true;\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Task",
  "enabled": 0,
  "modified": "2023-06-13 10:31:49.241149",
  "module": null,
  "name": "Task List",
  "script": "var l;\n\nvar y;\nfrappe.listview_settings['Task'] = {\n\tonload: function(me) {\n\t    \n\t    \n\t     frappe.call({                        \n\t\t\t\tmethod: \"frappe.client.get_list\", \n\t\t\t\targs: { \n\t\t\t\t\t    doctype: \"Employee\",\n\t\t\t\t\t    fields:[\"name\",\"user_id\",\"designation\"],\n\t\t\t\t\t\tfilters: {user_id:frappe.session.user},\n\t\t\t\t\t  },\n\t\t\t\t callback: function(r) \n\t\t\t\t {\n\t\t\t\t     if(r)\n\t\t\t\t     {\n\t\t\t\t           y=r.message[0].name\n\t\t\t\t     }\n\t\t\t\t }\n\t    })\n\t    \n\t    \n\t    console.log(\"KKKKKKKK\",y)\n\t   // console.log(frappe.datetime.nowdate(),\"kkkk\")\n\t    frappe.route_options = {\n\t\t\t                \"due_date\": frappe.datetime.nowdate(),\n\t\t\t             //   \"assign\": y,\n\t\t\t                \"assigned_to\": frappe.session.user\n\t\t\t\t         \t}\n\t    \n\t   // \tfrappe.route_options = {\n\t\t\t //               \"email\": frappe.session.user,\n\t\t\t\t//          \t}\n\t    \n\t   //if(frappe.user.has_role(\"Sales Officer\"))\n\t   // {\n\t    \n\t   // me.$page.find(`div[data-fieldname='assigned_to']`).addClass('hide');\n\t   // } \n\t    \n\t   // console.log(frappe.session.user)\n\t    \n\t   \n// \t\t\t\t         console.log(y,\"llllllllllllllllllll\")\n\t\t\t\t         \n// \t\t\t\t        //  console.log(r)\n// \t\t\t\t         \tfrappe.route_options = {\n// \t\t\t                \"assign\": \"MANU-976\",\n// \t\t\t\t         \t}\n\t\t\t\t         \t\n//  \t\t                \t// \"status\": \"Open\"\n \t\t                \t\n//  \t\t                \tl=y;\n \t\t                \t\n// \t\t\t\t     }\n\t\t\t\t     \n// \t\t\t\t     console.log(l,\"-----------\")\n\t\t\t\t     \n\t\t\t\t\t    \n// \t\t\t\t }\n// \t\t });\n\t\t \n\t\t \n\t    \n\t    \n\t   // if(frappe.user.has_role(\"Sales Officer\"))\n\t   // {\n\t    \n\t   // me.$page.find(`div[data-fieldname='assign']`).addClass('hide');\n\t   // }\n      \n\t   \n\n\t    \n// \t    console.log(frappe.session.user)\n// \t\tfrappe.route_options = {\n// \t\t\t\"assigned_to\": frappe.session.user,\n// // \t\t\t\"status\": \"Open\"\n// \t\t};\n\t}\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 0,
  "modified": "2023-03-23 09:00:56.378986",
  "module": null,
  "name": "Employee List",
  "script": "frappe.listview_settings['Employee'] = {\n\tonload: function(frm) \n\t{\n\t    \n\t    \n\t    console.log(frappe.session.user)\n\t    \n\t   frappe.route_options = {\n\t\t\t                    \"user_id\": frappe.session.user,\n\t\t\t\t         \t  }\n\t   // if(frappe.user.has_role(\"Sales Officer\"))\n\t   // {\n\t    \n\t   // frm.$page.find(`div[data-fieldname='user_id']`).addClass('hide');\n\t   // }\n\t    \n\t    \n// \t    frappe.call({                        \n// \t\t\t\tmethod: \"frappe.client.get_list\", \n// \t\t\t\targs: { \n// \t\t\t\t\t    doctype: \"Employee\",\n// \t\t\t\t\t    fields:[\"name\",\"user_id\",\"designation\",\"employee_number\"],\n// \t\t\t\t\t\tfilters: {user_id:frappe.session.user},\n// \t\t\t\t\t  },\n// \t\t\t\t callback: function(r) \n// \t\t\t\t {\n// \t\t\t\t     if(r)\n\t\t\t\t     \n// \t\t\t\t     {\n\t\t\t\t         \n// \t\t\t\t         console.log(r)\n// \t\t\t\t         var y=r.message[0].user_id\n// \t\t\t\t         console.log(y)\n\t\t\t\t         \n// \t\t\t\t        //  console.log(r)\n// \t\t\t\t         \tfrappe.route_options = {\n// \t\t\t                \"employee_number\": y,\n// \t\t\t\t         \t}\n\t\t\t\t         \t\n//  \t\t                \t// \"status\": \"Open\"\n// \t\t\t\t     }\n\t\t\t\t     \n\t\t\t\t\t    \n// \t\t\t\t }\n// \t\t });\n\t    \n\t    \n\t}\n}",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 0,
  "modified": "2023-03-23 09:00:56.416615",
  "module": null,
  "name": "Employee",
  "script": "frappe.listview_settings['Employee'] = {\n//  hide_name_column: true,\n \n refresh: function(listview) {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t}\n    \n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Target",
  "enabled": 1,
  "modified": "2023-05-02 12:04:31.251765",
  "module": null,
  "name": "Target",
  "script": "frappe.ui.form.on('Target', \n{\n    onload(frm)\n    {\n         frm.set_query(\"employee\", function() \n        {\n        return {\n            \"filters\": \n            [\n                [\"designation\",\"=\",frm.doc.designation],\n                [\"company\",\"=\",\"Lamit\"]\n                //  [\"company\",\"=\", \"yourcompany\"]\n                // \"group_or_ledger\": \"Ledger\"\n            ]\n        };\n    });  \n    },\n    \n    refresh(frm)\n    {\n         $('li').removeClass(\"disabled\");  \n    },\n    \n\tbefore_save(frm) \n\t{\n\t   // var date=frm.doc.effective_from;\n\t   // var newdate=new Date(date);\n\t   // var effective_to=frappe.datetime.add_days(newdate,-1);\n\t   \n\t    var newdate=new Date(frm.doc.effective_from);\n                        var year=newdate.getFullYear();\n                        var month=newdate.getMonth();\n                        var effective_to=frappe.datetime.add_days(newdate,-1);\n                        var date_today=frappe.datetime.now_datetime()\n                        var active_previous=0\n                        var active_new=0\n                            \n                        const month1 = [\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n                        const month2 =month1[month];\n                        \n                        if(date_today.split(\" \")[0]==frm.doc.effective_from)\n                        {\n                             active_new=1  \n                             active_previous=0\n                        }\n                        else\n                        {\n                           active_new=0 \n                           active_previous=1\n                        }\n\t   \n\t   \n\t                                frappe.call\n                                    ({\n                                        method: \"frappe.client.get_list\",\n                                        args: \n                                        {\n                                            doctype: \"Target\",\n                                            filters:{\n                                                \"employee\":frm.doc.employee,\n                                                \"active\":1\n                                                    },\n                                            fields: ['name'],\n                                        },\n                                        callback:function(s) \n                                        {\n                                          if(s.message[0])\n                                          {\n                                              if(s.message[0].name!=frm.doc.name)\n                                              {\n                                                      if(active_previous==0)\n                                                      {\n                                                            frappe.db.set_value(\"Target\",s.message[0].name,{\"active\":0,\"effective_to\":effective_to,\"deactivate_date\":date_today});\n                                                            frm.set_value(\"active\",1)\n                                                      }\n                                                      else\n                                                      {\n                                                            frappe.db.set_value(\"Target\",s.message[0].name,{\"deactivate_date\":frm.doc.effective_from});\n                                                            frm.set_value(\"active\",0)\n                                                      }\n                                                    \n                                                     frappe.call\n                            \t                    ({\n                                                        \"method\":\"release_incentive\",\n                                                        \"args\":{\n                                                                     employee:frm.doc.employee,\n                                                                },\n                                                    });\n                                              }\n                                          }\n                                          else\n                                          {\n                                              if(active_new==1)\n                                              {\n                                                  frm.set_value(\"active\",1)\n                                              }\n                                              else\n                                              {\n                                                  frm.set_value(\"active\",0)\n                                              }\n                                          }\n                                        }\n                                    });\t\n\n                     \n\n}\n\n});\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Incentive Slab",
  "enabled": 1,
  "modified": "2023-03-23 10:31:19.548260",
  "module": null,
  "name": "Incentive Slab",
  "script": "var new_doc=\" \"\n\nfrappe.ui.form.on('Incentive Slab', \n{\n    onload(frm)\n    {\n        if(frm.doc.effective_from)\n        {\n            new_doc=\"false\"\n            frm.set_df_property(\"effective_from\",\"read_only\",1)  \n        }\n        else\n        {\n            new_doc=\"true\"\n            frm.set_df_property(\"effective_from\",\"read_only\",0)  \n        }\n    },\n    \n\tbefore_save(frm) \n\t{\n\t                    var active1\n\t                \tvar newdate=new Date(frm.doc.effective_from);\n\t                \tvar deactivate_date=frappe.datetime.add_days(newdate,-1);\n                        var date_today=frappe.datetime.now_datetime();\n\n                        if(date_today.split(\" \")[0]==frm.doc.effective_from)\n                        {\n                            active1=1\n                        }\n                        else\n                        {\n                            if(new_doc==\"true\")\n                            {\n                                active1=0\n                            }\n                            else\n                            {\n                                active1=2\n                            }\n                        }\n                                    frappe.call\n                                    ({\n                                        method: \"frappe.client.get_list\",\n                                        args: \n                                        {\n                                            doctype: \"Incentive Slab\",\n                                            filters:{\n                                                \"designation\":frm.doc.designation,\n                                                \"active\":1\n                                                    },\n                                            fields: ['name'],\n                                        },\n                                        callback:function(s) \n                                        {\n                                          if(s.message[0])\n                                          {\n                                              if(frm.doc.name != s.message[0].name)\n                                              {\n                                                  \n                                                  if(active1==1)\n                                                  {\n                                                        frappe.db.set_value(\"Incentive Slab\",s.message[0].name,{\"active\":0,\"deactivate_date\":deactivate_date,\"effective_to\":deactivate_date});\n                                                        frm.set_value(\"active\",1)\n                                                  }\n                                                  else\n                                                  {\n                                                      if(active1 !=2)\n                                                      {\n                                                        frappe.db.set_value(\"Incentive Slab\",s.message[0].name,{\"deactivate_date\":frm.doc.effective_from});\n                                                        frm.set_value(\"active\",0)\n                                                      }\n                                                  }\n                                              }\n                                              else\n                                              {\n                                                  if(active1==1)\n                                                  {\n                                                      frm.set_value(\"active\",1)\n                                                  }\n                                                  else\n                                                  {\n                                                      if(active1 !=2)\n                                                      {\n                                                           frm.set_value(\"active\",0)\n                                                      }\n                                                  }\n                                              }\n                                          }\n                                          else\n                                          {\n                                              if(active1==1)\n                                              {\n                                                  frm.set_value(\"active\",1)\n                                              }\n                                              else\n                                              {\n                                                   if(active1 !=2)\n                                                   {\n                                                        frm.set_value(\"active\",0)\n                                                   }\n                                              }\n                                          }\n                                        }\n                                    })\n\t},\n\t\n\tafter_save(frm)\n\t{\n\t    frm.set_df_property(\"effective_from\",\"read_only\",1)  \n\t},\n});\n\nfrappe.ui.form.on('Incentive First Slab', \n{\n    slab:function(frm,cdt,cdn) \n\t{\n\t    var d=locals [cdt][cdn]\n\t    \n\t    if(d.slab !=undefined)\n\t    {\n\t        if(d.slab.length>0)\n\t        {\n\t            var trimmed_value=d.slab.trim()\n\t            if(trimmed_value.includes(\">\")&&trimmed_value.includes(\"=\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\">\")[1].split(\"=\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\">=\")\n\t            }\n\t            else if(trimmed_value.includes(\"<\")&&trimmed_value.includes(\"=\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"<\")[1].split(\"=\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"<=\")\n\t            }\n\t            else if(trimmed_value.includes(\">\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\">\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\">\")\n\t            }\n\t            else if(trimmed_value.includes(\"<\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"<\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"<\")\n\t            }\n\t            else if(trimmed_value.includes(\"==\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"=\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"==\")\n\t            }\n\t            else if(trimmed_value.includes(\"-\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"-\")[0].trim())\n\t                frappe.model.set_value(cdt,cdn,\"number2\",(d.slab).split(\"-\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"-\")\n\t            }\n\t            \n\t            \n\t            \n\t           // if((d.incentive).includes(\"%\"))\n\t           // {\n\t           //     if(((d.incentive).split(\"%\")[0]).includes(\" \"))\n\t           //     {\n\t           //          frappe.model.set_value(cdt,cdn,\"incentive_value\",((d.incentive).split(\"%\")[0]).trim())\n\t           //     }\n\t           //     else\n\t           //     {\n\t           //         frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).split(\"%\")[0])\n\t           //     }\n\t                    \n\t           //         frappe.model.set_value(cdt,cdn,\"percentage\",\"%\")\n\t           // }\n\t           // else\n\t           // {\n\t           //     if((d.incentive).includes(\" \"))\n\t           //     {\n\t           //         frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).trim())\n\t           //     }\n\t           //     else\n\t           //     {\n\t           //         frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive))\n\t           //     }\n\t                 \n\t           //         frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t           // }\n\t            \n\t        }\n\t        else\n\t        {\n\t            frappe.model.set_value(cdt,cdn,\"number1\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"number2\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"symbol\",undefined)\n\t        }\n\t    }\n\t    else\n\t    {\n\t            frappe.model.set_value(cdt,cdn,\"number1\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"number2\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"symbol\",undefined)\n\t    }\n\t},\n\tincentive:function(frm,cdt,cdn) \n\t{\n\t    var d=locals [cdt][cdn]\n\t    \n\t    if(d.incentive !=undefined)\n\t    {\n\t        if(d.incentive.length>0)\n\t        {\n\t            if((d.incentive).includes(\"%\"))\n\t            {\n\t                if(((d.incentive).split(\"%\")[0]).includes(\" \"))\n\t                {\n\t                     frappe.model.set_value(cdt,cdn,\"incentive_value\",((d.incentive).split(\"%\")[0]).trim())\n\t                }\n\t                else\n\t                {\n\t                    frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).split(\"%\")[0])\n\t                }\n\t                    \n\t                    frappe.model.set_value(cdt,cdn,\"percentage\",\"%\")\n\t            }\n\t            else\n\t            {\n\t                if((d.incentive).includes(\" \"))\n\t                {\n\t                    frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).trim())\n\t                }\n\t                else\n\t                {\n\t                    frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive))\n\t                }\n\t                 \n\t                    frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t            }\n\t            \n\t        }\n\t        else\n\t        {\n\t            frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"incentive_value\",undefined)\n\t        }\n\t    }\n\t    else\n\t    {\n\t            frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"incentive_value\",undefined)\n\t    }\n\t}\n});\n\nfrappe.ui.form.on('Incentive First Slab If Above', \n{\n     slab:function(frm,cdt,cdn) \n\t{\n\t    var d=locals [cdt][cdn]\n\t    \n\t    if(d.slab !=undefined)\n\t    {\n\t        if(d.slab.length>0)\n\t        {\n\t            var trimmed_value=d.slab.trim()\n\t            if(trimmed_value.includes(\">\")&&trimmed_value.includes(\"=\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\">\")[1].split(\"=\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\">=\")\n\t            }\n\t            else if(trimmed_value.includes(\"<\")&&trimmed_value.includes(\"=\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"<\")[1].split(\"=\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"<=\")\n\t            }\n\t            else if(trimmed_value.includes(\">\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\">\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\">\")\n\t            }\n\t            else if(trimmed_value.includes(\"<\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"<\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"<\")\n\t            }\n\t            else if(trimmed_value.includes(\"==\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"=\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"==\")\n\t            }\n\t            else if(trimmed_value.includes(\"-\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"-\")[0].trim())\n\t                frappe.model.set_value(cdt,cdn,\"number2\",(d.slab).split(\"-\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"-\")\n\t            }\n\t            \n\t            \n\t            \n\t           // if((d.incentive).includes(\"%\"))\n\t           // {\n\t           //     if(((d.incentive).split(\"%\")[0]).includes(\" \"))\n\t           //     {\n\t           //          frappe.model.set_value(cdt,cdn,\"incentive_value\",((d.incentive).split(\"%\")[0]).trim())\n\t           //     }\n\t           //     else\n\t           //     {\n\t           //         frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).split(\"%\")[0])\n\t           //     }\n\t                    \n\t           //         frappe.model.set_value(cdt,cdn,\"percentage\",\"%\")\n\t           // }\n\t           // else\n\t           // {\n\t           //     if((d.incentive).includes(\" \"))\n\t           //     {\n\t           //         frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).trim())\n\t           //     }\n\t           //     else\n\t           //     {\n\t           //         frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive))\n\t           //     }\n\t                 \n\t           //         frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t           // }\n\t            \n\t        }\n\t        else\n\t        {\n\t            frappe.model.set_value(cdt,cdn,\"number1\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"number2\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"symbol\",undefined)\n\t        }\n\t    }\n\t    else\n\t    {\n\t            frappe.model.set_value(cdt,cdn,\"number1\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"number2\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"symbol\",undefined)\n\t    }\n\t},\n\tincentive:function(frm,cdt,cdn) \n\t{\n\t    var d=locals [cdt][cdn]\n\t    \n\t    if(d.incentive !=undefined)\n\t    {\n\t        if(d.incentive.length>0)\n\t        {\n\t            if((d.incentive).includes(\"%\"))\n\t            {\n\t                if(((d.incentive).split(\"%\")[0]).includes(\" \"))\n\t                {\n\t                     frappe.model.set_value(cdt,cdn,\"incentive_value\",((d.incentive).split(\"%\")[0]).trim())\n\t                }\n\t                else\n\t                {\n\t                    frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).split(\"%\")[0])\n\t                }\n\t                    \n\t                    frappe.model.set_value(cdt,cdn,\"percentage\",\"%\")\n\t            }\n\t            else\n\t            {\n\t                if((d.incentive).includes(\" \"))\n\t                {\n\t                    frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).trim())\n\t                }\n\t                else\n\t                {\n\t                    frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive))\n\t                }\n\t                 \n\t                    frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t            }\n\t            \n\t        }\n\t        else\n\t        {\n\t            frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"incentive_value\",undefined)\n\t        }\n\t    }\n\t    else\n\t    {\n\t            frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"incentive_value\",undefined)\n\t    }\n\t}\n});\n\nfrappe.ui.form.on('Incentive First Slab If Below', \n{\n     slab:function(frm,cdt,cdn) \n\t{\n\t    var d=locals [cdt][cdn]\n\t    \n\t    if(d.slab !=undefined)\n\t    {\n\t        if(d.slab.length>0)\n\t        {\n\t            var trimmed_value=d.slab.trim()\n\t            if(trimmed_value.includes(\">\")&&trimmed_value.includes(\"=\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\">\")[1].split(\"=\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\">=\")\n\t            }\n\t            else if(trimmed_value.includes(\"<\")&&trimmed_value.includes(\"=\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"<\")[1].split(\"=\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"<=\")\n\t            }\n\t            else if(trimmed_value.includes(\">\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\">\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\">\")\n\t            }\n\t            else if(trimmed_value.includes(\"<\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"<\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"<\")\n\t            }\n\t            else if(trimmed_value.includes(\"==\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"=\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"==\")\n\t            }\n\t            else if(trimmed_value.includes(\"-\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"-\")[0].trim())\n\t                frappe.model.set_value(cdt,cdn,\"number2\",(d.slab).split(\"-\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"-\")\n\t            }\n\t            \n\t            \n\t            \n\t           // if((d.incentive).includes(\"%\"))\n\t           // {\n\t           //     if(((d.incentive).split(\"%\")[0]).includes(\" \"))\n\t           //     {\n\t           //          frappe.model.set_value(cdt,cdn,\"incentive_value\",((d.incentive).split(\"%\")[0]).trim())\n\t           //     }\n\t           //     else\n\t           //     {\n\t           //         frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).split(\"%\")[0])\n\t           //     }\n\t                    \n\t           //         frappe.model.set_value(cdt,cdn,\"percentage\",\"%\")\n\t           // }\n\t           // else\n\t           // {\n\t           //     if((d.incentive).includes(\" \"))\n\t           //     {\n\t           //         frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).trim())\n\t           //     }\n\t           //     else\n\t           //     {\n\t           //         frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive))\n\t           //     }\n\t                 \n\t           //         frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t           // }\n\t            \n\t        }\n\t        else\n\t        {\n\t            frappe.model.set_value(cdt,cdn,\"number1\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"number2\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"symbol\",undefined)\n\t        }\n\t    }\n\t    else\n\t    {\n\t            frappe.model.set_value(cdt,cdn,\"number1\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"number2\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"symbol\",undefined)\n\t    }\n\t},\n\tincentive:function(frm,cdt,cdn) \n\t{\n\t    var d=locals [cdt][cdn]\n\t    \n\t    if(d.incentive !=undefined)\n\t    {\n\t        if(d.incentive.length>0)\n\t        {\n\t            if((d.incentive).includes(\"%\"))\n\t            {\n\t                if(((d.incentive).split(\"%\")[0]).includes(\" \"))\n\t                {\n\t                     frappe.model.set_value(cdt,cdn,\"incentive_value\",((d.incentive).split(\"%\")[0]).trim())\n\t                }\n\t                else\n\t                {\n\t                    frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).split(\"%\")[0])\n\t                }\n\t                    \n\t                    frappe.model.set_value(cdt,cdn,\"percentage\",\"%\")\n\t            }\n\t            else\n\t            {\n\t                if((d.incentive).includes(\" \"))\n\t                {\n\t                    frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).trim())\n\t                }\n\t                else\n\t                {\n\t                    frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive))\n\t                }\n\t                 \n\t                    frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t            }\n\t            \n\t        }\n\t        else\n\t        {\n\t            frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"incentive_value\",undefined)\n\t        }\n\t    }\n\t    else\n\t    {\n\t            frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"incentive_value\",undefined)\n\t    }\n\t}\n});\n\nfrappe.ui.form.on('Incentive Second Slab', \n{\n     slab:function(frm,cdt,cdn) \n\t{\n\t    var d=locals [cdt][cdn]\n\t    \n\t    if(d.slab !=undefined)\n\t    {\n\t        if(d.slab.length>0)\n\t        {\n\t            var trimmed_value=d.slab.trim()\n\t            if(trimmed_value.includes(\">\")&&trimmed_value.includes(\"=\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\">\")[1].split(\"=\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\">=\")\n\t            }\n\t            else if(trimmed_value.includes(\"<\")&&trimmed_value.includes(\"=\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"<\")[1].split(\"=\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"<=\")\n\t            }\n\t            else if(trimmed_value.includes(\">\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\">\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\">\")\n\t            }\n\t            else if(trimmed_value.includes(\"<\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"<\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"<\")\n\t            }\n\t            else if(trimmed_value.includes(\"==\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"=\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"==\")\n\t            }\n\t            else if(trimmed_value.includes(\"-\"))\n\t            {\n\t                frappe.model.set_value(cdt,cdn,\"number1\",(d.slab).split(\"-\")[0].trim())\n\t                frappe.model.set_value(cdt,cdn,\"number2\",(d.slab).split(\"-\")[1].trim())\n\t                frappe.model.set_value(cdt,cdn,\"symbol\",\"-\")\n\t            }\n\t            \n\t            \n\t            \n\t           // if((d.incentive).includes(\"%\"))\n\t           // {\n\t           //     if(((d.incentive).split(\"%\")[0]).includes(\" \"))\n\t           //     {\n\t           //          frappe.model.set_value(cdt,cdn,\"incentive_value\",((d.incentive).split(\"%\")[0]).trim())\n\t           //     }\n\t           //     else\n\t           //     {\n\t           //         frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).split(\"%\")[0])\n\t           //     }\n\t                    \n\t           //         frappe.model.set_value(cdt,cdn,\"percentage\",\"%\")\n\t           // }\n\t           // else\n\t           // {\n\t           //     if((d.incentive).includes(\" \"))\n\t           //     {\n\t           //         frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).trim())\n\t           //     }\n\t           //     else\n\t           //     {\n\t           //         frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive))\n\t           //     }\n\t                 \n\t           //         frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t           // }\n\t            \n\t        }\n\t        else\n\t        {\n\t            frappe.model.set_value(cdt,cdn,\"number1\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"number2\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"symbol\",undefined)\n\t        }\n\t    }\n\t    else\n\t    {\n\t            frappe.model.set_value(cdt,cdn,\"number1\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"number2\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"symbol\",undefined)\n\t    }\n\t},\n\tincentive:function(frm,cdt,cdn) \n\t{\n\t    var d=locals [cdt][cdn]\n\t    \n\t    if(d.incentive !=undefined)\n\t    {\n\t        if(d.incentive.length>0)\n\t        {\n\t            if((d.incentive).includes(\"%\"))\n\t            {\n\t                if(((d.incentive).split(\"%\")[0]).includes(\" \"))\n\t                {\n\t                     frappe.model.set_value(cdt,cdn,\"incentive_value\",((d.incentive).split(\"%\")[0]).trim())\n\t                }\n\t                else\n\t                {\n\t                    frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).split(\"%\")[0])\n\t                }\n\t                    \n\t                    frappe.model.set_value(cdt,cdn,\"percentage\",\"%\")\n\t            }\n\t            else\n\t            {\n\t                if((d.incentive).includes(\" \"))\n\t                {\n\t                    frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive).trim())\n\t                }\n\t                else\n\t                {\n\t                    frappe.model.set_value(cdt,cdn,\"incentive_value\",(d.incentive))\n\t                }\n\t                 \n\t                    frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t            }\n\t            \n\t        }\n\t        else\n\t        {\n\t            frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"incentive_value\",undefined)\n\t        }\n\t    }\n\t    else\n\t    {\n\t            frappe.model.set_value(cdt,cdn,\"percentage\",undefined)\n\t            frappe.model.set_value(cdt,cdn,\"incentive_value\",undefined)\n\t    }\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Slip",
  "enabled": 0,
  "modified": "2023-03-23 09:00:56.535672",
  "module": null,
  "name": "Salary Slip List",
  "script": "    var from_date\n    var to_date\n    var update=undefined\n                    \n\nfrappe.listview_settings['Salary Slip'] = \n{\n hide_name_column: true,\n \n refresh: function(listview)\n {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t    \n\t    listview.page.add_inner_button(\"Calculate Incentive\", function() \n        {\n            ButtonFunction(listview);\n        });;\n\t    \n }\n    \n};\n\nfunction ButtonFunction(listview) \n{\n    var year;\n    var month;\n    // var exist_incentv=[];\n   // var exist_additional_salary_doc=[];\n   var additionalsalary_doc=[];\n   var additionalsalary_employee_id=[];\n   var additionasalary_employeename=[];\n   var newemployee_id=[];\n   var newemployee_name=[];\n    \n    var year_list=[]\n    var month1 = [\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n            var today=new Date();\n            var v_year=today.getFullYear();\n            var v_month = month1[today.getMonth()];\n            var end=flt(v_year)+10;\n            for(var i=0;i<10;i++)\n            {\n                year_list[i]=flt(v_year)+flt(i)-2;\n            }\n   \n    // var new_incentiv_calc_e=[];\n    // var total_sale=0;\n    // var incentive=0;\n    // var target_of_existing_e=[]\n    // var target_of_new_e=[]\n    // var calc_achieve_percetg=0\n    // var targt_and_incentive_exist_doc=[]\n    // var targt_and_incentive_new_doc=[]\n   \n    // var newemployee\n    \n            // \n    \n    \n      var d = new frappe.ui.Dialog\n             ({\n                \ttitle: __(\"Incentive Calculator\"),\n                \tfields:\n                \t[   \n                        \n                        {\n                    \t\tfieldtype: \"Select\",\n                    \t\tfieldname: \"year\",\n                    \t\tlabel: __(\"Year\"),\n                    \t\toptions:[year_list[0],year_list[1],year_list[2],year_list[3],year_list[4],year_list[5],year_list[6],year_list[7],year_list[8],year_list[9]],\n                    \t\treqd: 1,\n                    \t\tdefault:v_year,\n                    \t},\n                    \t     {\"fieldtype\":\"Column Break\"},\n                    \t\n                        {\n                    \t\tfieldtype: \"Select\",\n                    \t\tfieldname: \"month\",\n                    \t\tlabel: __(\"Month\"),\n                    \t\toptions:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n                    \t\treqd: 1,\n                    \t\tdefault:v_month,\n                    \t},\n\n                    \t    \n                    \t   {\"fieldtype\":\"Section Break\"},\n                    \t            {\"fieldtype\":\"Column Break\"},\n                    \t            {\"fieldtype\":\"Column Break\"},\n                    \t            {\"fieldtype\":\"Column Break\"},\n                    \t            {\"fieldtype\":\"Column Break\"},\n                        {\"fieldtype\": \"Button\", \"label\":\"Calculate\", \"fieldname\":\"calculate\"},\n \n                \t]\n           \n            });\n\n                d.fields_dict.calculate.input.onclick = function()\n                {\n                    year=d.fields_dict.year.value;\n                    month=d.fields_dict.month.value;\n                    var employeeid1\n                    var employeename1\n                     var sale_amount\n\n                    var month1 = [\"\",\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n                    var idx =month1.indexOf(month);\n                    var  days = new Date(year,idx, 0).getDate();\n                    \n                    \n                    console.log(year+'-'+idx+'-'+\"01\",\"-----\",year+'-'+idx+'-'+days)\n                    \n                    from_date=year+'-'+idx+'-'+\"01\"\n                    to_date=year+'-'+idx+'-'+days\n                \n                    \n                                        frappe.call\n                                        ({\n                                            method: \"frappe.client.get_list\",\n                                            args: \n                                            {\n                                                doctype: \"Additional Salary\",\n                                                filters: [\n                                                            ['docstatus', \"=\",1],\n                                                            ['from_date', \"between\", [year+'-'+idx+'-'+\"01\",year+'-'+idx+'-'+days]],\n                                                            ['to_date', \"between\", [year+'-'+idx+'-'+\"01\",year+'-'+idx+'-'+days]],\n                                                            // [\"employee\",\"=\",v.employee]\n                                                         ],\n                                                // fields: ['name', 'employee', 'employee_name'],\n                                            },\n                                            callback:function(s) \n                                            {\n                                                if(s.message[0])\n                                                {\n                                                   frappe.confirm\n            \t\t                                (\n                                                        \"Already Calculated Incentive Of Some Employees In Month\"+month+\" , \"+'Are you sure You Want To Update It?',\n                                                        function()\n                                                        {\n                                                            console.log(\"update--true\")\n                                                            update=\"true\"\n                                                            incentive_calculation()\n                                                        },\n                                                        function()\n                                                        {\n                                                            console.log(\"update--false\")\n                                                            update=\"false\"\n                                                             window.close();\n                                                             incentive_calculation()\n                                                        }\n                                                    )\n                                                }\n                                                else\n                                                {\n                                                    console.log(\"update--true\")\n                                                    update=\"true\"\n                                                    incentive_calculation()\n                                                }\n                                            }\n                                        })\n                        d.hide();\n                };\n\n            d.show();\n}\n\nfunction incentive_calculation(frm)\n{\n   // msgprint(update)\n                                                frappe.call\n                        \t                    ({\n                                                    \"method\":\"incentive_calculation\",\n                                                    \"args\":{\n                                                             update1:update,\n                                                             from_date:from_date,\n                                                             to_date:to_date\n                                                            },\n                                                });\n    \n}\n\n \n// frappe.listview_settings['Your DocType Name'] = \n// {\n//     refresh: function(listview) \n//     {\n//         listview.page.add_inner_button(\"Button Name\", function() \n//         {\n//             ButtonFunction(listview);\n//         });;\n//     },\n// };",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Material Request",
  "enabled": 0,
  "modified": "2023-03-23 09:00:56.575189",
  "module": null,
  "name": "Material Request",
  "script": "frappe.ui.form.on('Material Request',\n{\n    onload(frm)\n    {\n            frappe.call\n              ({\n                                                                                                \n                    method: \"frappe.client.get_list\",\n                    args: \n                            {\n                                doctype: \"Company\",\n                                fields:[\"marketing_supervisor\",\"marketing_supervisor_email\"],\n                                filters: { 'name':\"Lamit\"},\n                            },\n                        callback: function(data)\n                        {\n                            if(data)\n                              {\n                                    if(data.message.length!==0)\n                                    {\n                                         frm.set_value(\"marketing_supervisor\",data.message[0].marketing_supervisor)\n                                         frm.set_value(\"marketing_supervisor_email\",data.message[0].marketing_supervisor_email)\n                                    }\n                              }\n                        }\n              })  \n    },\n    refresh(frm)\n    {\n         $('li').removeClass(\"disabled\");  \n    },\n\tcompany(frm) \n\t{\n\t\tif(frm.doc.company==\"Lamit\")\n\t\t{\n\t\t    frm.set_value(\"sales_admin\",undefined)\n\t\t}\n\t\telse\n\t\t{\n\t\t     frm.set_value(\"sales_manager\",undefined)\n\t\t}\n\t\t\n\t\t\n\t\t\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Order",
  "enabled": 0,
  "modified": "2023-03-23 09:00:56.613623",
  "module": null,
  "name": "Sales Order",
  "script": "frappe.listview_settings['Sales Order'] =\n{\n\trefresh: function(listview) \n\t{\n\t   \t$(\"div[data-fieldname = name]\").hide();\n\t   \t$('.btn-primary').hide();\n\t},\n\thide_name_column: true\n};\n\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sales Invoice",
  "enabled": 0,
  "modified": "2023-03-23 09:00:56.652920",
  "module": null,
  "name": "Sales Invoice List",
  "script": "frappe.listview_settings['Sales Invoice'] = {\n\trefresh: function(listview) \n\t{\n\t    if(frappe.user.has_role(\"Sales Admin\"))\n\t    {\n\t                frappe.call\n\t                 ({\n                                method: 'frappe.client.get_list',\n                                args:\n                                {\n                                    'doctype':'Employee',\n                            \t   \tfilters:{\n                                             user_id:frappe.session.user,\n                            \t       \t    }  ,\n                            \t    fields:[\"company\"]\n                            \t},\n                                callback: function(r)\n                                {\n                                    if(r.message[0])\n                                    {\n                                        if(r.message[0].company==\"Lamit\")\n                                        {\n                                            $('.btn-primary').show();\n                                        }\n                                        else\n                                        {\n                                            $('.btn-primary').hide();\n                                        }\n                                    }\n                                }\n\t                 })\n\t    }\n\t    else\n\t    {\n            $('.btn-primary').hide();\n\t    }\n\t},\n\thide_name_column: true\n};",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Districts",
  "enabled": 0,
  "modified": "2023-03-23 10:33:10.429930",
  "module": null,
  "name": "Districts",
  "script": "var district1;\nvar taluk1;\nvar asm_exist;\nvar newdoc;\nvar selected_taluk=\"\";\nvar s_customer_area=[];\n\nfrappe.ui.form.on('Districts',\n{\n   onload(frm)\n   {\n        frm.trigger(\"field_filters\")\n            \n            \n            if(frm.doc.district_tree.length>0)\n    \t    {\n                newdoc=\"false\"\n    \t    }\n    \t    else\n    \t    {\n    \t        newdoc=\"true\"\n    \t    }\n            \n            \n            if(frm.doc.managed_by !=undefined)\n            {\n                asm_exist=\"true\"\n            }\n            else\n            {\n                asm_exist=\"false\"\n            }\n            \n            \n            console.log(\"newdoc\",newdoc)\n             console.log(\"asm_exist\",asm_exist)\n   },\n   \n    refresh(frm)\n    {\n            $('li').removeClass(\"disabled\");\n    \t    if(frm.doc.district_tree !=undefined)\n    \t    {\n        \t    if(frm.doc.district_tree.length>0)\n        \t    {\n            \t      frm.add_custom_button(__( \"Change Employee Customer Area\"),function()\n            \t      {\n            \t          $.each(frm.doc.district_tree,function(i,v)\n            \t          {\n            \t              s_customer_area[i]=v.name_of_lac;\n            \t          });\n            \t          \n            \t          \n            \t           var dialog = new frappe.ui.Dialog\n            \t           ({\n             \t\t\t\ttitle: __(\"Enter Details\"),\n            \t\t\t\tfields: [\n            \t\t\t\t    // {\n            \t\t\t\t    //     fieldtype:\"Link\",\n            \t\t\t\t    //     label:\"Taluk\",\n            \t\t\t\t    //     fieldname:\"taluk\",\n            \t\t\t\t    //     filters:{\"district\":frm.doc.district},\n            \t\t\t\t    //     options:\"Taluk\",\n            \t\t\t\t    //     onchange:function(e)\n            \t\t\t\t    //     {\n            \t\t\t\t    //         selected_taluk=this.value;\n            \t\t\t\t    //         dialog.fields_dict.customer_area.refresh();\n            \t\t\t\t    //     },\n            \t\t\t\t    //     reqd:1\n            \t\t\t\t    // },\n            \t\t\t\t    {\n            \t\t\t\t        fieldtype:\"Select\",\n            \t\t\t\t        label:\"Customer Area\",\n            \t\t\t\t        fieldname:\"customer_area\",\n            \t\t\t\t        options:s_customer_area,\n            \t\t\t\t       // filters:{\"taluk\":selected_taluk},\n            \t\t\t\t        reqd:1\n            \t\t\t\t    },\n            \t\t\t\t    {\n            \t\t\t\t        fieldtype:\"Link\",\n            \t\t\t\t        label:\"Sales Officer\",\n            \t\t\t\t        fieldname:\"sales_officer\",\n            \t\t\t\t        filters:{\"designation\":\"Sales Officer\",\"asm\":frm.doc.managed_by},\n            \t\t\t\t        options:\"Employee\",\n            \t\t\t\t        onchange: function(e) \n            \t\t\t\t        {\n        \t\t\t                                            frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"Employee\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                            \t\"name\":this.value,\n                                                                            },\n                                                                            fields:[\"name\",\"user_id\",\"employee_name\"]\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message)\n                                                                        {\n                                                                            dialog.fields_dict.sales_officer_email.set_value(r.message.user_id);  \n                                                                            dialog.fields_dict.sales_officer_name.set_value(r.message.employee_name);  \n                                                                        }\n                                                                    }\n                                                                })\n        \t\t                    }\n            \t\t\t\t    },\n            \t\t\t\t    {\n            \t\t\t\t        fieldtype:\"Link\",\n            \t\t\t\t        label:\"Sales Officer Name\",\n            \t\t\t\t        fieldname:\"sales_officer_name\",\n            \t\t\t\t        options:\"User\",\n            \t\t\t\t        hidden:1\n            \t\t\t\t    },\n            \t\t\t\t    {\n            \t\t\t\t        fieldtype:\"Link\",\n            \t\t\t\t        label:\"Sales Officer Email\",\n            \t\t\t\t        fieldname:\"sales_officer_email\",\n            \t\t\t\t        options:\"User\",\n            \t\t\t\t        hidden:1\n            \t\t\t\t    },\n            \t\t\t\t    {\n            \t\t\t\t        fieldtype:\"Link\",\n            \t\t\t\t        label:\"Marketing Officer\",\n            \t\t\t\t        fieldname:\"marketing_officer\",\n            \t\t\t\t        options:\"Employee\",\n            \t\t\t\t        filters:{\"designation\":\"Marketing Officer\",\"asm\":frm.doc.managed_by},\n            \t\t\t\t        onchange: function(e) \n            \t\t\t\t        {\n        \t\t\t                                            frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"Employee\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                            \t\"name\":this.value,\n                                                                            },\n                                                                            fields:[\"name\",\"user_id\",\"employee_name\"]\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message)\n                                                                        {\n                                                                            dialog.fields_dict.marketing_officer_email.set_value(r.message.user_id); \n                                                                            dialog.fields_dict.marketing_officer_name.set_value(r.message.employee_name); \n                                                                        }\n                                                                    }\n                                                                })\n        \t\t                    }\n            \t\t\t\t    },\n            \t\t\t\t     {\n            \t\t\t\t        fieldtype:\"Link\",\n            \t\t\t\t        label:\"Marketing Officer Name\",\n            \t\t\t\t        fieldname:\"marketing_officer_name\",\n            \t\t\t\t        options:\"User\",\n            \t\t\t\t        hidden:1\n            \t\t\t\t    },\n            \t\t\t\t    {\n            \t\t\t\t        fieldtype:\"Link\",\n            \t\t\t\t        label:\"Marketing Officer Email\",\n            \t\t\t\t        fieldname:\"marketing_officer_email\",\n            \t\t\t\t        options:\"User\",\n            \t\t\t\t        hidden:1\n            \t\t\t\t    },\n            \t\t\t\t],\n            \t\t\t\t\n            \t\t\t     primary_action_label: 'Submit',\n                             primary_action(values) \n                             {\n                                 frm.set_value(\"area\",undefined)\n    \n                                $.each(frm.doc.district_tree,function(i,v)\n                                {\n                                     if(v.name_of_lac==values.customer_area)\n                                     {\n                                        if(values.sales_officer !=undefined)\n                                        {\n                                            if(values.sales_officer !=v.allocated_to_employeeid)\n                                            {\n                                                                frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get_list\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"User Permission\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                            \t\"for_value\":values.customer_area,\n                                                                                \"user\":v.emp_id\n                                                                            },\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message)\n                                                                        {\n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"delete_user_permission\",\n                                                                                    \"args\":{\n                                                                                             name:r.message[0].name,\n                                                                                            },\n                                                                                });\n                                                                                \n                                                                                  frappe.db.insert\n                                                                                ({   \n                                                                                    \"doctype\": \"User Permission\", \n                                                                                    \"user\":values.sales_officer_email,\n                                                                                    \"allow\":\"Sale Area\",\n                                                                                    \"for_value\":values.customer_area\n                                                                                });\n                                                                                \n                                                                                \n                                                                        }\n                                                                    }\n                                                                });\n                                            }\n                                        }\n    \n                                        if(values.marketing_officer !=undefined)\n                                        {\n                                            if(values.marketing_officer !=v.marketing_officer)\n                                            {\n                                                                frappe.call\n                                                                ({\n                                                                    \"method\":\"frappe.client.get_list\",\n                                                                    \"args\":\n                                                                    {\n                                                                        \"doctype\":\"User Permission\",\n                                                                        \"filters\":\n                                                                        \t{\n                                                                            \t\"for_value\":values.customer_area,\n                                                                                \"user\":v.marketing_officer_email\n                                                                            },\n                                                                    },\n                                                                    callback:function(r)\n                                                                    {\n                                                                        if(r.message[0])\n                                                                        {\n                                                                                frappe.call\n                                                        \t                    ({\n                                                                                    \"method\":\"delete_user_permission\",\n                                                                                    \"args\":{\n                                                                                             name:r.message[0].name,\n                                                                                            },\n                                                                                });\n                                                                                \n                                                                                  frappe.db.insert\n                                                                                    ({   \n                                                                                        \"doctype\": \"User Permission\", \n                                                                                        \"user\":values.marketing_officer_email,\n                                                                                        \"allow\":\"Sale Area\",\n                                                                                        \"for_value\":values.customer_area\n                                                                                    });\n                                                                        }\n                                                                    }\n                                                                });  \n                                            }\n                                        }\n                                     }\n                                })\n                                \n                                $.each(frm.doc.district_tree,function(i,v)\n                                {\n                                     if(v.name_of_lac==values.customer_area)\n                                     {\n                                        if(values.sales_officer !=undefined)\n                                        {\n                                             v.allocated_to_employeeid=values.sales_officer\n                                              v.emp_name=values.sales_officer_name\n                                              v.emp_id=values.sales_officer_email\n                                        }\n                                        \n                                        if(values.marketing_officer !=undefined)\n                                        {\n                                              v.marketing_officer=values.marketing_officer\n                                              v.marketing_officer_name=values.marketing_officer_name\n                                              v.marketing_officer_email=values.marketing_officer_email\n                                                    \n                                        }\n                                        \n                                        frappe.db.set_value(\"Customer Area\",values.customer_area,\n                                        {\n                                            \"allocated_by\":values.sales_officer,\n                                            \"emp_name\":values.sales_officer_name,\n                                            \"marketing_officer\":values.marketing_officer,\n                                            \"marketing_officer_name\":values.marketing_officer_name,\n                                        })\n                                     }\n                                })\n                                    frm.set_value(\"area\",\"1\")\n                                    frm.refresh_field(\"district_tree\")\n                                    s_customer_area=[];\n                                    frm.save()\n                                    dialog.hide();\n                                 \n                             }\n             \t\t})\n             \t\t\n            \n             \t\t //  frm.refresh_field(\"district_tree\")\n             \t\t //  frm.save()\n             \t\t    \n                        dialog.show();\n            \t      })\n            \t      \n            \t      frm.change_custom_button_type('Change Employee Customer Area', null, 'success');\n        \t    }\n    \t    }\n    \t    \n    \t    if(frm.doc.district_tree.length>0)\n    \t    {\n                frm.set_df_property(\"district_tree\",\"read_only\", 1);\n    \t    }\n    \t    else\n    \t    {\n    \t        frm.set_df_property(\"district_tree\",\"read_only\",0);\n    \t    }\n    },\n   \n   \n   field_filters:function(frm)\n   {\n       frm.fields_dict['district_tree'].grid.get_field('taluk').get_query = function(doc, cdt, cdn) \n        {\n            return {    \n                filters:[\n                   ['district', '=',frm.doc.district]\n                ]\n            }\n        }\n        \n        frm.fields_dict['district_tree'].grid.get_field('name_of_lac').get_query = function(doc, cdt, cdn) \n        {\n            var child = locals[cdt][cdn];\n            return {    \n                filters:[\n                   ['taluk', '=',child.taluk1]\n                ]\n            }\n        }\n       \n       frm.fields_dict['district_tree'].grid.get_field('marketing_officer').get_query = function(doc, cdt, cdn) \n        {\n            return {    \n                filters:[\n                   ['designation', '=',\"Marketing Officer\"],\n                   ['asm', '=',frm.doc.managed_by]\n                ]\n            }\n        }\n        \n        frm.fields_dict['district_tree'].grid.get_field('allocated_to_employeeid').get_query = function(doc, cdt, cdn) \n        {\n            return {    \n                filters:[\n                   ['designation', '=',\"Sales Officer\"],\n                   ['asm', '=',frm.doc.managed_by]\n                ]\n            }\n        }\n        \n            frm.set_query(\"managed_by\", function() \n            {\n    \t\t\treturn {\n    \t\t\t\t\"filters\": {\n    \t\t\t\t\t\"designation\":\"Area Sales Manager\",\n    \t\t\t\t}\n    \t\t\t};\n    \t\t});\n    \t\t\n    \t\t frm.set_query(\"marketing_officer\", function() \n            {\n    \t\t\treturn {\n    \t\t\t\t\"filters\":\n    \t\t\t\t{\n    \t\t\t\t\t\"designation\":\"Marketing Officer\",\n    \t\t\t\t}\n    \t\t\t};\n    \t\t});\n   },\n   \n   before_save(frm)\n   {\n       console.log(\"newdoc\",newdoc)\n        console.log(\"asm_exist\",asm_exist)\n    \t    if(newdoc==\"true\")\n    \t    {\n    \t        if(frm.doc.district_tree.length>0)\n    \t        {\n    \t            for(var i=0;i<frm.doc.district_tree.length;i++)\n    \t            {\n                        \n                        frappe.db.insert\n                        ({   \n                            \"doctype\": \"User Permission\", \n                            \"user\":frm.doc.district_tree[i].emp_id,\n                            \"allow\":\"Sale Area\",\n                            \"for_value\":frm.doc.district_tree[i].name_of_lac\n                        });\n                        \n                        frappe.db.insert\n                        ({   \n                            \"doctype\": \"User Permission\", \n                            \"user\":frm.doc.district_tree[i].marketing_officer_email,\n                            \"allow\":\"Sale Area\",\n                            \"for_value\":frm.doc.district_tree[i].name_of_lac\n                        });\n                        \n                       frappe.db.set_value(\"Customer Area\",frm.doc.district_tree[i].name_of_lac,{\"marketing_officer\":frm.doc.district_tree[i].marketing_officer,\"allocated_by\":frm.doc.district_tree[i].allocated_to_employeeid})\n                }\n    \t            newdoc=\"false\"\n    \t    }\n    \t    }\n    \t    \n    \t    if(asm_exist==\"false\")\n    \t    {\n    \t       if(frm.doc.managed_by !=undefined)\n    \t       {\n    \t                frappe.db.insert\n                        ({   \n                            \"doctype\": \"User Permission\", \n                            \"user\":frm.doc.email,\n                            \"allow\":\"Sale District\",\n                            \"for_value\":frm.doc.district\n                        });\n    \t       }\n    \t    }\n    \t    \n    \t},\n   \n});\n\nfrappe.ui.form.on('District Child',\n{\n\ttaluk(frm,cdt,cdn)\n\t{\n\t     var d=locals [cdt][cdn]\n\t    if(d.taluk !=undefined)\n\t    {\n\t        d.taluk1=d.taluk;\n\t    }\n\t    else\n\t    {\n\t        d.taluk1=frm.doc.district_tree[d.idx-2].taluk1\n\t    }\n\t    \n\t},\n\n\tdistrict_tree_add(frm,cdt,cdn)\n\t{\n\t    var d=locals [cdt][cdn]\n\t    if(d.idx !=1)\n\t    {\n    \t   // d.customer_area1=frm.doc.district_tree[d.idx-2].customer_area1\n    \t    d.taluk1=frm.doc.district_tree[d.idx-2].taluk1\n\t    }\n\t},\n\t\n    before_district_tree_remove(frm,cdt,cdn)\n\t{\n\t    var d=locals [cdt][cdn]\n\n\t    if(frm.doc.district_tree.length>1)\n\t    {\n\t        if(d.idx<frm.doc.district_tree.length)\n\t        {\n\t                if(d.taluk !=undefined)\n            \t    {\n            \t        if(frm.doc.district_tree[d.idx].taluk==undefined)\n            \t        {\n            \t            frm.doc.district_tree[d.idx].taluk= frm.doc.district_tree[d.idx].taluk1\n            \t        }\n            \t    }\n\t        }\n\t    }\n\t}\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// var newdoc;\n// var asm_exist;\n\n// frappe.ui.form.on('Districts',\n// {\n//       onload(frm)\n//       {\n          \n          \n\n                \n//                 // frm.set_query(\"district\", function() \n//                 //     {\n//                 //     return {\n//                 //         \"filters\": \n//                 //         {\n//                 //             \"state\": frm.doc.state,\n                           \n//                 //         }\n//                 //     };\n//                 // });\n                \n//     //             frm.fields_dict['District Child'].grid.get_field(\"marketing_officer\").get_query = function(doc, cdt, cdn) \n//     //             {\n//     // \t        return {\n//     // \t\t    filters: [\n    \t\t\t\n//     // \t\t\t['Employee', 'designation', '=', \"Marketing Officer\"]\n//     // \t    \t]\n//     //                 \t}\n//     //             }\n    \n          \n          \n          \n          \n          \n          \n//             // if(frm.doc.district !=undefined)\n            \n//             if(frm.doc.district_tree.length>0)\n//             {\n//                 newdoc=\"false\"\n//             }\n//             else\n//             {\n//                 newdoc=\"true\"\n//             }\n            \n//             if(frm.doc.managed_by !=undefined)\n//             {\n//                 asm_exist=\"true\"\n//             }\n//             else\n//             {\n//                 asm_exist=\"false\"\n//             }\n            \n            \n//       },\n\n\n\t\n\t\n\t\n//     \tbefore_save(frm)\n//     \t{\n//     \t    if(newdoc==\"true\")\n//     \t    {\n//     \t        if(frm.doc.district_tree.length>0)\n//     \t        {\n//     \t            for(var i=0;i<frm.doc.district_tree.length;i++)\n//     \t            {\n//     \t                frappe.db.set_value(\"Customer Area\",frm.doc.district_tree[i].customer_area1,{\"marketing_officer\":frm.doc.district_tree[i].marketing_officer,\"allocated_by\":frm.doc.district_tree[i].allocated_to_employeeid})\n                        \n//                         frappe.db.insert\n//                         ({   \n//                             \"doctype\": \"User Permission\", \n//                             \"user\":frm.doc.district_tree[i].emp_id,\n//                             \"allow\":\"Customer Area\",\n//                             \"for_value\":frm.doc.district_tree[i].customer_area1\n//                         });\n                        \n//                         frappe.db.insert\n//                         ({   \n//                             \"doctype\": \"User Permission\", \n//                             \"user\":frm.doc.district_tree[i].marketing_officer_email,\n//                             \"allow\":\"Customer Area\",\n//                             \"for_value\":frm.doc.district_tree[i].customer_area1\n//                         });\n//     \t            }\n//     \t            newdoc=\"false\"\n//     \t        }\n//     \t    }\n    \t    \n//     \t    if(asm_exist==\"false\")\n//     \t    {\n//     \t       if(frm.doc.managed_by !=undefined)\n//     \t       {\n//     \t                frappe.db.insert\n//                         ({   \n//                             \"doctype\": \"User Permission\", \n//                             \"user\":frm.doc.email,\n//                             \"allow\":\"District\",\n//                             \"for_value\":frm.doc.district\n//                         });\n//     \t       }\n//     \t    }\n    \t    \n//     \t},\n    \t\n//     // \tafter_save(frm)\n//     // \t{\n//     // \t    var t1=frm.doc.email;\n//     // \t    var t2=frm.doc.district;\n//     // \t    console.log(t2)\n    \t    \n//     // \t          frappe.call\n//     //               ({\n//     //                      \"method\":\"frappe.client.get_list\",\n//     //                       \"args\":\n//     //                               {\n//     //                                  \"doctype\":\"User Permission\",\n//     //                                  \"filters\":\n//     //                               \t{\n//     //                                 \t\"user\":t1,\n//     //                                 \t\"allow\":\"Districts\",\n//     //                                 \t\"for_value\":t2\n//     //                                      },\n//     //                                   fields:[\"name\",\"user\",\"allow\",\"for_value\"]\n//     //                                 },\n//     //                                      callback:function(r)\n//     //                                       {\n//     //                                           if(r.message.length===0)\n//     //                                           {\n                                                  \n//     //                                                   frappe.db.insert\n//     //                                                         ({   \n//     //                                                             \"doctype\": \"User Permission\", \n//     //                                                             \"user\":t1,\n//     //                                                             \"allow\":\"Districts\",\n//     //                                                             \"for_value\":t2\n//     //                                                         });\n                                                  \n                                                  \n                                                  \n                                                  \n//     //                                           }\n//     //                                       }\n//     //               });\n    \n//     // \t}\n    \t\n    \t\n\t\n\t\n// // \tmarketing_officer:function(frm)\n// // \t{\n\t    \n// // \t    console.log(frm.doc.marketing_officer)\n// // \t   // var d=frm.doc.marketing_officer\n\t    \n\t\t\n// // \t\t\tfrm.doc.district_tree.forEach(d => {\n// // \t\t\t\tfrappe.model.set_value(d.doctype, d.name,\"marketing_officer\", frm.doc.marketing_officer);\n// // \t\t\t})\n\t\t\t\n// // // \t\t\tfrm.doc.district_tree.forEach(d => {\n// // // \t\t\t     return {\n// // //                     \"filters\": \n// // //                     {\n// // //                         \"designation\":\"Marketing Officer\",\n// // //                         // \"group_or_ledger\": \"Ledger\"\n// // //                     }\n// // //                 };\n\t\t\t\t\n// // // \t\t\t})\n\t\t\t\n\t\t\t\n\t\t\t\n// // // \t\t\t$.each(frm.doc.district_tree, function(i, v) {\n\t\t\t    \n// // // \t\t\t    console.log(v.marketing_officer)\n// // // \t\t\t // frappe.model.set_value(v.doctype, v.name,\"marketing_officer\" ,frm.doc.marketing_officer)\n\t\t\t    \n\t\t\t    \n\t\t\t    \n// // // \t\t\t})\n// // // \t\t\tfrm.refresh_field('district_tree');\n\t\n// // \t}\t\n\n// })\n\n\n\n// frappe.ui.form.on('District Child',\n// {\n//     onload(frm)\n// \t{\n// \t     var d=locals [cdt][cdn]\n// \t    frm.set_query(\"marketing_officer\", \"District Child\", function(doc, cdt, cdn)\n//         {\n// \t\treturn {\n// \t\t\tfilters:{designation:\"Marketing Officer\"}\n// \t\t       }\n//         });\n// \t},\n\t\n// \tname_of_lac(frm,cdt,cdn)\n// \t{\n// \t    var d=locals [cdt][cdn]\n// \t    if(d.name_of_lac !=undefined)\n// \t    {\n// \t        d.customer_area1=d.name_of_lac;\n// \t    }\n// \t    else\n// \t    {\n// \t        d.customer_area1=frm.doc.district_tree[d.idx-2].customer_area1\n// \t    }\n// \t},\n\t\n// \ttaluk(frm,cdt,cdn)\n// \t{\n// \t     var d=locals [cdt][cdn]\n// \t    if(d.taluk !=undefined)\n// \t    {\n// \t        d.taluk1=d.taluk;\n// \t    }\n// \t    else\n// \t    {\n// \t        d.taluk1=frm.doc.district_tree[d.idx-2].taluk1\n// \t    }\n\t    \n// \t},\n\n// \tdistrict_tree_add(frm,cdt,cdn)\n// \t{\n// \t    var d=locals [cdt][cdn]\n// \t    if(d.idx !=1)\n// \t    {\n//     \t    d.customer_area1=frm.doc.district_tree[d.idx-2].customer_area1\n//     \t    d.taluk1=frm.doc.district_tree[d.idx-2].taluk1\n// \t    }\n// \t},\n\t\n//     before_district_tree_remove(frm,cdt,cdn)\n// \t{\n// \t    var d=locals [cdt][cdn]\n\n// \t    if(frm.doc.district_tree.length>1)\n// \t    {\n// \t        if(d.idx<frm.doc.district_tree.length)\n// \t        {\n// \t                if(d.taluk !=undefined)\n//             \t    {\n//             \t        if(frm.doc.district_tree[d.idx].taluk==undefined)\n//             \t        {\n//             \t            frm.doc.district_tree[d.idx].taluk= frm.doc.district_tree[d.idx].taluk1\n//             \t        }\n//             \t    }\n// \t        }\n// \t    }\n// \t}\n\t\n\t\n// })",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "User",
  "enabled": 1,
  "modified": "2023-03-23 10:34:00.205612",
  "module": null,
  "name": "User",
  "script": "frappe.ui.form.on('User', {\n    onload(frm)\n    {\n    },\n    refresh(frm)\n    {\n         $('li').removeClass(\"disabled\");  \n    },\n\n\t\n})\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet",
  "enabled": 1,
  "modified": "2023-03-23 09:00:56.814977",
  "module": null,
  "name": "Timesheet",
  "script": "frappe.ui.form.on('Timesheet', \n{\n\tonload(frm) \n\t{\n\t    console.log(frm)\n\t    frm.disable_save();\n// \t\tconsole.log(\"aaa\")\n\t\t setTimeout(() =>\n\t    {\n\t         cur_frm.dashboard.hide();\n\t          frm.set_value(\"naming_series\",\"hidden\",1)\n\t         document.querySelector(\".form-message.blue\").style.display = \"none\";\n\t         document.querySelector(\".indicator-pill, .indicator-pill-right\").style.display = \"none\";\n            frm.remove_custom_button('Start Timer');\n        }, 10);\n\t\t \n\t},\n\trefresh(frm)\n\t{\n\t   // console.log(\"bbbb\")\n\t    $('li').removeClass(\"disabled\");\n\t    setTimeout(() =>\n\t    {\n\t         cur_frm.dashboard.hide();\n\t         frm.set_value(\"naming_series\",\"hidden\",1)\n\t         document.querySelector(\".form-message.blue\").style.display = \"none\";\n\t         document.querySelector(\".indicator-pill, .indicator-pill-right\").style.display = \"none\";\n            frm.remove_custom_button('Start Timer');\n        }, 10);\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Shop",
  "enabled": 1,
  "modified": "2023-03-23 09:00:56.852079",
  "module": null,
  "name": "Shop",
  "script": "var employee;\nfrappe.ui.form.on('Shop',\n{\n\trefresh(frm)\n\t{\n\t     $('li').removeClass(\"disabled\");\n\t\t frm.add_custom_button(__(\"Meeting Updates\"), function() \n         {\n            var doc_selected_program_structure=[];\n           \n          \n             var d = new frappe.ui.Dialog\n             ({\n                \ttitle: __(\"Incentive & Target\"),\n                \tfields:\n                \t[   \n                \t   // {\n                    // \t\tfieldtype: \"Link\",\n                    // \t\toptions:\"Employee\",\n                    // \t\tfieldname: \"employee\",\n                    // \t\tlabel: __(\"Employee\"),\n                    // \t\treqd: 1,\n                    // \t},\n                    \t{\n                    \t\tfieldtype: \"Date\",\n                    \t\tfieldname: \"date\",\n                    \t\tlabel: __(\"Date\"),\n                    \t\tdefault: frappe.datetime.nowdate(),\n                    \t\treqd: 1,\n                    \t},\n                    \t         {\"fieldtype\":\"Section Break\"},\n                    \t{\n                    \t\tfieldtype: \"Data\",\n                    \t\tfieldname: \"from_time\",\n                    \t\tlabel: __(\"From Time\"),\n                    \t\treqd: 1,\n                    \t},\n                    \t        {\"fieldtype\":\"Column Break\"},\n                    \t\n                    \t{\n                    \t\tfieldtype: \"Data\",\n                    \t\tfieldname: \"to_time\",\n                    \t\tlabel: __(\"To Time\"),\n                    \t\treqd: 1,\n                    \t},\n                    \t                 {\"fieldtype\":\"Section Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                        {\"fieldtype\": \"Button\", \"label\":\"Add\", \"fieldname\":\"add_details\"},\n \n                \t]\n           \n            });\n                  \n      \n                  \n                  \n                d.fields_dict.add_details.input.onclick = function()\n                {\n                  //  console.log(\"frappe.session.user\",frappe.session.user)\n                    var d_date=d.fields_dict.date.value;\n                    var d_from_time=d.fields_dict.from_time.value;\n                    var d_to_time=d.fields_dict.to_time.value;\n                            \n                            frappe.call\n                            ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                {\n                                    \"doctype\":\"Employee\",\n                                    \"filters\":\n                                    \t{\n                                        \t\"user_id\":frappe.session.user,\n                                        },\n                                        fields:[\"name\",\"employee_name\"]\n                                },\n                                callback:function(r)\n                                {\n                                    if(r.message[0])\n                                    {\n                                        employee=r.message[0].name;\n                                        \n                                         var row = cur_frm.add_child(\"follow_up\"); \n                                         row.employee_id=employee;\n                                         row.name1=r.message[0].employee_name;\n                                         row.contact_date=d_date;\n                                         row.fromtime=d_from_time;\n                                         row.totime=d_to_time;\n                                         cur_frm.refresh_fields(\"follow_up\");\n                                         \n                                          frappe.call\n                                ({\n                                    \"method\":\"frappe.client.get_list\",\n                                    \"args\":\n                                    {\n                                        \"doctype\":\"Timesheet\",\n                                        \"filters\":\n                                        \t{\n                                            \t\"employee\":employee,\n                    \t\t\t\t\t\t\t \"date\":d_date,\n                    \t\t\t\t\t\t\t \"status\":\"Draft\",\n                                            },\n                                    },\n                                    callback:function(r)\n                                    {\n                                        if(r.message[0])\n                                        {\n                    \t                    frappe.call\n                    \t                    ({\n                                                \"method\":\"timesheet_row_add\",\n                                                \"args\":{\n                                                         timesheet:r.message[0].name,\n                                                         type:\"Shop\",\n                                                         doc_id:frm.doc.name,\n                                                         from_time:d_from_time,\n                                                         to_time:d_to_time,\n                                                         date1:d_date,\n                                                         employee:employee\n                                                        },\n                                            });\n                    \n                                        }\n                                        else\n                                        {\n                                               frappe.db.insert\n                    \t                       ({\n                                                doctype:'Timesheet',    \n                                                date:d_date,\n                                                employee:employee,\n                                                time_logs:\n                                                [\n                                                  {\n                                                         type:\"Shop\",\n                                                         doc_id:frm.doc.name,\n                                                         from:d_from_time,\n                                                         to:d_to_time,\n                                                         date1:d_date,\n                                                         employee:employee\n                                                  },\n                                                ]\n                                                });\n                                        }\n                                    }\n                                });\n                                         \n                                         \n                                         \n                                         \n                                    }\n                                    \n                                }\n                            });\n                           \n                        //   if(employee)\n                        //   {\n                               \n                        //   }\n                      \n                        d.hide();\n                         frm.save();\n                };\n            d.show();\n         }); \n\t},\n\t\n\taddress1(frm)\n\t{\n\t  frm.set_value(\"address_html\",\"address1\")  \n\t},\n\t\n\t\n\t\n\tbefore_save(frm)\n\t{\n\t    //console.log(\"fffffffffff\")\n\t}\n\n});\n\n\n\n// frappe.ui.form.on('Lead Details',\n// {\n//     fromtime_add(frm,cdt,cdn)\n//     {\n//         console.log(\"hello\");\n//     }\n    \n// });",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payroll Settings",
  "enabled": 1,
  "modified": "2023-03-23 09:00:56.891792",
  "module": null,
  "name": "Payroll Settings",
  "script": "frappe.ui.form.on('Payroll Settings', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Attendance",
  "enabled": 0,
  "modified": "2023-10-13 09:55:17.902521",
  "module": null,
  "name": "Attendance",
  "script": "frappe.ui.form.on('Attendance',\n{\n    onload(frm)\n    {\n        if(frm.is_new())\n\t    {\n           // frm.set_df_property(\"status\",\"options\",[\"Present\",\"Half Day\",\"Work From Home\"]);\n            frm.set_value(\"reporting_time\",frappe.datetime.now_datetime())\n\t    }\n\t   // else\n\t   // {\n\t   //     if(frm.doc.docstatus==0)\n\t   //     {\n\t             frm.set_df_property(\"status\",\"options\",[\"Present\",\"Half Day\",\"Work From Home\"]);\n\t   //     }\n\t   // }\n    },\n    \n\trefresh(frm)\n\t{\n\t    \n\t    $('li').removeClass(\"disabled\");\n\t    cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \n\t   // if(!frm.is_new())\n\t   // {\n    // \t     frm.add_custom_button(__(\"Approve\"),\n    // \t     function()\n    // \t     {\n    //             frm.set_value('status_1',\"Approved\");\n    //             frm.refresh_field('status_1');\n    //             frm.save('Submit');\n    //          })\n    //         .addClass(\"btn-success\").removeClass(\"btn-default\");\n    \t    \n    \t    \n    // \t    if(frm.doc.status_1==\"Open\")\n    // \t    {\n    // \t       frm.disable_save()\n    // \t    }\n\t        \n\t   // }\n\t    \n\n\t   // if(frm.doc.status_1==\"Approved\"||frm.doc.status_1==\"On Leave\" ||frm.doc.status_1==\"Absent\" || frm.doc.attendance_request !=undefined || frm.doc.leave_application !=undefined||frm.doc.attendance_approver!=frappe.session.user)\n\t   // {\n\t   //        cur_frm.page.remove_inner_button(__('Approve'));\n\t   // }\n\t    \n\t    setTimeout(() => \n\t    {\n            frm.set_df_property('naming_series', 'hidden', 1);\n            \n        },500);\n\t    \n\t},\n\t\n\tleave_type1(frm)\n\t{\n\t    frm.set_value(\"leave_type\",frm.doc.leave_type1);  \n\t},\n\t\n\tview(frm)\n\t{\n\t    frm.set_value(\"location1\",frm.doc.location_link)\n\t    frm.refresh_field(\"location1\")\n\t   // window.open()\n\t},\n\t\n\tbefore_save(frm)\n\t{\n\t    frm.set_df_property('reporting_time',  'read_only',1);\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Tax Exemption Proof Submission",
  "enabled": 1,
  "modified": "2023-03-23 09:00:56.968631",
  "module": null,
  "name": "Employee Tax Exemption Proof Submission",
  "script": "frappe.ui.form.on('Employee Tax Exemption Proof Submission', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Tax Exemption Sub Category",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.005728",
  "module": null,
  "name": "Employee Tax Exemption Sub Category",
  "script": "frappe.ui.form.on('Employee Tax Exemption Sub Category', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Tax Exemption Declaration",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.043529",
  "module": null,
  "name": "Employee Tax Exemption Declaration",
  "script": "frappe.ui.form.on('Employee Tax Exemption Declaration', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \t\t\t\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Tax Exemption Category",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.081916",
  "module": null,
  "name": "Employee Tax Exemption Category",
  "script": "frappe.ui.form.on('Employee Tax Exemption Category', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t\t cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Structure",
  "enabled": 0,
  "modified": "2023-08-23 16:45:07.984172",
  "module": null,
  "name": "Salary Structure",
  "script": "frappe.ui.form.on('Salary Structure',\n{\n    onload(frm)\n    {\n        if(frm.is_new())  \n        {\n            frm.set_value(\"company\",\"Lamit\");\n            \n        }\n    },\n\trefresh(frm)\n\t{\n\t    $('li').removeClass(\"disabled\");\n\t    cur_frm.dashboard.hide();\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    frm.set_df_property(\"company\",\"read_only\",1);\n\t    \n\t     setTimeout(() => {\n            frm.remove_custom_button('Preview Salary Slip');\n            \n            // ?frm.remove_custom_button('Interview','Create');\n       \n        }, 10);\n\t},\n\t\n\t\n});\n\nfrappe.ui.form.on('Salary Detail',\n{\n    per_working_day:function(frm,cdt,cdn)\n\t{\n\t    var d=locals [cdt][cdn];\n\t    if(d.per_working_day)\n\t    {\n\t        var z=flt(d.per_working_day)*31;\n\t        frappe.model.set_value(cdt,cdn, \"amount1\",z);\n\t        frappe.model.set_value(cdt,cdn, \"amount_based_on_formula\",1);\n\t        frappe.model.set_value(cdt,cdn, \"formula\",\"payment_days\"+\"*\"+d.per_working_day);\n\t    }\n\t    else\n\t    {\n\t        frappe.model.set_value(cdt,cdn, \"amount_based_on_formula\",0);\n\t        frappe.model.set_value(cdt,cdn, \"formula\",undefined);\n\t    }\n\t},\n\t\n// \tformula:function(frm,cdt,cdn)\n// \t{\n// \t    var d=locals [cdt][cdn];\n// \t   // if(d.per_working_day)\n// \t   // {\n// \t   //     var z=flt(d.per_working_day)*31;\n// \t   //     frappe.model.set_value(cdt,cdn, \"amount1\",z);\n\t        \n// \t   // }\n// \t    frappe.model.set_value(cdt,cdn, \"amount\",d.amount1);\n// \t},\n\t\n\tamount1:function(frm,cdt,cdn)\n\t{\n\t    var d=locals [cdt][cdn];\n\t    if(d.per_working_day)\n\t    {\n\t        var z=flt(d.per_working_day)*31;\n\t        frappe.model.set_value(cdt,cdn, \"amount1\",z);\n\t        \n\t    }\n\t    frappe.model.set_value(cdt,cdn, \"amount\",d.amount1);\n\t},\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Income Tax Slab",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.159035",
  "module": null,
  "name": "Income Tax Slab",
  "script": "frappe.ui.form.on('Income Tax Slab', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t\t\t cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payroll Period",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.196118",
  "module": null,
  "name": "Payroll Period",
  "script": "frappe.ui.form.on('Payroll Period', \n{\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t\t cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Appraisal Template",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.236816",
  "module": null,
  "name": "Appraisal Template",
  "script": "frappe.ui.form.on('Appraisal Template', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \n\t     frm.add_custom_button(__('Appraisal'), function()\n            {\n            frappe.route_options = {\"kra_template\": frm.doc.name};\n            document = frappe.new_doc(\"Appraisal\");\n            frappe.set_route(\"Form\", \"Appraisal\", document.name);\n        \n        \n            })\n\t    \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Applicant",
  "enabled": 0,
  "modified": "2023-06-09 16:57:03.744202",
  "module": null,
  "name": "Job Applicant",
  "script": "frappe.ui.form.on('Job Applicant', \n{\n    refresh(frm) \n\t{\n\t    if(frm.is_new())\n\t    {\n\t        frm.set_df_property(\"status\",\"hidden\",1)\n\t    }\n\t    else\n\t    {\n\t        frm.set_df_property(\"status\",\"hidden\",0)\n\t    }\n\t    \n\t    $('li').removeClass(\"disabled\");\n\t    cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \n\t   // cur_frm.fields_dict['interview'].grid.wrapper.find('.btn-open-row').hide();\n    //     frm.get_field(\"interview\").grid.cannot_add_rows = true;\n    //     // $('*[data-fieldname=\"interview\"]').find('.grid-remove-rows').hide();\n    //     cur_frm.fields_dict['interview'].grid.wrapper.find('.btn-open-row').hide();\n    //     frm.fields_dict[\"interview\"].grid.wrapper.find('.grid-append-row').hide();\n    //     cur_frm.fields_dict['interview'].grid.wrapper.find('.grid-remove-rows').hide();\n    //     frm.fields_dict['interview'].grid.grid_buttons.addClass('hidden');\n    //      cur_frm.fields_dict['interview'].grid.wrapper.find('.btn-open-row').hide();\n\t    \n\t      setTimeout(() =>\n\t      {\n            frm.remove_custom_button('Job Offer','Create');\n            frm.remove_custom_button('Interview','Create');\n       \n          }, 10);\n          \n        // if (!frm.is_new()&&frm.doc.job_opening1!==undefined&&frm.doc.designation1!==undefined&&frm.doc.status!=\"Converted\")\n        if (!frm.is_new()&&frm.doc.status!=\"Converted\")\n        \n        {\n        \n            frm.add_custom_button(\"Schedule Interview\", () => \n            {\n                    let d = new frappe.ui.Dialog\n                    ({\n                                        title: 'Enter Interview Details ',\n                                        fields: [\n                                            \n                                            {\n                                                 label: 'Interview Round',\n                                                 fieldname: 'interview_roung',\n                                                fieldtype: 'Link',\n                                                options :'Interview Round',\n                                                \"reqd\": 1\n                                             },\n                                            //  {\n                                            //      label: 'Round',\n                                            //      fieldname: 'round_number',\n                                            //     fieldtype: 'Data',\n                                                \n                                            //     \"reqd\": 1,\n                                            //     description:\"Please mention the round of interviews  eg: first, second\"\n                                            //  },\n                                             {\n                                                 label: 'Interview Type',\n                                                 fieldname: 'interview_type',\n                                                fieldtype: 'Select',\n                                                options :'Direct\\nGoogle Meet',\n                                                 \"reqd\": 1,\n                                               \n                                             },\n                                              {\n                                                label: 'Place',\n                                                 fieldname: 'place',\n                                                fieldtype: 'Data',\n                                                'depends_on': \"eval:doc.interview_type===\\\"Direct\\\"\",\n                                                'mandatory_depends_on': \"eval:doc.interview_type===\\\"Direct\\\"\",\n                                                 \"reqd\": 1,\n                                             },\n                                             \n                                             {\n                                                 label: 'Google Meet Link',\n                                                 fieldname: 'meet_link',\n                                                fieldtype: 'Data',\n                                                'depends_on': \"eval:doc.interview_type===\\\"Google Meet\\\"\",\n                                                'mandatory_depends_on':'eval:doc.interview_type===\\\"Google Meet\\\"'\n                                             },\n                                             {\n                                                label: 'Interview Date',\n                                                 fieldname: 'interview_date',\n                                                fieldtype: 'Date',\n                                                'depends_on':'interview_type',\n                                                 \"reqd\": 1,\n                                             },\n                                             {\n                                                label: 'Interview Time',\n                                                 fieldname: 'interview_time',\n                                                fieldtype: 'Data',\n                                                'depends_on':'interview_type',\n                                                 \"reqd\": 1,\n                                             },\n                                             \n                                            {\n                        \t\t\t            fieldtype:'Table', fieldname: 'interview_panel',\n                        \t\t\t            description: __('Interview Panel'),\n                                    \t\t\tfields:\n                                    \t\t\t[\n                                    \t\t\t\t{fieldtype:'Link', fieldname:'employee',label: __('Employee'),options:\"Employee\",in_list_view:1,columns:1.2,},\n                                    \t\t\t],\n                                            },\n                                        ],\n                                        primary_action_label: 'Submit',\n                                        primary_action(values) \n                                        {\n                                            var round=0\n                                            var tr\n                                            frm.set_value('status',\"Interview Scheduled\");\n                                           \n                                            if(frm.doc.interview_round==undefined)\n                                            {\n                                                round=1\n                                            }\n                                            else\n                                            {\n                                                round=flt(frm.doc.interview_round)+1\n                                            }\n\n                                            if(round==1)\n                                            {\n                                                if(frm.doc.trigger_notification1==undefined)\n                                                {\n                                                    tr=1\n                                                }\n                                                else\n                                                {\n                                                    tr=flt(frm.doc.trigger_notification1)+1\n                                                }\n                                              frm.set_value('trigger_notification1',tr);\n                                              frm.set_value('interview_round',1);\n                                              frm.set_value('interview_round1',values.interview_roung);\n                                              frm.set_value('interview_type1',values.interview_type);\n                                              frm.set_value('interview_date1',values.interview_date);\n                                              frm.set_value('status1',\"Interview Scheduled\");\n                                              frm.set_value('meeting_link1',values.meet_link);\n                                              frm.set_value('place1',values.place);\n                                              frm.set_value('interview_time1',values.interview_time);\n                                              \n                                              \n                                              $.each(values.interview_panel,function(i,v)\n                                              {\n                                                 var child = cur_frm.add_child(\"interview_panel1\");\n                                                 frappe.model.set_value(child.doctype, child.name, \"employee\",v.employee); \n                                                 cur_frm.refresh_field(\"interview_panel1\");\n                                              })\n                                            }\n                                            else if(round==2)\n                                            {\n                                               if(frm.doc.trigger_notification2==undefined)\n                                                {\n                                                    tr=1\n                                                }\n                                                else\n                                                {\n                                                    tr=flt(frm.doc.trigger_notification2)+1\n                                                }\n                                              frm.set_value('trigger_notification2',tr);\n                                                \n                                              frm.set_value('interview_round',2);\n                                              frm.set_value('interview_type2',values.interview_type);\n                                              frm.set_value('interview_round2',values.interview_roung);\n                                              frm.set_value('interview_date2',values.interview_date);\n                                              frm.set_value('status2',\"Interview Scheduled\");\n                                              frm.set_value('meeting_link2',values.meet_link);\n                                              frm.set_value('place2',values.place);\n                                              frm.set_value('interview_time2',values.interview_time);\n                                              \n                                              \n                                              $.each(values.interview_panel,function(i,v)\n                                              {\n                                                 var child = cur_frm.add_child(\"interview_panel2\");\n                                                 frappe.model.set_value(child.doctype, child.name, \"employee\",v.employee); \n                                                 cur_frm.refresh_field(\"interview_panel2\");\n                                              });\n                                            }\n                                            else if(round==3)\n                                            {\n                                                if(frm.doc.trigger_notification3==undefined)\n                                                {\n                                                    tr=1\n                                                }\n                                                else\n                                                {\n                                                    tr=flt(frm.doc.trigger_notification3)+1\n                                                }\n                                              frm.set_value('trigger_notification3',tr);\n                                                \n                                              frm.set_value('interview_round',3);\n                                              frm.set_value('interview_type3',values.interview_type);\n                                              frm.set_value('interview_round3',values.interview_roung);\n                                              frm.set_value('interview_date3',values.interview_date);\n                                              frm.set_value('status3',\"Interview Scheduled\");\n                                              frm.set_value('meeting_link3',values.meet_link);\n                                              frm.set_value('place3',values.place);\n                                              frm.set_value('interview_time3',values.interview_time);\n                                              \n                                              \n                                              $.each(values.interview_panel,function(i,v)\n                                              {\n                                                 var child = cur_frm.add_child(\"interview_panel3\");\n                                                 frappe.model.set_value(child.doctype, child.name, \"employee\",v.employee); \n                                                 cur_frm.refresh_field(\"interview_panel3\");\n                                              });\n                                            }\n                                            else if(round==4)\n                                            {\n                                                if(frm.doc.trigger_notification4==undefined)\n                                                {\n                                                    tr=1\n                                                }\n                                                else\n                                                {\n                                                    tr=flt(frm.doc.trigger_notification4)+1\n                                                }\n                                              frm.set_value('trigger_notification4',tr);\n                                                \n                                              frm.set_value('interview_round',4);\n                                              frm.set_value('interview_type4',values.interview_type);\n                                              frm.set_value('interview_round4',values.interview_roung);\n                                              frm.set_value('interview_date4',values.interview_date);\n                                              frm.set_value('status4',\"Interview Scheduled\");\n                                              frm.set_value('meeting_link4',values.meet_link);\n                                              frm.set_value('place4',values.place);\n                                              frm.set_value('interview_time4',values.interview_time);\n                                              \n                                              \n                                              $.each(values.interview_panel,function(i,v)\n                                              {\n                                                 var child = cur_frm.add_child(\"interview_panel4\");\n                                                 frappe.model.set_value(child.doctype, child.name, \"employee\",v.employee); \n                                                 cur_frm.refresh_field(\"interview_panel4\");\n                                              });\n                                            }\n                                            \n                                            cur_frm.save();\n                                            d.hide();\n                                        }\n                                  \n                    });\n                    d.show();\n            })\n            frm.change_custom_button_type('Schedule Interview', null, 'success');\n            \n                   \n            frm.add_custom_button(\"Reschedule Interview\", () => \n            {\n                    let d = new frappe.ui.Dialog\n                    ({\n                                        title: 'Enter Interview Details ',\n                                        fields: [\n                                            \n                                            {\n                                                 label: 'Interview Round',\n                                                 fieldname: 'interview_roung',\n                                                fieldtype: 'Data',\n                                                \"read_only\":1,\n                                                options :'Interview Round',\n                                                \"reqd\": 1\n                                             },\n                                            //  {\n                                            //      label: 'Round',\n                                            //      fieldname: 'round_number',\n                                            //     fieldtype: 'Data',\n                                                \n                                            //     \"reqd\": 1,\n                                            //     description:\"Please mention the round of interviews  eg: first, second\"\n                                            //  },\n                                             {\n                                                 label: 'Interview Type',\n                                                 fieldname: 'interview_type',\n                                                fieldtype: 'Select',\n                                                options :'Direct\\nGoogle Meet',\n                                                 \"reqd\": 1,\n                                               \n                                             },\n                                             {\n                                                label: 'Place',\n                                                 fieldname: 'place',\n                                                fieldtype: 'Data',\n                                                'depends_on': \"eval:doc.interview_type===\\\"Direct\\\"\",\n                                                'mandatory_depends_on': \"eval:doc.interview_type===\\\"Direct\\\"\",\n                                                //  \"reqd\": 1,\n                                             },\n                                             \n                                             {\n                                                 label: 'Google Meet Link',\n                                                 fieldname: 'meet_link',\n                                                fieldtype: 'Data',\n                                                'depends_on': \"eval:doc.interview_type===\\\"Google Meet\\\"\",\n                                                'mandatory_depends_on':'eval:doc.interview_type===\\\"Google Meet\\\"'\n                                             },\n                                            \n                                             {\n                                                label: 'Interview Date',\n                                                 fieldname: 'interview_date',\n                                                fieldtype: 'Date',\n                                                'depends_on':'interview_type',\n                                                 \"reqd\": 1,\n                                             },\n                                             {\n                                                label: 'Interview Time',\n                                                 fieldname: 'interview_time',\n                                                fieldtype: 'Data',\n                                                'depends_on':'interview_type',\n                                                 \"reqd\": 1,\n                                             },\n                                              {\n                        \t\t\t            fieldtype:'Table', fieldname: 'interview_panel',\n                        \t\t\t            description: __('Interview Panel'),\n                                    \t\t\tfields:\n                                    \t\t\t[\n                                    \t\t\t\t{fieldtype:'Link', fieldname:'employee',label: __('Employee'),options:\"Employee\",in_list_view:1,columns:1.2,},\n                                    \t\t\t],\n                                            },\n\n                                        ],\n                                        primary_action_label: 'Submit',\n                                        primary_action(values) \n                                        {\n                                            var tr\n                                            frm.set_value('status',\"Rescheduled Interview\");\n\n                                            if(frm.doc.interview_round==1)\n                                            {\n                                                if(frm.doc.trigger_notification1==undefined)\n                                                {\n                                                    tr=1\n                                                }\n                                                else\n                                                {\n                                                    tr=flt(frm.doc.trigger_notification1)+1\n                                                }\n                                                \n                                              frm.set_value('trigger_notification1',tr);\n                                              frm.set_value('interview_type1',values.interview_type);\n                                              frm.set_value('interview_date1',values.interview_date);\n                                              frm.set_value('status1',\"Rescheduled Interview\");\n                                              frm.set_value('meeting_link1',values.meet_link);\n                                              frm.set_value('place1',values.place);\n                                              frm.set_value('interview_time1',values.interview_time);\n                                              \n                                              cur_frm.clear_table(\"interview_panel1\")\n\n                                              $.each(values.interview_panel,function(i,v)\n                                              {\n                                                 var child = cur_frm.add_child(\"interview_panel1\");\n                                                 frappe.model.set_value(child.doctype, child.name, \"employee\",v.employee); \n                                                 cur_frm.refresh_field(\"interview_panel1\");\n                                              })\n                                            }\n                                            else if(frm.doc.interview_round==2)\n                                            {\n                                                if(frm.doc.trigger_notification2==undefined)\n                                                {\n                                                    tr=1\n                                                }\n                                                else\n                                                {\n                                                    tr=flt(frm.doc.trigger_notification2)+1\n                                                }\n                                                \n                                              frm.set_value('trigger_notification2',tr);\n                                              frm.set_value('interview_type2',values.interview_type);\n                                              frm.set_value('interview_date2',values.interview_date);\n                                              frm.set_value('status2',\"Rescheduled Interview\");\n                                              frm.set_value('meeting_link2',values.meet_link);\n                                              frm.set_value('place2',values.place);\n                                              frm.set_value('interview_time2',values.interview_time);\n                                              \n                                              cur_frm.clear_table(\"interview_panel2\")\n\n                                              $.each(values.interview_panel,function(i,v)\n                                              {\n                                                 var child = cur_frm.add_child(\"interview_panel2\");\n                                                 frappe.model.set_value(child.doctype, child.name, \"employee\",v.employee); \n                                                 cur_frm.refresh_field(\"interview_panel2\");\n                                              })\n                                            }\n                                            else if(frm.doc.interview_round==3)\n                                            {\n                                                if(frm.doc.trigger_notification3==undefined)\n                                                {\n                                                    tr=1\n                                                }\n                                                else\n                                                {\n                                                    tr=flt(frm.doc.trigger_notification3)+1\n                                                }\n                                                \n                                              frm.set_value('trigger_notification3',tr);\n                                              frm.set_value('interview_type3',values.interview_type);\n                                              frm.set_value('interview_date3',values.interview_date);\n                                              frm.set_value('status3',\"Rescheduled Interview\");\n                                              frm.set_value('meeting_link3',values.meet_link);\n                                              frm.set_value('place3',values.place);\n                                              frm.set_value('interview_time3',values.interview_time);\n                                              \n                                              cur_frm.clear_table(\"interview_panel3\")\n\n                                              $.each(values.interview_panel,function(i,v)\n                                              {\n                                                 var child = cur_frm.add_child(\"interview_panel3\");\n                                                 frappe.model.set_value(child.doctype, child.name, \"employee\",v.employee); \n                                                 cur_frm.refresh_field(\"interview_panel3\");\n                                              })\n                                            }\n                                            else if(frm.doc.interview_round==4)\n                                            {\n                                                if(frm.doc.trigger_notification4==undefined)\n                                                {\n                                                    tr=1\n                                                }\n                                                else\n                                                {\n                                                    tr=flt(frm.doc.trigger_notification4)+1\n                                                }\n                                                \n                                              frm.set_value('trigger_notification4',tr);\n                                              frm.set_value('interview_type4',values.interview_type);\n                                              frm.set_value('interview_date4',values.interview_date);\n                                              frm.set_value('status4',\"Rescheduled Interview\");\n                                              frm.set_value('meeting_link4',values.meet_link);\n                                              frm.set_value('place4',values.place);\n                                              frm.set_value('interview_time4',values.interview_time);\n                                              \n                                              cur_frm.clear_table(\"interview_panel4\")\n\n                                              $.each(values.interview_panel,function(i,v)\n                                              {\n                                                 var child = cur_frm.add_child(\"interview_panel4\");\n                                                 frappe.model.set_value(child.doctype, child.name, \"employee\",v.employee); \n                                                 cur_frm.refresh_field(\"interview_panel4\");\n                                              })\n                                            }\n\n                                                cur_frm.save();\n                                                d.hide();\n                                        }\n                                  \n                    });\n                    d.show();\n                    \n                    var interview_round = d.get_field(\"interview_roung\");\n                    console.log(\"frm.doc.interview_round1   \",frm.doc.interview_round1)\n                    if(frm.doc.interview_round==1)\n                    {\n                        interview_round.value=\"Interview Round1\"\n                    }\n                    else if(frm.doc.interview_round==2)\n                    {\n                      interview_round.value=frm.doc.interview_round2\n                    }\n                    else if(frm.doc.interview_round==3)\n                    {\n                      interview_round.value=frm.doc.interview_round3\n                    }\n                    else if(frm.doc.interview_round==4)\n                    {\n                      interview_round.value=frm.doc.interview_round4\n                    }\n                    interview_round.refresh()\n                    \n            });\n            frm.change_custom_button_type('Reschedule Interview', null, 'success');\n            \n            frm.add_custom_button(\"Interview Status\", () => \n            {\n                    let d = new frappe.ui.Dialog\n                    ({\n                                        title: 'Enter Interview Details ',\n                                        fields: [\n                                            \n                                            {\n                                                 label: 'Interview Round',\n                                                 fieldname: 'interview_roung',\n                                                fieldtype: 'Data',\n                                                \"read_only\":1,\n                                                options :'Interview Round',\n                                                // \"reqd\": 1,\n                                             },\n                                             {\n                                                label: 'Status',\n                                                 fieldname: 'status1',\n                                                fieldtype: 'Select',\n                                                options:[\"No Response\",\"Hold\",\"Cleared\",\"Failed\"],\n                                                 \"reqd\": 1,\n                                             },\n                                             \n                                             {\n                                                 label:'Rating',\n                                                 fieldname: 'rating',\n                                                fieldtype: 'Rating',\n                                                'mandatory_depends_on':'eval:doc.status1===\"Cleared\"||doc.status1===\"Failed\"'\n                                             },\n                                             {\n                                                 label:'Remark',\n                                                 fieldname: 'remark',\n                                                fieldtype: 'Small Text',\n                                                'mandatory_depends_on':'eval:doc.status1===\"Cleared\"||doc.status1===\"Failed\"||doc.status1===\"Hold\"'\n                                             },\n\n\n                                        ],\n                                        primary_action_label: 'Submit',\n                                        primary_action(values) \n                                        {\n                                            console.log(\"values.rating   \",values.rating)\n                                            \n                                            if(values.status1==\"No Response\")\n                                            {\n                                                frm.set_value('status',values.status1);\n                                            }\n                                            else if(values.status1==\"Hold\")\n                                            {\n                                                if(frm.doc.interview_round==1)\n                                                {\n                                                    frm.set_value('status',\"Hold Round1\");\n                                                }\n                                                else if(frm.doc.interview_round==2)\n                                                {\n                                                    frm.set_value('status',\"Hold Round2\");\n                                                }\n                                                else if(frm.doc.interview_round==3)\n                                                {\n                                                    frm.set_value('status',\"Hold Round3\");\n                                                }\n                                                else if(frm.doc.interview_round==4)\n                                                {\n                                                    frm.set_value('status',\"Hold Round4\");\n                                                }\n                                            }\n                                            else if(values.status1==\"Cleared\")\n                                            {\n                                                if(frm.doc.interview_round==1)\n                                                {\n                                                    frm.set_value('status',\"Cleared Round1\");\n                                                }\n                                                else if(frm.doc.interview_round==2)\n                                                {\n                                                    frm.set_value('status',\"Cleared Round2\");\n                                                }\n                                                else if(frm.doc.interview_round==3)\n                                                {\n                                                    frm.set_value('status',\"Cleared Round3\");\n                                                }\n                                                else if(frm.doc.interview_round==4)\n                                                {\n                                                    frm.set_value('status',\"Cleared Round4\");\n                                                }\n                                            }\n                                            else if(values.status1==\"Failed\")\n                                            {\n                                                frm.set_value('status',\"Rejected\");\n                                            }\n\n                                            if(frm.doc.interview_round==1)\n                                            {\n                                              frm.set_value('rating1',values.rating);\n                                              frm.set_value('status1',values.status1);\n                                              frm.set_value('remark1',values.remark);\n                                            }\n                                            else if(frm.doc.interview_round==2)\n                                            {\n                                                  frm.set_value('rating2',values.rating);\n                                                  frm.set_value('status2',values.status1);\n                                                  frm.set_value('remark2',values.remark);\n                                            }\n                                            else if(frm.doc.interview_round==3)\n                                            {\n                                                  frm.set_value('rating3',values.rating);\n                                                  frm.set_value('status3',values.status1);\n                                                  frm.set_value('remark3',values.remark);\n                                            }\n                                            else if(frm.doc.interview_round==4)\n                                            {\n                                                  frm.set_value('rating4',values.rating);\n                                                  frm.set_value('status4',values.status1);\n                                                  frm.set_value('remark4',values.remark);\n                                            }\n\n                                                cur_frm.save();\n                                                d.hide();\n                                        }\n                                  \n                    });\n                    d.show();\n                    \n                    var interview_round = d.get_field(\"interview_roung\");\n                    \n                    if(frm.doc.interview_round==1)\n                    {\n                      interview_round.value=frm.doc.interview_round1\n                    }\n                    else if(frm.doc.interview_round==2)\n                    {\n                      interview_round.value=frm.doc.interview_round2\n                    }\n                    else if(frm.doc.interview_round==3)\n                    {\n                      interview_round.value=frm.doc.interview_round3\n                    }\n                    else if(frm.doc.interview_round==4)\n                    {\n                      interview_round.value=frm.doc.interview_round4\n                    }\n                    interview_round.refresh()\n                    \n            });\n            frm.change_custom_button_type('Interview Status', null, 'success');\n                     \n            frm.add_custom_button(\"Applicant Status\", () => \n            {\n                 var trigger_tbl=1\n                    let d = new frappe.ui.Dialog\n                    ({\n                                fields: [\n                                             {\n                                                label: 'Status',\n                                                 fieldname: 'status1',\n                                                fieldtype: 'Select',\n                                                options:[\"No Response\",\"Hold\",\"Selected\",\"Rejected\",\"Selected & Awaiting Response\"],\n                                                 \"reqd\": 1,\n                                                'onchange':() =>\n                                                 { \n                                                     if(trigger_tbl==1)\n                                                     {\n                                                         var status1 = d.get_field(\"status1\");\n                                                         var remark = d.get_field(\"remark\");\n                                                         \n                                                         if(status1.value==\"Rejected\")\n                                                         {\n                                                             remark.value=frm.doc.reason_for_rejection\n                                                         }\n                                                         else\n                                                         {\n                                                             remark.value=frm.doc.remark\n                                                         }\n                                                         remark.refresh()\n                                                         \n                                                         trigger_tbl=2\n                                                     }\n                                                     else\n                                                     {\n                                                        trigger_tbl=1 \n                                                     }\n                                                     \n                                                 },\n                                             },\n                                             {\n                                                 label: 'Remark',\n                                                 fieldname: 'remark',\n                                                fieldtype: 'Small Text',\n                                                \"reqd\": 1,\n                                                'mandatory_depends_on':'eval:doc.status1===\"Rejected\"'\n                                               \n                                             },\n                                        ],\n                                        primary_action_label: 'Submit',\n                                        primary_action(values)\n                                        {\n                                            frm.set_value('status',values.status1);\n                                            if(values.status1==\"Rejected\")\n                                            {\n                                                frm.set_value('reason_for_rejection',values.remark)\n                                            }\n                                            else\n                                            {\n                                                frm.set_value('remark',values.remark)\n                                            }\n                                            cur_frm.save();\n                                            d.hide();\n                                        }\n                                        \n                                        \n                                        \n                    });\n                    d.show();\n            })\n            frm.change_custom_button_type('Applicant Status', null, 'success');\n            \n            frm.add_custom_button(__('Employee'), function()\n            {\n                frappe.route_options = \n                {\n                    \"company\":\"Lamit\",\n                    \"salutation\":frm.doc.salutation,\n                    \"first_name\":frm.doc.first_name,\n                    \"last_name\":frm.doc.last_name,\n                    \"employee_name\":frm.doc.applicant_name,\n                    \"personal_email\":frm.doc.email_id,\n                    \"cell_number\":frm.doc.phone_number,\n                    \"designation\":frm.doc.designation1,\n                    \"job_applicant\":frm.doc.name,\n                    \"job_applicant1\":frm.doc.name,\n                };\n                \n                document = frappe.new_doc(\"Employee\");\n                frappe.set_route(\"Form\",\"Employee\", document.name);\n            });\n            frm.change_custom_button_type('Employee', null, 'success');\n\n\n\n            if(frm.doc.status==\"Selected\"||frm.doc.status==\"Cleared Round4\"||frm.doc.status==\"Selected & Awaiting Response\")\n    \t    {\n    \t            setTimeout(() =>\n                    { \n                                cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                                cur_frm.page.remove_inner_button(__('Reschedule Interview'));\n                                cur_frm.page.remove_inner_button(__('Interview Status'));\n                    },0);    \n    \t    }\n    \t    else if(frm.doc.status==\"Hold Round1\"|| frm.doc.status==\"Hold Round2\"|| frm.doc.status==\"Hold Round3\"|| frm.doc.status==\"Hold Round4\")\n    \t    {\n    \t            setTimeout(() =>\n                    { \n                                cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                                cur_frm.page.remove_inner_button(__('Reschedule Interview'));\n                                cur_frm.page.remove_inner_button(__('Employee'));\n                    },0); \n    \t    }\n    \t    else if(frm.doc.status==\"Cleared Round1\" || frm.doc.status==\"Cleared Round2\"|| frm.doc.status==\"Cleared Round3\")\n    \t    {\n    \t            setTimeout(() =>\n                    { \n                                cur_frm.page.remove_inner_button(__('Reschedule Interview'));\n                                cur_frm.page.remove_inner_button(__('Interview Status'));\n                                cur_frm.page.remove_inner_button(__('Employee'));\n                    },0);  \n    \t    }\n    \t    else if(frm.doc.status==\"Open\")\n    \t    {\n    \t            setTimeout(() =>\n                    { \n                                cur_frm.page.remove_inner_button(__('Reschedule Interview'));\n                                cur_frm.page.remove_inner_button(__('Interview Status'));\n                                cur_frm.page.remove_inner_button(__('Employee'));\n                               \n                    },0); \n    \t    }\n    \t    else if(frm.doc.status==\"Rejected\")\n    \t    {\n    \t        setTimeout(() =>\n                    { \n                                cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                                cur_frm.page.remove_inner_button(__('Reschedule Interview'));\n                                cur_frm.page.remove_inner_button(__('Interview Status'));\n                                cur_frm.page.remove_inner_button(__('Applicant Status'));\n                                cur_frm.page.remove_inner_button(__('Employee'));\n                    },0);    \n    \t    }\n    \t    else if(frm.doc.status==\"Hold\")\n    \t    {\n    \t                setTimeout(() =>\n                        { \n                                    cur_frm.page.remove_inner_button(__('Interview Status'));\n                                    cur_frm.page.remove_inner_button(__('Reschedule Interview'));\n                                    cur_frm.page.remove_inner_button(__('Employee'));\n                        },0); \n    \t    }\n    \t    else if(frm.doc.status==\"No Response\")\n    \t    {\n    \t       // cur_frm.page.remove_inner_button(__('Interview Status'));\n            //     cur_frm.page.remove_inner_button(__('Reschedule Interview'));\n    \t        \n    \t        if(frm.doc.interview_round==undefined)\n    \t        {\n    \t                setTimeout(() =>\n                        { \n                                    // cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                                    cur_frm.page.remove_inner_button(__('Reschedule Interview'));\n                                    cur_frm.page.remove_inner_button(__('Interview Status'));\n                                    cur_frm.page.remove_inner_button(__('Employee'));\n                        },0); \n    \t        }\n                else if(frm.doc.interview_round ==1)   //&&frm.doc.status1 !=\"Cleared\")\n    \t        {\n    \t                setTimeout(() =>\n                        { \n                                    // cur_frm.page.remove_inner_button(__('Interview Status'));\n                                    cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                                    cur_frm.page.remove_inner_button(__('Employee'));\n                        },0);\n    \t        }\n    \t        else if(frm.doc.interview_round ==2)\n    \t        {\n    \t                setTimeout(() =>\n                        { \n                                    // cur_frm.page.remove_inner_button(__('Interview Status'));\n                                    cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                                    cur_frm.page.remove_inner_button(__('Employee'));\n                        },0);\n    \t        }\n    \t        else if(frm.doc.interview_round ==3)\n    \t        {\n    \t                setTimeout(() =>\n                        { \n                                    cur_frm.page.remove_inner_button(__('Interview Status'));\n                                    cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                                    cur_frm.page.remove_inner_button(__('Employee'));\n                        },0);\n    \t        }\n    \t        else if(frm.doc.interview_round ==4)\n    \t        {\n    \t                setTimeout(() =>\n                        { \n                                    // cur_frm.page.remove_inner_button(__('Interview Status'));\n                                    cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                                    cur_frm.page.remove_inner_button(__('Employee'));\n                        },0);\n    \t        }        \n                        \n                        \n            \n    \t    }\n    \t    else if (frm.doc.status==\"Interview Scheduled\"||frm.doc.status==\"Rescheduled Interview\")\n    \t    {\n    \t        if(frm.doc.interview_round ==1)   //&&frm.doc.status1 !=\"Cleared\")\n    \t        {\n    \t            if(frm.doc.status1 !=\"Cleared\")\n    \t            {\n        \t            setTimeout(() =>\n                        { \n                                    cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                        },0); \n    \t            }\n    \t            else if(frm.doc.status1 ==\"Hold\")\n    \t            {\n    \t                setTimeout(() =>\n                        { \n                                    cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                                    cur_frm.page.remove_inner_button(__('Reschedule Interview'));\n                        },0);\n    \t            }\n    \t        }\n    \t        else if(frm.doc.interview_round ==2)\n    \t        {\n    \t           if(frm.doc.status2 !=\"Cleared\")\n    \t            {\n        \t            setTimeout(() =>\n                        { \n                                    cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                        },0); \n    \t            }\n    \t            else if(frm.doc.status2 ==\"Hold\")\n    \t            {\n    \t                setTimeout(() =>\n                        { \n                                    cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                                    cur_frm.page.remove_inner_button(__('Reschedule Interview'));\n                        },0);\n    \t            }\n    \t        }\n    \t        else if(frm.doc.interview_round ==3)\n    \t        {\n    \t           if(frm.doc.status3 !=\"Cleared\")\n    \t            {\n        \t            setTimeout(() =>\n                        { \n                                    cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                        },0); \n    \t            }\n    \t            else if(frm.doc.status3 ==\"Hold\")\n    \t            {\n    \t                setTimeout(() =>\n                        { \n                                    cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                                    cur_frm.page.remove_inner_button(__('Reschedule Interview'));\n                        },0);\n    \t            }\n    \t        }\n    \t        else if(frm.doc.interview_round ==4)\n    \t        {\n    \t           if(frm.doc.status4 !=\"Cleared\")\n    \t            {\n        \t            setTimeout(() =>\n                        { \n                                    cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                        },0); \n    \t            }\n    \t            else if(frm.doc.status4 ==\"Hold\")\n    \t            {\n    \t                setTimeout(() =>\n                        { \n                                    cur_frm.page.remove_inner_button(__('Schedule Interview'));\n                                    cur_frm.page.remove_inner_button(__('Reschedule Interview'));\n                        },0);\n    \t            }\n    \t        }\n    \t        \n    \t                setTimeout(() =>\n                        { \n                                    cur_frm.page.remove_inner_button(__('Applicant Status'));\n                                    cur_frm.page.remove_inner_button(__('Employee'));\n                        },0);\n    \t    }  \n            \n        \n        }              \n\t},\n\t\n\tafter_save(frm)\n\t{\n\t    frm.reload_doc()\n\t},\n\t\n\tfirst_name:function(frm)\n\t{\n\t    frm.set_value(\"applicant_name\",frm.doc.first_name)\n\t}\n\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Interview Round",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.315895",
  "module": null,
  "name": "Interview Round",
  "script": "frappe.ui.form.on('Interview Round', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t      cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t setTimeout(() => {\n            frm.remove_custom_button('Create Interview');\n            \n            // frm.remove_custom_button('Interview','Create');\n       \n        }, 10);\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Appointment Letter",
  "enabled": 0,
  "modified": "2023-03-23 09:00:57.354216",
  "module": null,
  "name": "Appointment Letter",
  "script": "frappe.ui.form.on('Appointment Letter',\n{\n    onload(frm,cdt,cdn)\n    {\n        if(frm.is_new())\n        {\n            var today = new Date();\n            var year = today.getFullYear();\n            cur_frm.set_value(\"year\",year);\n            $.each(frm.doc.terms,function(i,v)\n            {\n                   v.title=\"dummy\";\n                   v.description=\"dummy\";\n            });\n            frm.refresh_field(\"terms\");\n        }\n        \n    },\n    \n    refresh(frm)\n    {\n        // frm.set_df_property(\"job_applicant\",\"reqd\",0)\n        // frm.set_df_property(\"applicant_name\",\"reqd\",0)\n        //  frm.set_df_property(\"job_applicant\",\"hidden\",1)\n        frm.set_df_property(\"terms\",\"hidden\",1)\n        frm.set_df_property(\"terms\",\"reqd\",0)\n        frm.set_df_property(\"introduction\",\"hidden\",1)\n        frm.set_df_property(\"introduction\",\"reqd\",0)\n         $('li').removeClass(\"disabled\");\n          cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \n    \tvar bs = frm.doc.basic_salary\n        var yr = flt(bs) * 12\n        // console.log(\"Yearly\",yr)\n        frm.set_value(\"yearly\",yr)\n        var bn = frm.doc.bonus\n        \n        var gt = frm.doc.gratuity\n        var total = flt(yr) + flt(bn) \n        // console.log(\"Total\",total)\n        frm.set_value(\"total\",total)\n\t    \n    },\n    \n    // employee(frm)\n    // {\n    //     if(frm.doc.employee !=undefined)\n    //     {\n    //         if(frm.doc.employee.length>0)\n    //         {\n    //                       frappe.call\n    //                       ({\n    //                             method: \"frappe.client.get_list\",\n    //                             args: \n    //                                     {\n    //                                         doctype:\"Employee\",\n    //                                         filters: { 'name':frm.doc.employee_number},\n    //                                         fields:[\"employee_number\",\"job_applicant\"],\n    //                                     },\n                                        \n    //                                 callback: function(r)\n    //                                 {\n    //                                     console.log(r)\n    //                                       if(r.message[0])\n    //                                       {\n    //                                           console.log(\"r1\")\n    //                                           if(r.message[0].job_applicant)\n    //                                           {\n    //                                               console.log(\"r2\")\n    //                                                 frm.set_value(\"job_applicant\",r.message[0].job_applicant);\n    //                                           }\n    //                                           else\n    //                                           {\n    //                                               console.log(\"r3\")\n    //                                               frm.set_value(\"job_applicant\",r.message[0].employee_number);\n    //                                           }\n    //                                       }\n    //                                 }\n    //                       });\n    //         }\n    //         else\n    //         {\n    //             frm.set_value(\"job_applicant\",undefined);\n    //         }\n    //     }\n    //     else\n    //     {\n    //             frm.set_value(\"job_applicant\",undefined);\n    //     }\n    // },\n    \n    appointment_letter_template(frm)\n    {\n        if(frm.doc.appointment_letter_template !=undefined)\n        {\n            if(frm.doc.appointment_letter_template.length>0)\n            {\n                frappe.call\n    \t        ({\n    \t            method:'frappe.client.get',\n    \t            args:\n    \t            {\n    \t                'doctype':'Appointment Letter Template',\n    \t                filters:\n    \t                {\n    \t                    \n    \t                    name:frm.doc.appointment_letter_template\n    \t                }\n    \t            },\n    \t            \n    \t            callback:function(r)\n    \t            {\n    \t                if(r)\n    \t                {\n    \t                    frm.set_value(\"header\",r.message.header_section);\n    \t                    frm.set_value(\"footer_section\",r.message.footer_section);\n    \t                    frm.set_value(\"package_section_content\",r.message.package_section_content);\n\n    \t                    $.each(r.message.common_salary_details,function(i,v)\n                            {\n                                    var child = cur_frm.add_child(\"common_salary_details\");\n                                    frappe.model.set_value(child.doctype, child.name, \"components\",v.components);\n                                    frappe.model.set_value(child.doctype, child.name, \"comments\",v.comments);\n                                    frappe.model.set_value(child.doctype, child.name, \"amount\",v.amount);\n                            });\n                            cur_frm.refresh_field(\"common_salary_details\");\n    \t                }\n    \t            }\n    \t        });\n            }\n            else\n            {\n                 frm.set_value(\"header\",undefined);\n    \t         frm.set_value(\"footer_section\",undefined);\n    \t         frm.set_value(\"package_section_content\",undefined);\n    \t         cur_frm.clear_table(\"common_salary_details\");\n    \t         cur_frm.refresh_fields(\"common_salary_details\");\n    \t         \n    \t       //  frm.set_value(\"footer_section\",r.message.footer_section);\n            }\n        }\n        else\n        {\n                 frm.set_value(\"header\",undefined);\n    \t         frm.set_value(\"footer_section\",undefined);\n    \t         frm.set_value(\"package_section_content\",undefined);\n    \t         cur_frm.clear_table(\"common_salary_details\");\n    \t         cur_frm.refresh_fields(\"common_salary_details\");\n    \t       //  frm.set_value(\"footer_section\",r.message.footer_section);\n        }\n        \n        if(frm.doc.terms)\n        {\n            if(frm.doc.terms.length>0)\n            {\n                $.each(frm.doc.terms,function(i,v)\n                {\n                      v.title=\"dummy\";\n                      v.description=\"dummy\";\n                });\n            }\n            else\n            {\n                var child = cur_frm.add_child(\"terms\");\n                frappe.model.set_value(child.doctype, child.name, \"title\",\"dummy\");\n                frappe.model.set_value(child.doctype, child.name, \"description\",\"dummy\");\n            }\n        }\n        else\n        {\n            console.log(\"x2\");\n            var child = cur_frm.add_child(\"terms\");\n            frappe.model.set_value(child.doctype, child.name, \"title\",\"dummy\");\n            frappe.model.set_value(child.doctype, child.name, \"description\",\"dummy\");\n        }\n        \n            \n        \n        frm.refresh_field(\"terms\");\n    },\n    \n    salary_structure(frm)\n    {\n        if(frm.doc.salary_structure !=undefined)\n        {\n            if(frm.doc.salary_structure.length>0)\n            {\n                frappe.call\n    \t        ({\n    \t            method:'frappe.client.get',\n    \t            args:\n    \t            {\n    \t                'doctype':'Salary Structure',\n    \t                filters:\n    \t                {\n                             name:frm.doc.salary_structure\n    \t                }\n    \t            },\n    \t            \n    \t            callback:function(r)\n    \t            {\n    \t                if(r)\n    \t                {\n    \t                    $.each(r.message.earnings,function(i,v)\n                            {\n                                    var child = cur_frm.add_child(\"salary_details\");\n                                    frappe.model.set_value(child.doctype, child.name, \"salary_component\",v.salary_component);\n                                    frappe.model.set_value(child.doctype, child.name, \"abbr\",v.abbr);\n                                    frappe.model.set_value(child.doctype, child.name, \"per_working_day\",v.per_working_day);\n                                    frappe.model.set_value(child.doctype, child.name, \"amount\",v.amount);\n                            });\n                            cur_frm.refresh_field(\"salary_details\");\n    \t                }\n    \t            }\n    \t        });\n            }\n            else\n            {\n    \t         cur_frm.clear_table(\"salary_details\");\n    \t         cur_frm.refresh_fields(\"salary_details\");\n            }\n        }\n        else\n        {\n    \t         cur_frm.clear_table(\"salary_details\");\n    \t         cur_frm.refresh_fields(\"salary_details\");\n        }  \n    },\n    \n    prefered_address(frm)\n    {\n        // if(frm.doc.employee !=undefined)\n        // {\n        //     if(frm.doc.employee.length>0)\n        //     {\n                    frappe.call\n                    ({\n                           \"method\":\"frappe.client.get\",\n                           \"args\":\n                                 {\n                                    \"doctype\":\"Employee\",\n                                    \"filters\":{\"name\":frm.doc.employee},\n                                 },\n                                 callback:function(d)\n                                {\n                                    console.log(d)\n                                        frm.set_value(\"house_name\",undefined);\n                                        frm.set_value(\"address_line_1\",undefined);\n                                        frm.set_value(\"address_line_2\",undefined);\n                                        frm.set_value(\"district\",undefined);\n                                        frm.set_value(\"pin_code\",undefined);\n                                        \n                                    if(d)\n                                    {\n                                        console.log(\"z\")\n                                        if(frm.doc.prefered_address==\"Current Address\")\n                                        {\n                                             console.log(\"z1\")\n                                            frm.set_value(\"house_name\",d.message.house_name1);\n                                            frm.set_value(\"address_line_1\",d.message.address_line1);\n                                            frm.set_value(\"address_line_2\",d.message.address_line2);\n                                            frm.set_value(\"district\",d.message.district1);\n                                            frm.set_value(\"pin_code\",d.message.pin1);\n                                        }\n                                        else\n                                        {\n                                             console.log(\"z2\")\n                                            frm.set_value(\"house_name\",d.message.house_name2);\n                                            frm.set_value(\"address_line_1\",d.message.address_line3);\n                                            frm.set_value(\"address_line_2\",d.message.address_line4);\n                                            frm.set_value(\"district\",d.message.district2);\n                                            frm.set_value(\"pin_code\",d.message.pin2);\n                                        }\n                                    }\n                                }\n                    });\n        //     }\n        // }\n    },\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Offer",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.394051",
  "module": null,
  "name": "Job Offer",
  "script": "frappe.ui.form.on('Job Offer', {\njob_applicant(frm)\n{\n    frm.set_query(\"job_applicant\", function () {\n    return {\n        filters:{\n        \n        \"status\": \"Selected Interview\"\n            }\n};\n});\n},\nrefresh(frm)\n{\n     $('li').removeClass(\"disabled\");\n      cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \n\t     frm.add_custom_button(__('Employee'), function()\n            {\n            frappe.route_options = {\"job_offer\": frm.doc.name};\n            document = frappe.new_doc(\"Employee\");\n            frappe.set_route(\"Form\", \"Employee\", document.name);\n        \n        \n            })\n            \n             var bs = frm.doc.basic_salary\n    var yr = flt(bs) * 12\n    console.log(\"Yearly\",yr)\n    frm.set_value(\"yearly\",yr)\n    var bn = frm.doc.bonus\n    \n    var gt = frm.doc.gratuity\n    var total = flt(yr) + flt(bn) \n    console.log(\"Total\",total)\n     frm.set_value(\"total\",total)\n},\n\nonload(frm)\n{\n    if (frm.is_new())\n    {\n        var terms = [\"Date of Joining\",\"Monthly Salary\",\"Place/Transfer\",\"Probation/Confirmation\"];\n        var val = [\"\",\"your monthly salary would be as mentioned in the Annexure \u2013 1\",\"Your present place of work will be Head Office- Manjeri,but during the course of the service, you shall be liable to be posted / transferred anywhere to serve any of the Company's Projects or any other establishment in India, at the sole discretion of the Management.\",\"You will be on a Probation period for the 6 months. Based on your performance your services will be confirmed with the company after Three months.\"]\n        cur_frm.clear_table(\"offer_terms\");\n        for(var i=0;i<terms.length;i++)\n    {\n    //console.log(\"aaaaaaaaaaaa\")\n        var child = cur_frm.add_child(\"offer_terms\");\n        frappe.model.set_value(child.doctype, child.name, \"offer_term\",terms[i]);\n        //console.log(\"ffffffffffffffffff\")\n        frappe.model.set_value(child.doctype, child.name, \"value\",val[i]);\n    }\n        cur_frm.refresh_field(\"offer_terms\");\n    }\n        console.log(terms)\n        console.log(val)\n},\n\n// validate(frm) {\n\t    \n//     frm.doc.naming_series = \"\";\t\n\t    \n// \tlet year = frm.doc.offer_date.slice(2,4);\n// \tlet month = frm.doc.offer_date.slice(5,7);\n// \tlet day = frm.doc.offer_date.slice(8,10);\n\t\n// \tfrm.doc.naming_series += \"POR-\" + day + month + year + \"-.#####\";\n\t\n// \t}\n// before_save(save)\n// {\n//     var bs = frm.doc.basic_salary\n//     var yr = flt(bs) * 12\n//     frm.set_value(\"yearly\",yr)\n//     var bn = flt(bonus)\n//     var gt = flt(gratuity)\n//     var total = flt(yr) + flt(bn) + flt(gt)\n//     frm.set_value(\"total\",total)\n    \n// }\n\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Staffing Plan",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.434033",
  "module": null,
  "name": "Staffing Plan",
  "script": "var company=\" \"\n\nfrappe.ui.form.on('Staffing Plan', \n{\n    onload:function(frm)\n    {\n\n        frm.set_value(\"company\",\"Lamit\");\n        // frm.set_value(\"department\",\"Sales - LM\")  \n        \n    },\n\trefresh(frm) \n\t{\n\t    if(frm.is_new())\n        {\n            frm.set_df_property(\"status1\",\"hidden\",1)\n        }\n        else\n        {\n            frm.set_df_property(\"status1\",\"hidden\",0)\n        }\n\t            if(frm.doc.company ==undefined)\n\t            {\n\t                frm.set_query(\"department\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n\t            }\n\t            else\n\t            {\n\t                frm.set_query(\"department\", function()\n                    {\n                        return {\n                                \"filters\":{\n                                            \"company\":frm.doc.company\n                                          }\n                              };\n                    });  \n\t            }\n\t    \n\t     $('li').removeClass(\"disabled\");\n\t\tfrm.page.sidebar.remove();\n\t\t frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t\t cur_frm.dashboard.hide();\n\t\t \n         if(frm.doc.docstatus==1&& frm.doc.status1==\"Open\")\n\t\t {\n        \n            frm.add_custom_button(__('Job Opening'), function()\n            {\n                frappe.route_options = {\"staffing_plan\":frm.doc.name,\"staffing_plan1\":frm.doc.name,\"company\":frm.doc.company,\"department\":frm.doc.department};\n                \n                document = frappe.new_doc(\"Job Opening1\");\n                frappe.set_route(\"Form\", \"Job Opening1\", document.name);\n            });\n            frm.change_custom_button_type('Job Opening', null, 'success');\n\t\t }\n\t},\n\t\n\tcompany(frm)\n\t{\n\t   //\n\t   //  frm.set_value(\"department\",\" \")\n\t            if(frm.doc.company ==undefined)\n\t            {\n\t                frm.set_query(\"department\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    }); \n                    company=\" \"\n\t            }\n\t            else\n\t            {\n\t                frm.set_query(\"department\", function()\n                    {\n                        return {\n                                \"filters\":{\n                                            \"company\":frm.doc.company\n                                          }\n                              };\n                    });  \n                    \n                    if(frm.doc.department !=undefined)\n        \t        {\n        \t            if(company !=frm.doc.company)\n        \t            {\n        \t                frm.set_value(\"department\",undefined)\n        \t            }\n        \t        }   \n                    company=frm.doc.company\n\t            }\n\t                 \n\t       \n\t            \n\t            \n\t            \n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Application",
  "enabled": 0,
  "modified": "2023-08-30 11:43:03.896252",
  "module": null,
  "name": "Leave Application",
  "script": "frappe.ui.form.on('Leave Application', \n{\n\n\n\trefresh(frm) \n\t{\n\t      \n             \n\t   \n\t    frm.set_df_property(\"naming_series\",\"hidden\",1);\n    \tcur_frm.dashboard.hide();\n    \t$('li').removeClass(\"disabled\");\n    \tfrm.page.sidebar.remove();\n    \tfrm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \n\t    if(!frm.is_new())    \n\t    {\n\t             if(frm.doc.status==\"Open\")\n\t         {\n\t              frm.disable_save();\n\t         }\n\t        \n\t         frm.add_custom_button(__(\"Approve\"),\n\t         function()\n\t         {\n\t           \n                 frm.set_value('status',\"Approved\");\n                 frm.set_value('status1',\"Approved\");\n                 //frm.save();\n                frm.save('Submit');\n               \n             }).addClass(\"btn-success\").removeClass(\"btn-default\");\n            \n             \n\n            frm.add_custom_button(__(\"Reject\"), \n            function()\n            {\n                frm.set_value('status1',\"Rejected\");\n                frm.set_value('status',\"Rejected\");\n                frm.save('Submit');\n            }).addClass(\"btn-danger\").removeClass(\"btn-default\");\n            \n            \n            }\n\t       if(frm.doc.status==\"Approved\" || frm.doc.status==\"Rejected\"||frm.doc.leave_approver !=frappe.session.user)\n\t    {\n\t        cur_frm.page.remove_inner_button(__('Approve'));\n\t        cur_frm.page.remove_inner_button(__('Reject'));\n\t   \n\t    \n\t   }\n\t    else\n\t    {\n\t         frm.trigger(\"leave_type_filter\");\n\t    }\n\t    \n\t    if(frm.doc.status==\"Approved\" || frm.doc.status==\"Rejected\"||frm.doc.leave_approver !=frappe.session.user)\n\t    {\n\t        cur_frm.page.remove_inner_button(__('Approve'));\n\t        cur_frm.page.remove_inner_button(__('Reject'));\n\t    }\n\t   \n\t},\n\n\temployee(frm)\n\t{\n\t    frm.trigger(\"leave_type_filter\");\n\t},\n\t\n\tfrom_date(frm)\n\t{\n\t    frm.trigger(\"leave_type_filter\");\n\t},\n\t\n\tto_date(frm)\n\t{\n\t    frm.trigger(\"leave_type_filter\");\n\t},\n\t\n\tleave_type_filter:function(frm)\n\t{\n\t   // \n\t    var leave_type=[]\n\t    if(frm.doc.employee !=undefined&& frm.doc.from_date !=undefined&&frm.doc.to_date !=undefined)\n\t    {\n\t        if(frm.doc.employee.length>0&&frm.doc.from_date.length>0&&frm.doc.to_date.length>0)\n\t        {\n\t            leave_type=[]\n\t            \n\t                      frappe.call\n                          ({\n                                method: \"frappe.client.get_list\",\n                                args: \n                                        {\n                                            doctype:\"Leave Allocation\",\n                                            filters:[\n                                                        [\"employee\",\"in\",frm.doc.employee],\n                                                        ['from_date','<=',frm.doc.from_date],\n                                                        ['to_date','>=',frm.doc.to_date]\n                                                    ],\n                                            fields:[\"leave_type\"],\n                                        },\n                                        \n                                    callback: function(r)\n                                    {\n                                          if(r.message[0])\n                                          {\n                                                $.each(r.message,function(i,v)\n                                                {\n                                                    leave_type.push(v.leave_type)\n                                                })\n                                          }\n                                    }\n                          });\n                          \n                            frm.set_query(\"leave_type\", function()\n                            {\n                                return {\n                                        \"filters\": \n                                        //{\n                                                   // \"name\":[\"in\",leave_type]\n                                                     [ [\"name\", \"in\", [\"Leave without Pay\"].concat(leave_type)]] \n                                               //   }\n                                      };\n                            });\n\t        }\n\t        else\n\t        {\n\t            frm.set_value(\"leave_type\",undefined)  \n\t             \n\t            frm.set_query(\"leave_type\", function()\n                            {\n                                return {\n                                        \"filters\": {\n                                                    \"name\":[\"in\",leave_type]\n                                                  }\n                                      };\n                            });\n\t        }\n\t    }\n\t    else\n\t    {\n\t         frm.set_value(\"leave_type\",undefined)  \n\t         \n\t        frm.set_query(\"leave_type\", function()\n                            {\n                                return {\n                                        \"filters\": {\n                                                    \"name\":[\"in\",leave_type]\n                                                  }\n                                      };\n                            });\n\t    }\n\t}\n\t\n\t\n\n\n});\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Contractor",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.512653",
  "module": null,
  "name": "Contractor",
  "script": "\nvar employee;\nfrappe.ui.form.on('Contractor',\n{\n\trefresh(frm)\n\t{\n\t     $('li').removeClass(\"disabled\");\n\t\t frm.add_custom_button(__(\"Meeting Updates\"), function() \n         {\n            var doc_selected_program_structure=[];\n           \n          \n             var d = new frappe.ui.Dialog\n             ({\n                \ttitle: __(\"Incentive & Target\"),\n                \tfields:\n                \t[   \n                \t   // {\n                    // \t\tfieldtype: \"Link\",\n                    // \t\toptions:\"Employee\",\n                    // \t\tfieldname: \"employee\",\n                    // \t\tlabel: __(\"Employee\"),\n                    // \t\treqd: 1,\n                    // \t},\n                    \t{\n                    \t\tfieldtype: \"Date\",\n                    \t\tfieldname: \"date\",\n                    \t\tlabel: __(\"Date\"),\n                    \t\tdefault: frappe.datetime.nowdate(),\n                    \t\treqd: 1,\n                    \t},\n                    \t         {\"fieldtype\":\"Section Break\"},\n                    \t{\n                    \t\tfieldtype: \"Data\",\n                    \t\tfieldname: \"from_time\",\n                    \t\tlabel: __(\"From Time\"),\n                    \t\treqd: 1,\n                    \t},\n                    \t        {\"fieldtype\":\"Column Break\"},\n                    \t\n                    \t{\n                    \t\tfieldtype: \"Data\",\n                    \t\tfieldname: \"to_time\",\n                    \t\tlabel: __(\"To Time\"),\n                    \t\treqd: 1,\n                    \t},\n                    \t                 {\"fieldtype\":\"Section Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                        {\"fieldtype\": \"Button\", \"label\":\"Add\", \"fieldname\":\"add_details\"},\n \n                \t]\n           \n            });\n                  \n      \n                  \n                  \n                d.fields_dict.add_details.input.onclick = function()\n                {\n                  //  console.log(\"frappe.session.user\",frappe.session.user)\n                    var d_date=d.fields_dict.date.value;\n                    var d_from_time=d.fields_dict.from_time.value;\n                    var d_to_time=d.fields_dict.to_time.value;\n                            \n                            frappe.call\n                            ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                {\n                                    \"doctype\":\"Employee\",\n                                    \"filters\":\n                                    \t{\n                                        \t\"user_id\":frappe.session.user,\n                                        },\n                                        fields:[\"name\",\"employee_name\"]\n                                },\n                                callback:function(r)\n                                {\n                                    if(r.message[0])\n                                    {\n                                        employee=r.message[0].name;\n                                        \n                                         var row = cur_frm.add_child(\"follow_up\"); \n                                         row.employee_id=employee;\n                                         row.name1=r.message[0].employee_name;\n                                         row.contact_date=d_date;\n                                         row.fromtime=d_from_time;\n                                         row.totime=d_to_time;\n                                         cur_frm.refresh_fields(\"follow_up\");\n                                         \n                                            frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                {\n                                                    \"doctype\":\"Timesheet\",\n                                                    \"filters\":\n                                                    \t{\n                                                        \t\"employee\":employee,\n                                \t\t\t\t\t\t\t \"date\":d_date,\n                                \t\t\t\t\t\t\t \"status\":\"Draft\",\n                                                        },\n                                                },\n                                                callback:function(r)\n                                                {\n                                                    if(r.message[0])\n                                                    {\n                                \t                    frappe.call\n                                \t                    ({\n                                                            \"method\":\"timesheet_row_add\",\n                                                            \"args\":{\n                                                                     timesheet:r.message[0].name,\n                                                                     type:\"Contractor\",\n                                                                     doc_id:frm.doc.name,\n                                                                     from_time:d_from_time,\n                                                                     to_time:d_to_time,\n                                                                      date1:d_date,\n                                                                     employee:employee\n                                                                    },\n                                                        });\n                                \n                                                    }\n                                                    else\n                                                    {\n                                                           frappe.db.insert\n                                \t                       ({\n                                                            doctype:'Timesheet',    \n                                                            date:d_date,\n                                                            employee:employee,\n                                                            time_logs:\n                                                            [\n                                                              {\n                                                                     type:\"Contractor\",\n                                                                     doc_id:frm.doc.name,\n                                                                     from:d_from_time,\n                                                                     to:d_to_time,\n                                                                     date1:d_date,\n                                                                    employee:employee\n                                                              },\n                                                            ]\n                                                            });\n                                                    }\n                                                }\n                                            });\n                                         \n                                         \n                                         \n                                         \n                                    }\n                                    \n                                }\n                            });\n                        d.hide();\n                         frm.save();\n                };\n            d.show();\n         }); \n\t},\n\t\n\tbefore_save(frm)\n\t{\n\t    //save not working if clear this event\n\t    //console.log(\"fffffffffff\")\n\t}\n\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Engineer",
  "enabled": 0,
  "modified": "2023-03-23 09:00:57.552685",
  "module": null,
  "name": "Engineer1",
  "script": "var employee;\nfrappe.ui.form.on('Engineer', \n{\n    refresh(frm)\n\t{\n\t     $('li').removeClass(\"disabled\");\n\t\t frm.add_custom_button(__(\"Meeting Updates\"), function() \n         {\n            var doc_selected_program_structure=[];\n           \n          \n             var d = new frappe.ui.Dialog\n             ({\n                \ttitle: __(\"Incentive & Target\"),\n                \tfields:\n                \t[   \n                \t   // {\n                    // \t\tfieldtype: \"Link\",\n                    // \t\toptions:\"Employee\",\n                    // \t\tfieldname: \"employee\",\n                    // \t\tlabel: __(\"Employee\"),\n                    // \t\treqd: 1,\n                    // \t},\n                    \t{\n                    \t\tfieldtype: \"Date\",\n                    \t\tfieldname: \"date\",\n                    \t\tlabel: __(\"Date\"),\n                    \t\treqd: 1,\n                    \t},\n                    \t         {\"fieldtype\":\"Section Break\"},\n                    \t{\n                    \t\tfieldtype: \"Data\",\n                    \t\tfieldname: \"from_time\",\n                    \t\tlabel: __(\"From Time\"),\n                    \t\treqd: 1,\n                    \t},\n                    \t        {\"fieldtype\":\"Column Break\"},\n                    \t\n                    \t{\n                    \t\tfieldtype: \"Data\",\n                    \t\tfieldname: \"to_time\",\n                    \t\tlabel: __(\"To Time\"),\n                    \t\treqd: 1,\n                    \t},\n                    \t                 {\"fieldtype\":\"Section Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                    \t                 {\"fieldtype\":\"Column Break\"},\n                        {\"fieldtype\": \"Button\", \"label\":\"Add\", \"fieldname\":\"add_details\"},\n \n                \t]\n           \n            });\n                  \n      \n                  \n                  \n                d.fields_dict.add_details.input.onclick = function()\n                {\n                    console.log(\"frappe.session.user\",frappe.session.user)\n                    var d_date=d.fields_dict.date.value;\n                    var d_from_time=d.fields_dict.from_time.value;\n                    var d_to_time=d.fields_dict.to_time.value;\n                            \n                            frappe.call\n                            ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                {\n                                    \"doctype\":\"Employee\",\n                                    \"filters\":\n                                    \t{\n                                        \t\"user_id\":frappe.session.user,\n                                        },\n                                        fields:[\"name\",\"employee_name\"]\n                                },\n                                callback:function(r)\n                                {\n                                    if(r.message[0])\n                                    {\n                                        employee=r.message[0].name;\n                                        \n                                         var row = cur_frm.add_child(\"follow_up\"); \n                                         row.employee_id=employee;\n                                         row.name1=r.message[0].employee_name;\n                                         row.contact_date=d_date;\n                                         row.fromtime=d_from_time;\n                                         row.totime=d_to_time;\n                                         cur_frm.refresh_fields(\"follow_up\");\n                                         \n                                          frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                {\n                                                    \"doctype\":\"Timesheet\",\n                                                    \"filters\":\n                                                    \t{\n                                                        \t\"employee\":employee,\n                                \t\t\t\t\t\t\t \"date\":d_date,\n                                \t\t\t\t\t\t\t \"status\":\"Draft\",\n                                                        },\n                                                },\n                                                callback:function(r)\n                                                {\n                                                    if(r.message[0])\n                                                    {\n                                \t                    frappe.call\n                                \t                    ({\n                                                            \"method\":\"timesheet_row_add\",\n                                                            \"args\":{\n                                                                     timesheet:r.message[0].name,\n                                                                     type:\"Engineer\",\n                                                                     doc_id:frm.doc.name,\n                                                                     from_time:d_from_time,\n                                                                     to_time:d_to_time,\n                                                                      date1:d_date,\n                                                                     employee:employee\n                                                                    },\n                                                        });\n                                \n                                                    }\n                                                    else\n                                                    {\n                                                           frappe.db.insert\n                                \t                       ({\n                                                            doctype:'Timesheet',    \n                                                            date:d_date,\n                                                            employee:employee,\n                                                            time_logs:\n                                                            [\n                                                              {\n                                                                     type:\"Engineer\",\n                                                                     doc_id:frm.doc.name,\n                                                                     from:d_from_time,\n                                                                     to:d_to_time,\n                                                                      date1:d_date,\n                                                                    employee:employee\n                                                              },\n                                                            ]\n                                                            });\n                                                    }\n                                                }\n                                            });\n                                         \n                                    }\n                                    \n                                }\n                            });\n                   \n                        d.hide();\n                        frm.save();\n                };\n            d.show();\n         }); \n\t},\n\t\n\tbefore_save(frm)\n\t{\n\t   // console.log(\"nothing\")\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Advance",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.592209",
  "module": null,
  "name": "Employee Advance",
  "script": "frappe.ui.form.on('Employee Advance', {\n\trefresh(frm) \n\t{\n\t     $('li').removeClass(\"disabled\");\n\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \n\t     setTimeout(() => {\n            frm.remove_custom_button('Expense Claim','Create');\n            \n            // frm.remove_custom_button('Interview','Create');\n       \n        }, 10);\n\t    \n\t\n\t\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Loan Disbursement",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.631064",
  "module": null,
  "name": "Loan Disbursement",
  "script": "frappe.ui.form.on('Loan Disbursement', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Loan",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.671095",
  "module": null,
  "name": "Loan",
  "script": "frappe.ui.form.on('Loan', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t   // frm.set_value(\"loan_application\",frm.doc.loan_applied)\n\t    \n\t   //  frm.add_custom_button(__('Loan Application'), function()\n    //         {\n    //         frappe.route_options = {\"loan_type\": frm.doc.name};\n    //         document = frappe.new_doc(\"Loan Application\");\n    //         frappe.set_route(\"Form\", \"Loan Application\", document.name);\n    //      }) \n\t},\n\tonload(frm)\n\t{\n\t  if(frm.doc.loan_applied!=undefined) \n\t  {\n\t      console.log(\"gggggggggggggg\")\n\t      frm.set_value(\"loan_application\",frm.doc.loan_applied)\n\t       frm.set_value(\"applicant\",frm.doc.employee)\n\t       console.log(\"set\")\n\t  }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Loan Application",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.710938",
  "module": null,
  "name": "Loan Application",
  "script": "frappe.ui.form.on('Loan Application', {\n\trefresh(frm)\n\t{\n\t     $('li').removeClass(\"disabled\");\n\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    if(frm.doc.status==\"Approved\")\n\t    {\n\t     frm.add_custom_button(__('Employee Loan'), function()\n            {\n          //  frappe.route_options = {\"applicant\": frm.doc.applicant};\n            frappe.route_options = {\"loan_applied\": frm.doc.name};\n           \n            document = frappe.new_doc(\"Loan\");\n            frappe.set_route(\"Form\", \"Loan\", document.name);\n         }) \n\t    }\n         \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Loan Type",
  "enabled": 1,
  "modified": "2023-03-23 09:07:43.446602",
  "module": null,
  "name": "Loan Type",
  "script": "frappe.ui.form.on('Loan Type', \n{\n    onload(frm) \n\t{\n\t\tif(frm.is_new())\n\t\t{\n\t\t    frm.set_value(\"company\",\"Lamit\");\n\t\t    frm.set_value(\"repayment_schedule_type\",\"Monthly as per repayment start date\");\n\t\t}\n\t},\n\t\n\trefresh(frm) \n\t{\n\t     $('li').removeClass(\"disabled\");\n\t\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \n\t     frm.add_custom_button(__('Loan Application'), function()\n            {\n            frappe.route_options = {\"loan_type\": frm.doc.name};\n            document = frappe.new_doc(\"Loan Application\");\n            frappe.set_route(\"Form\", \"Loan Application\", document.name);\n         }) \n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Engineer",
  "enabled": 1,
  "modified": "2023-03-23 10:47:20.807742",
  "module": null,
  "name": "Engineer",
  "script": "frappe.ui.form.on('Engineer', \n{\n\tonload(frm) \n\t{\n\t},\n\trefresh(frm)\n\t{\n\t     $('li').removeClass(\"disabled\");\n\t}\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Appraisal",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.835117",
  "module": null,
  "name": "Appraisal",
  "script": "frappe.ui.form.on('Appraisal', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Incentive",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.872420",
  "module": null,
  "name": "Employee Incentive",
  "script": "frappe.ui.form.on('Employee Incentive', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Additional Salary",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.910621",
  "module": null,
  "name": "Additional Salary",
  "script": "frappe.ui.form.on('Additional Salary', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t\tcur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payroll Entry",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.949204",
  "module": null,
  "name": "Payroll Entry",
  "script": "frappe.ui.form.on('Payroll Entry', {\n\trefresh(frm) {\n\t     $('li').removeClass(\"disabled\");\n\t cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Slip",
  "enabled": 1,
  "modified": "2023-03-23 09:00:57.988756",
  "module": null,
  "name": "Salary Slip",
  "script": "frappe.ui.form.on('Salary Slip',\n{\n\trefresh(frm)\n\t{\n\t    \n\t    $('li').removeClass(\"disabled\");\n\t    cur_frm.dashboard.hide();\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t},\n\t\n\tstart_date(frm)\n\t{\n\t    if(frm.doc.start_date !=undefined)\n\t    {\n\t        const month1 = [\"Jan\",\"Feb\",\"March\",\"April\",\"May\",\"June\",\"July\",\"Aug\",\"Sep\",\"Oct\",\"Nov\",\"Dec\"];\n    \t\tconst d = new Date(frm.doc.start_date);\n            let year = d.getFullYear();\n            let month= month1[d.getMonth()];\n            \n            var n=flt(year)-10\n            var year_list=[]\n            \n            for(var i=flt(n);i<flt(n)+20;i++)\n            {\n                year_list.push(i)\n            }\n            \n            \n            // frm.set_df_property('year', 'options',year_list)\n            frm.set_value(\"year\",year)\n             frm.set_value(\"month\",month)\n            frm.refresh_field(\"year\")\n\t    }\n\t},\n\t\n\tend_date(frm)\n\t{\n\t    if(frm.doc.end_date !=undefined)\n\t    {\n\t        var date1 = new Date(frm.doc.start_date);\n            var date2 = new Date(frm.doc.end_date);\n              \n            // To calculate the time difference of two dates\n            var Difference_In_Time = date2.getTime() - date1.getTime();\n              \n            // To calculate the no. of days between two dates\n            var Difference_In_Days = (Difference_In_Time / (1000 * 3600 * 24))+1;\n            frm.set_value(\"total_days\",Difference_In_Days)\n\t    }\n\t}\n\t\n\n\t\n\t\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Structure Assignment",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.030303",
  "module": null,
  "name": "Salary Structure Assignment",
  "script": "frappe.ui.form.on('Salary Structure Assignment', {\nrefresh(frm) {\n     $('li').removeClass(\"disabled\");\n\t cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Component",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.068011",
  "module": null,
  "name": "Salary Component - Form",
  "script": "frappe.ui.form.on('Salary Component', {\nrefresh(frm) {\n     $('li').removeClass(\"disabled\");\n\t cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t},\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Project",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.106623",
  "module": null,
  "name": "Project - Form",
  "script": " var j;  var n=[] ;  var x;  var v,i;   var a=[];  var b=[];  var c=[];  var d=[];  var e=[];  var f=[];  var g=[];  var s=[];  var h=[];  var r=[];  var email;  var o=[];  var p=[];  var q=[];  var emply=[];  var emply\\_email=[];  var userrole=[];   frappe.ui.form.on('Project', {  onload(frm)  {     frm.trigger(\"employee\\_name\\_filter\");  // console.log(frm.doc.company);  if(frm.doc.email\\_id !==undefined)  {  email= frm.doc.email\\_id;   }  else  {  email=undefined;  }     if(frm.doc.name==\"Default Project\")  {  msgprint(\"You Can't Edit This Doc\");  frm.disable\\_save();  }  else  {  frm.enable\\_save();  }        a=[];  b=[];  e=[];  f=[];  s=[];  h=[];  r=[];    cur\\_frm.dashboard.hide();  // setTimeout(() => {  // $(\"[data-doctype='Maintenance Visit']\").hide();  // $(\"[data-doctype='Quotation']\").hide();  // $(\"[data-doctype='Installation Note']\").hide();  // $(\"[data-doctype='Issue']\").hide();  // $(\"[data-doctype='Opportunity']\").hide();  // $(\"[data-doctype='Warranty Claim']\").hide();  // $(\"[data-doctype='Subscription']\").hide();  // $(\"[data-doctype='Project']\").hide();  // $(\"[data-doctype='Sales Order']\").hide();  // $(\"[data-doctype='Delivery Note']\").hide();  // $(\"[data-doctype='Pricing Rule']\").hide();  // $(\"[data-doctype='Bank Account']\").hide();  // $(\".form-link-title\").hide();  // }, 10);     // frm.fields\\_dict.user.grid.get\\_field('users').get\\_query = // function() // { // return {   // filters:{ // 'role\\_profile\\_name': ['in', ['Employee', 'Manager']] // }   // }; // };     // if(frm.doc.customer\\_name ===undefined)  // {  // x=\"new\";  // }  // else  // {  // x=\"exist\";  // }  },    refresh(frm)  {  $('li').removeClass(\"disabled\");  cur\\_frm.dashboard.hide();  frm.add\\_custom\\_button(\\_\\_(\"Task\"), function()  {  frappe.set\\_route(\"List\", \"Task\",frm.doc.task);  });  },    employee\\_name\\_filter:function(frm)  {  frappe.call  ({  \"method\":\"frappe.client.get\\_list\",  \"args\":  {  \"doctype\":\"Employee\",  \"filters\":{\"status\":\"Active\"},  'limit\\_start':0,  'limit\\_page\\_length':1000,  \"fields\":[\"name\",\"employee\\_name\",\"user\\_id\"]  },  callback:function(d)  {  if(d.message[0])  {  $.each(d.message,function(i,v)  {  emply.push(v.employee\\_name) ;   emply\\_email.push(v.user\\_id)  });  frm.fields\\_dict.user.grid.update\\_docfield\\_property(\"employee\", 'options',emply);  }      }  });   },      after\\_save(frm)  {  $.each(frm.doc.user,function(i,v)  {  o[i]=v.employee\\_email;  });        frappe.call  ({  \"method\":\"frappe.client.get\\_list\",  \"args\":  {  \"doctype\":\"User Permission\",  \"filters\":{\"for\\_value\":frm.doc.name,},  \"fields\":[\"user\",\"name\"]  },    callback:function(d)  {  if(d.message)  {  $.each(d.message,function(i,item)  {  p[i]=item.user;  q[i]=item.name;  });  }   if(o.length>0 && p.length>0)  {  console.log(\"case1\")  for(var i=0;i0)  {  console.log(\"case2\")  for(var j=0;j0 && p.length===0)  {  console.log(\"case3\")  for(var k=0;k  // {  frappe.call  ({  \"method\":\"frappe.client.get\",  \"args\":  {  \"doctype\":\"User\",  \"filters\":{\"name\":user1},  },  })  .then(function(doc)  {  console.log(\"userrole\",doc)    // if(doc.message)  // {  // $.each(doc.message.roles,function(i,v)  // {  // userrole[i]=v.role  // })    // if(userrole.includes(\"Ceo Uae\")==true || userrole.includes(\"Ceo In\")==true || userrole.includes(\"Customer\")==true)  // {  // console.log(\"dont create user permission\")  // }  // else  // {    frappe.db.insert  ({  \"doctype\":'User Permission',   \"user\":doc.message.name,  \"allow\":\"Project\",  'for\\_value':frm.doc.name,  'apply\\_to\\_all\\_doctypes':1,  })  // }  // }    })  // },1000)  }  }  }  o =[];  p=[];  q=[];  }  });  } });  var userrole=[]; frappe.ui.form.on('Project Child', {   employee:function(frm,cdt,cdn)  {  var d=locals [cdt][cdn];  if(d.employee !=undefined)  {  var indx=emply.indexOf(d.employee)  frappe.model.set\\_value(cdt,cdn,\"employee\\_email\",emply\\_email[indx])  }  else  {  frappe.model.set\\_value(cdt,cdn,\"employee\\_email\",undefined)   }  }     })                           ",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Attendance Request",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.146559",
  "module": null,
  "name": "Attendance Request Form",
  "script": "frappe.ui.form.on('Attendance Request', \n{\n\trefresh(frm) \n\t{\n\t     $('li').removeClass(\"disabled\");\n\t\t cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t\t \n\t\t if(!frm.is_new())\n\t\t {\n    \t     frm.add_custom_button(__(\"Approve\"), \n    \t     function()\n    \t     {\n                frm.set_value('status',\"Approved\");\n                frm.refresh_field('status');\n                frm.save('Submit');\n            }).addClass(\"btn-success\").removeClass(\"btn-default\");\n\t    \n\t        if(frm.doc.status==\"Open\")\n    \t    {\n    \t       frm. disable_save();\n    \t    }\n    \t     if(frm.doc.status==\"Approved\"||frm.doc.attendance_approver!=frappe.session.user)\n    \t    {\n    \t        cur_frm.page.remove_inner_button(__('Approve'));\n    \t    }\n\t        \n\t    }\n\t\t \n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Opening",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.185492",
  "module": null,
  "name": "Job Opening Form",
  "script": "var designation_list=[]\n\nfrappe.ui.form.on('Job Opening',\n{\n    onload(frm)\n    {\n        if(frm.is_new())\n        {\n            frm.set_value(\"company\",\"Lamit\");\n            frm.trigger(\"fiter_designation\");\n        }\n           \n    },\n    \n\trefresh(frm) \n\t{\n                if(frm.doc.company ==undefined)\n\t            {\n\t                frm.set_query(\"staffing_plan1\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    frm.set_query(\"department\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    frm.set_query(\"designation\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"name\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    \n\t            }\n\t            else\n\t            {\n\t                frm.set_query(\"staffing_plan1\", function()\n                    {\n                        return {\n                                \"filters\":{\n                                            \"company\":frm.doc.company,\n                                            \"status\":\"Open\"\n                                          }\n                              };\n                    });  \n\t            }\n\n\n\n\n\t     $('li').removeClass(\"disabled\");\n\t     frm.page.sidebar.remove();\n\t\t frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t\t  cur_frm.dashboard.hide()\n\t},\n\t\n\tstaffing_plan1:function(frm)\n\t{\n\t     frm.trigger(\"fiter_designation\")\n\t     frm.set_value(\"planned_vacancies\",undefined);\n\t},\n\t\n\tfiter_designation:function(frm)\n\t{\n\t         if(frm.doc.staffing_plan1 !=undefined)\n             {\n                if(frm.doc.staffing_plan1.length>0)\n                {\n                \tdesignation_list=[]\n                \tvar d2=[]\n\t    \n\t                                                    frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Staffing Plan\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"name\":frm.doc.staffing_plan1,\n                                                                    },\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                             if(doc1.message)\n                                                             {\n                                                                 $.each(doc1.message.staffing_details,function(i,v)\n                                                                 {   \n                                                                     if(v.status==\"Open\")\n                                                                     {\n                                                                        designation_list.push(v.designation)\n                                                                     }\n                                                                      d2=[...new Set(designation_list)];\n                                                                 })\n                                                             }\n                                                         })\n                }\n        \t        frm.set_query(\"designation\", function()\n                    {\n                        return {\n                                \"filters\": {\n                                            \"name\":[\"in\",d2]\n                                          }\n                              };\n                    });\n             }\n             \n             frm.set_value(\"designation\",undefined);\n\t},\n\t\n\tcompany:function(frm)\n\t{\n\t            if(frm.doc.company ==undefined)\n\t            {\n\t                frm.set_query(\"staffing_plan1\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    frm.set_query(\"department\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    frm.set_query(\"designation\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"name\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    \n\t            }\n\t            else if(frm.doc.company.length==0)\n\t            {\n\t                frm.set_query(\"staffing_plan1\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    frm.set_query(\"department\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"company\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    frm.set_query(\"designation\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                              [\"name\",\"=\",undefined]\n                                          ]\n                              };\n                    });  \n                    \n                    \n\t            }\n\t            else\n\t            {\n                    frm.set_query(\"staffing_plan1\", function()\n                    {\n                        return {\n                                \"filters\": {\n                                            \"company\":frm.doc.company,\n                                            \"status\":\"Open\"\n                                          }\n                              };\n                    });\n                    \n                    frm.set_query(\"department\", function()\n                    {\n                        return {\n                                \"filters\": {\n                                            \"company\":frm.doc.company,\n                                            // \"status\":\"Open\"\n                                          }\n                              };\n                    });\n                    frm.set_query(\"designation\", function()\n                    {\n                        return {\n                                \"filters\":[\n                                             [\"name\",\"!=\",undefined],\n                                            // \"status\":\"Open\"\n                                          ]\n                              };\n                    }); \n\t            }\n\n\t    \n\t    \n\t    \n\t    \n\t                \n                    \n\t},\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Interview",
  "enabled": 0,
  "modified": "2023-03-23 09:00:58.226496",
  "module": null,
  "name": "Interview - Form",
  "script": "frappe.ui.form.on('Interview', {    refresh(frm)   {  $('li').removeClass(\"disabled\");  $(\".form-assignments\").hide();  $(\".form-attachments\").hide();  $(\".form-shared\").hide();  $(\".form-tags\").hide();  $(\".form-reviews\").hide();  $(\".form-sidebar-stats\").hide();  $(\".list-unstyled.sidebar-menu.text-muted\").hide();  frm.page.wrapper.find(\".comment-box\").css({'display':'none'});  setTimeout(() => {  cur\\_frm.dashboard.hide()  frm.remove\\_custom\\_button('Reschedule Interview');  }, 10);   if(frm.doc.status==\"Pending\" && !frm.is\\_new())  {  frm.add\\_custom\\_button(\"Reschedule\", () => {    let d = new frappe.ui.Dialog({  title: 'Enter Reschedule Details ',  fields: [    {  label: 'Interview Date',  fieldname: 'interview\\_date',  fieldtype: 'Date',  \"reqd\": 1,  },  {  label: 'Interview Time',  fieldname: 'interview\\_time',  fieldtype: 'Data',  \"reqd\": 1,  },    ],  primary\\_action\\_label: 'Submit',  primary\\_action(values)   {    console.log(values);    frm.set\\_value(\"rescheduled\\_on\",values.interview\\_date)  frm.set\\_value(\"rescheduled\\_time\",values.interview\\_time)  frm.set\\_value(\"status\",\"Rescheduled\")    cur\\_frm.save();  d.hide();    }        });  d.show();  })  frm.change\\_custom\\_button\\_type('Reschedule', null, 'primary');  }           if(frm.doc.status == \"Cleared\")  {  frm.add\\_custom\\_button(\\_\\_('Job Offer'), function()  {  frappe.route\\_options = {\"interview\": frm.doc.name};  document = frappe.new\\_doc(\"Job Offer\");  frappe.set\\_route(\"Form\", \"Job Offer\", document.name);      })    // frm.add\\_custom\\_button(\\_\\_('Job Offer'), function(){  // document = frappe.new\\_doc(\"Job Offer\");  // frappe.set\\_route(\"Form\", \"Job Offer\", document.name);  // frappe.set\\_route(\"Form\", \"Job Offer\")  // })  }  },    score:function(frm)  {  if(frm.doc.score>=6)  {  frm.set\\_value(\"status\",\"Cleared\")  }  if(frm.doc.score<6)  {  frm.set\\_value(\"status\",\"Rejected\")  }      },   after\\_save(frm)  {  if(frm.doc.status==\"Rescheduled\")  {  frappe.db.set\\_value(\"Job Applicant\",frm.doc.job\\_applicant,\"status\",\"Interview Rescheduled\")   cur\\_frm.set\\_df\\_property(\"scheduled\\_on\", \"hidden\", true);  cur\\_frm.set\\_df\\_property(\"time\\_from\", \"hidden\", true);    }    if(frm.doc.status===\"Cleared\")  {  //var a = frm.doc.job\\_applicant  frappe.db.set\\_value(\"Job Applicant\",frm.doc.job\\_applicant,\"status\",\"Selected Interview\")  // msgprint(\"Job applicant Status changed\")  }     if(frm.doc.status===\"Rejected\")  {  // var b = frm.doc.job\\_applicant  frappe.db.set\\_value(\"Job Applicant\",frm.doc.job\\_applicant,\"status\",\"Rejected\")  // msgprint(\"Job applicant Status changed\")   }   },       })   const a=[];  var t=0;  frappe.ui.form.on('Valuation Card', {   score:function(frm,cdt,cdn)  {  var d=locals[cdt][cdn];  // console.log(\"index of array\"+d.idx);  var i=d.idx-1;  a[i]=d.score;   //console.log(\"full array \"+a);  //console.log(\"array length\"+a.length);     var sum = 0;  for (let n = 0; n < a.length; n++)   {  var f=flt(a[n]);  sum =sum+f;  }  frm.set\\_value(\"score\",sum);  },    before\\_valuation\\_card\\_remove:function(frm,cdt,cdn)  {  var d=locals[cdt][cdn];  //console.log(\"index of array\"+d.idx);  var i=d.idx-1;  a[i]=0   //console.log(\"full array \"+a);  //console.log(\"array length\"+a.length);     var sum = 0;  for (let n = 0; n < a.length; n++)   {  var f=flt(a[n]);  sum =sum+f;  }  //console.log(\"sum is\"+sum);    frm.set\\_value(\"score\",sum);    }    })",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Timesheet",
  "enabled": 0,
  "modified": "2023-03-23 09:00:58.265656",
  "module": null,
  "name": "Timesheet List",
  "script": "frappe.listview_settings['Timesheet'] =\n{\n\trefresh: function(listview)\n    {\n        $('.btn-primary').hide();\n        $('ellipsis').hide();\n\t   \t$(\"div[data-fieldname = name]\").hide();\n\t   \t//$(\"div[data-fieldname = docstatus]\").hide();\n\t},\n\thide_name_column: true\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Districts",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.303466",
  "module": null,
  "name": "Districts List",
  "script": "frappe.listview_settings['Districts'] =\n{\n    on_load: function(listview)\n\t{\n\t    $('.btn-primary').hide();\n\t},\n\trefresh: function(listview)\n\t{\n\t   \t$(\"div[data-fieldname = name]\").hide();\n\t   //\t $('.btn-primary').hide();\n\t},\n\thide_name_column: true\n};",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Shop",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.340645",
  "module": null,
  "name": "Shop List",
  "script": "frappe.listview_settings['Shop'] = {\n\trefresh: function(listview) {\n\t   \t$(\"div[data-fieldname = name]\").hide();\n\t    $(\"div[data-fieldname = organization_name]\").hide();\n\n\t},\n\thide_name_column: true\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Sale District",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.377171",
  "module": null,
  "name": "Sale District List",
  "script": "frappe.listview_settings['Sale District'] = {\n\trefresh: function(listview) {\n\t   \t$(\"div[data-fieldname = name]\").hide();\n\t   \t$(\"div[data-fieldname = district]\").hide();\n\t   \t\n\n\t},\n\thide_name_column: true\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Item",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.414060",
  "module": null,
  "name": "Item List",
  "script": "frappe.listview_settings['Item'] = {\n\trefresh: function(listview) {\n\t   \t$(\"div[data-fieldname = name]\").hide();\n\t},\n\thide_name_column: true\n};",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Customer",
  "enabled": 0,
  "modified": "2023-03-23 09:00:58.450831",
  "module": null,
  "name": "Customer1",
  "script": "var f1=[];\n\nvar employee=[];\nvar name=[];\nvar contact=[];\nvar from=[];\nvar to=[];\nvar a0=[];\nvar a1=[];\nvar a2=[];\nvar a3=[];\nvar k1=[];\nvar k2=[];\nvar k3=[];\nvar k4=[];\nfrappe.ui.form.on('Customer', \n{\n\tonload:function(frm)\n\t{\n\t\tlet a=cur_frm.doc.lead;\n\t\tconsole.log(a);\n\t\tfrappe.call\n\t\t(\n\t    {\n\t\t    method: \"frappe.client.get\",\n\t\t    args: \n\t\t\t{\n\t\t     doctype: \"Lead\",\n\t\t     \n\t\t     filters: {\n\t\t\t    \"name\": cur_frm.doc.lead\n\t\t\t\t\t\t\t\n\t\t              }\n\t\n\t\t\t},\n\t\t\tcallback: function (data) \n\t\t\n\t\t\t{\n\t\t\t  console.log(data.message.persons,\"-----------------\");\n\t\t\t  \n\t\t\t if(data)\n\t\t\t {\n\t\t\t     \n\t\t\t console.log(data,\"================\")\n\t\t\t  \n\t\t\t     \n\t\t\t var t=data.message.persons;\n\t\t\t  let m1=data.message.assign_to_employee;\n            console.log(m1)\n            cur_frm.set_value(\"marketing_team_member\",m1)\n            let m2=data.message.email_id;\n            cur_frm.set_value(\"email\",m2)\n            let m3=data.message.mobile_no;\n            cur_frm.set_value(\"mobile_number\",m3);\n            let m4=data.message.gender;\n            cur_frm.set_value(\"gender\",m4)\n\t\t\t \n\t\t\t \n\t\t $.each(data.message.persons,function(i,v)\n        \n             {\n                  employee[i]=v.employee_id;\n                    console.log(employee,\"------------\")\n                    name[i]=v.name;\n                    console.log(name,\"yyyyyyy\")\n                    contact[i]=v.contact_date;\n                    from[i]=v.fromtime;\n                    \n                    to[i]=v.totime;\n                    \n                    \n                 });\n                 if(employee.length!==0)\n            {\n            for (let i=0; i<=employee.length;i++)\n        \t{\n        \t   var child = cur_frm.add_child(\"follow_up\");\n                                                                \n                 frappe.model.set_value(child.doctype, child.name, \"employee_id\",employee[i]); \n                 frappe.model.set_value(child.doctype, child.name, \"name\",name[i]);  \n                 frappe.model.set_value(child.doctype, child.name, \"contact_date\",contact[i]);  \n                frappe.model.set_value(child.doctype, child.name, \"fromtime\",from[i]); \n                frappe.model.set_value(child.doctype, child.name, \"totime\",to[i]); \n                 \n                                                                \n                                                                \n                cur_frm.refresh_field(\"follow_up\");\n                \n        \t    \n        \t}\n            }\n             $.each(data.message.lead_assign_table,function(i,v)\n        \n             {    console.log(v)\n                  a0[i]=v.date;\n                  console.log(a0)\n                    //console.log(employee,\"------------\")\n                a1[i]=v.employee;\n                //     // console.log(name,\"yyyyyyy\")\n                a2[i]=v.meeting_date;\n                //     // from[i]=v.fromtime;\n                    \n                a3[i]=v.remark;\n                    \n                    \n                 });\n                if(a0.length!==0)\n            {\n            for (let i=0; i<=a0.length;i++)\n        \t{\n        \t   var child = cur_frm.add_child(\"work_assign\");\n                                                                \n                 frappe.model.set_value(child.doctype, child.name, \"date\",a0[i]); \n                frappe.model.set_value(child.doctype, child.name, \"employee\",a1[i]);  \n                frappe.model.set_value(child.doctype, child.name, \"meeting_date\",a2[i]);  \n               frappe.model.set_value(child.doctype, child.name, \"remark\",a3[i]); \n                // // frappe.model.set_value(child.doctype, child.name, \"totime\",to[i]); \n                 \n                                                                \n                                                                \n                cur_frm.refresh_field(\"work_assign\");\n                \n        \t}\n            }\n             $.each(data.message.lead_events,function(i,h)\n        \n             {\n                    k1[i]=h.event_name;\n                   // console.log(employee,\"------------\")\n                    k2[i]=h.date;\n                    //console.log(name,\"yyyyyyy\")\n                    k3[i]=h.remind_before_days;\n;\n                    k4[i]=h.remarks\n;\n                   \n                    \n                 });\n                 if(k2.length!==0)\n            {\n            for (let i=0; i<=k2.length;i++)\n        \t{\n        \t   var child = cur_frm.add_child(\"customer_events\");\n                                                                \n                 frappe.model.set_value(child.doctype, child.name, \"event_name\",k1[i]); \n                 frappe.model.set_value(child.doctype, child.name, \"date\",k2[i]);  \n                 frappe.model.set_value(child.doctype, child.name, \"remind_before_days\",k3[i]);  \n                 frappe.model.set_value(child.doctype, child.name, \"remarks\",k4[i]); \n                  \n                 \n                                                                \n                                                                \n                cur_frm.refresh_field(\"customer_events\");\n                \n        \t    \n        \t}\n            }\n           \n           \n        \n\n\t\t\t          \n\t\t\t      \n\t\t\t    \n\t\t\t     \n\t\t\t}\n\t\t\t}\n\t    }\n\t\t)\n\t\t\t\t     \n\t\t\n\n\t}\n})\n\n// validate(frm)\n// {\n//     frm.set_value(\"tax_id\",\"123\")\n// }\n// })",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Attendance",
  "enabled": 0,
  "modified": "2023-03-23 09:00:58.488922",
  "module": null,
  "name": "Attendance List",
  "script": "// frappe.listview_settings[\"Attendance\"].formatters = \n// {\n    \n//     onload: function(listview) \n//     {\n         \n//         if (!frappe.route_options)\n//         { //remove this condition if not required\n//             frappe.route_options = \n//             {\n//                 \"add_fields\": ['title', 'public'],\n//                 \"employee\": [\"=\",]\n//             };\n//         }\n//     },\n    \n// };\n\n\nfrappe.listview_settings['Attendance'] =\n{\n     hide_name_column: true,\n \n    //  refresh: function(listview) \n    //  {\n    // \t   // $(\".comment-count\").hide();\n    // \t   // //$(\".frappe-timestamp\").hide();\n    // \t   // $(\".avatar-small\").hide();\n    // \t   // $(\"div[data-fieldname = name]\").hide();\n    //  }\n    \n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// frappe.listview_settings['Attendance'] = \n// {\n//     // add fields to fetch\n//     add_fields: ['title', 'public'],\n//     // set default filters\n//     // filters: [\n//     //     ['public', '=', 1]\n//     // ],\n//     // hide_name_column: true, // hide the last column which shows the `name`\n//     // onload(listview) \n//     // {\n//     //     // triggers once before the list is loaded\n//     // },\n//     // before_render() \n//     // {\n//     //     // triggers before every render of list records\n//     // },\n\n//     // // set this to true to apply indicator function on draft documents too\n//     // has_indicator_for_draft: false,\n    \n//     //   get_indicator(doc) {\n//     //     // customize indicator color\n//     //     if (doc.public) \n//     //     {\n//     //         return [__(\"Public\"), \"green\", \"public,=,Yes\"];\n//     //     }\n//     //     else\n//     //     {\n//     //         return [__(\"Private\"), \"darkgrey\", \"public,=,No\"];\n//     //     }\n//     // },\n//     // primary_action() \n//     // {\n//     //     // triggers when the primary action is clicked\n//     // },\n    \n//     // get_form_link(doc)\n//     // {\n//     //     // override the form route for this doc\n//     // },\n//     // add a custom button for each row\n    \n//     //  button:\n//     //  {\n//     //     show(doc)\n//     //     {\n//     //         return doc.reference_name;\n//     //     },\n//     //     get_label()\n//     //     {\n//     //         return 'View';\n//     //     },\n//     //     get_description(doc) \n//     //     {\n//     //         return __('View {0}', [`${doc.reference_type} ${doc.reference_name}`])\n//     //     },\n//     //     action(doc)\n//     //     {\n//     //         frappe.set_route('Form', doc.reference_type, doc.reference_name);\n//     //     }\n        \n//     //  },\n     \n//     // // format how a field value is shown\n//     // formatters: \n//     // {\n//     //     title(val)\n//     //     {\n//     //         return val.bold();\n//     //     },\n//     //     public(val) {\n//     //         return val ? 'Yes' : 'No';\n//     //     }\n//     // }\n// }\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// frappe.listview_settings['Attendance'] = {\n//  hide_name_column: true,\n \n//  refresh: function(listview) {\n// \t    $(\".comment-count\").hide();\n// \t    //$(\".frappe-timestamp\").hide();\n// \t    $(\".avatar-small\").hide();\n// \t    $(\"div[data-fieldname = name]\").hide();\n// \t}\n    \n// };",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Appraisal",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.527647",
  "module": null,
  "name": "Appraisal List",
  "script": "frappe.listview_settings['Appraisal'] = {\n hide_name_column: true,\n \n refresh: function(listview) {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t}\n    \n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Appraisal Template",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.565612",
  "module": null,
  "name": "Appraisal Template List",
  "script": "frappe.listview_settings['Appraisal Template'] = {\n hide_name_column: true,\n \n refresh: function(listview) {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t}\n    \n};\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee Incentive",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.602283",
  "module": null,
  "name": "Employee Incentive List",
  "script": "frappe.listview_settings['Employee Incentive'] = {\n hide_name_column: true,\n \n refresh: function(listview) {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t}\n    \n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payroll Entry",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.640734",
  "module": null,
  "name": "Payroll Entry List",
  "script": "frappe.listview_settings['Payroll Entry'] = {\n hide_name_column: true,\n \n refresh: function(listview) {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t}\n    \n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Structure Assignment",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.676517",
  "module": null,
  "name": "Salary Structure Assignment List",
  "script": "frappe.listview_settings['Salary Structure Assignment'] = {\n hide_name_column: true,\n \n refresh: function(listview) {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t}\n    \n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Structure",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.712663",
  "module": null,
  "name": "Salary Structure List",
  "script": "frappe.listview_settings['Salary Structure'] = {\n hide_name_column: true,\n \n refresh: function(listview) {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t}\n    \n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Component",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.749415",
  "module": null,
  "name": "Salary Component List",
  "script": "frappe.listview_settings['Salary Component'] = {\n hide_name_column: true,\n \n refresh: function(listview) {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t}\n    \n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Holiday List",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.785822",
  "module": null,
  "name": "Holiday List List",
  "script": "frappe.listview_settings['Holiday List'] = \n{\n     hide_name_column: true,\n     \n     refresh: function(listview) \n     {\n    \t    $(\".comment-count\").hide();\n    \t    //$(\".frappe-timestamp\").hide();\n    \t    $(\".avatar-small\").hide();\n    \t    $(\"div[data-fieldname = name]\").hide();\n    \t    \n    \t    listview.page.add_inner_button(\"Assign Holiday\", function() \n            {\n                holiday_list(listview)\n            });\n    \t    \n    \t    \n    \t    \n     }\n    \n};\n\nfunction holiday_list(listview)\n{\n    var trigger_tbl=1\n      data=[]\n     var holidaylist=[]\n     var ds=\" \"\n                        \tvar fields =\n                         \t[\n                         \t     {\n                                \t\tfieldtype: \"Link\",\n                                \t\tfieldname: \"company\",\n                                \t\tlabel: __(\"Company\"),\n                                \t\toptions:\"Company\",\n                                // \t\tdefault:\"Lamit\",\n                                         'onchange':() =>\n                                         { \n                                             console.log(\"aaaaaaaaa\")\n                                             if(trigger_tbl==1)\n                                             {\n                                                //   holidaylist=[]\n                                                 var holiday1 = d.get_field(\"holiday\");\n                                                 var company1 = d.get_field(\"company\");\n                                                 var designation1 = d.get_field(\"designation\");\n                                                 var department1 = d.get_field(\"department\");\n\n                                                // holiday1.df.options=holidaylist;\n                                                holiday1.df.filters.company=company1.value\n                                                holiday1.refresh()\n                                                department1.df.filters.company=company1.value\n                                                department1.refresh()\n   \n                                                        while(d.fields_dict.employee_table.df.data[0] !=undefined)\n                                                        {\n                                                            d.fields_dict.employee_table.grid.grid_rows.forEach(function(row)\n                                                            {\n                                                                row.remove();\n                                                            }); \n                                                        }\n                                                    \n                                                    if(company1.value !=undefined&&designation1.value==undefined&&department1.value==undefined)\n                                                    {\n                                                        frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get_list\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Employee\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"company\":company1.value,\n                                                                        // \"designation\":designation1,\n                                                                        // \"department\":department1,\n                                                                        \"status\":\"Active\"\n                                                                    },\n                                                                    \n                                                                    fields:[\"name\",\"employee_name\"],\n                                                                    order_by:\"creation desc\",\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                             if(doc1.message[0])\n                                                             {\n                                                                var tbl1 = d.get_field(\"employee_table\");\n                                                                \n                                                                while(d.fields_dict.employee_table.df.data[0] !=undefined)\n                                                                {\n                                                                    d.fields_dict.employee_table.grid.grid_rows.forEach(function(row)\n                                                                    {\n                                                                        row.remove();\n                                                                    }); \n                                                                }\n                                                                    d.get_field(\"employee_table\").grid.page_length=5\n                                                                    \n                                                                    \n                                                                $.each(doc1.message,function(i,v)\n                                                                {\n                                                                    tbl1.df.data.push({\"suject\":\"uuuuuuu\"})\n                                                                    tbl1.df.data[i].employee=v.name\n                                                                    tbl1.df.data[i].employee_name=v.employee_name\n                                                                })\n                                                                \n                                                                tbl1.refresh();\n                                                             }\n                                                         }) \n                                                    }\n                                                    else if(company1.value !=undefined&&designation1.value!=undefined&&department1.value==undefined)\n                                                    {\n                                                        frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get_list\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Employee\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"company\":company1.value,\n                                                                        \"designation\":designation1.value,\n                                                                        // \"department\":department1,\n                                                                        \"status\":\"Active\"\n                                                                    },\n                                                                    \n                                                                    fields:[\"name\",\"employee_name\"],\n                                                                    order_by:\"creation desc\",\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                             if(doc1.message[0])\n                                                             {\n                                                                var tbl1 = d.get_field(\"employee_table\");\n                                                                \n                                                                while(d.fields_dict.employee_table.df.data[0] !=undefined)\n                                                                {\n                                                                    d.fields_dict.employee_table.grid.grid_rows.forEach(function(row)\n                                                                    {\n                                                                        row.remove();\n                                                                    }); \n                                                                }\n                                                                    d.get_field(\"employee_table\").grid.page_length=5\n                                                                    \n                                                                    \n                                                                $.each(doc1.message,function(i,v)\n                                                                {\n                                                                    tbl1.df.data.push({\"suject\":\"uuuuuuu\"})\n                                                                    tbl1.df.data[i].employee=v.name\n                                                                    tbl1.df.data[i].employee_name=v.employee_name\n                                                                })\n                                                                \n                                                                tbl1.refresh();\n                                                             }\n                                                         }) \n                                                    }\n                                                    else if(company1.value !=undefined&&designation1.value==undefined&&department1.value!=undefined)\n                                                    {\n                                                        frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get_list\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Employee\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"company\":company1.value,\n                                                                        // \"designation\":designation1,\n                                                                        \"department\":department1.value,\n                                                                        \"status\":\"Active\"\n                                                                    },\n                                                                    \n                                                                    fields:[\"name\",\"employee_name\"],\n                                                                    order_by:\"creation desc\",\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                             if(doc1.message[0])\n                                                             {\n                                                                var tbl1 = d.get_field(\"employee_table\");\n                                                                \n                                                                while(d.fields_dict.employee_table.df.data[0] !=undefined)\n                                                                {\n                                                                    d.fields_dict.employee_table.grid.grid_rows.forEach(function(row)\n                                                                    {\n                                                                        row.remove();\n                                                                    }); \n                                                                }\n                                                                    d.get_field(\"employee_table\").grid.page_length=5\n                                                                    \n                                                                    \n                                                                $.each(doc1.message,function(i,v)\n                                                                {\n                                                                    tbl1.df.data.push({\"suject\":\"uuuuuuu\"})\n                                                                    tbl1.df.data[i].employee=v.name\n                                                                    tbl1.df.data[i].employee_name=v.employee_name\n                                                                })\n                                                                \n                                                                tbl1.refresh();\n                                                             }\n                                                         }) \n                                                    }\n                                                     else if(company1.value !=undefined&&designation1.value!=undefined&&department1.value!=undefined)\n                                                    {\n                                                        frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get_list\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Employee\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"company\":company1.value,\n                                                                        \"designation\":designation1.value,\n                                                                        \"department\":department1.value,\n                                                                        \"status\":\"Active\"\n                                                                    },\n                                                                    \n                                                                    fields:[\"name\",\"employee_name\"],\n                                                                    order_by:\"creation desc\",\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                             if(doc1.message[0])\n                                                             {\n                                                                var tbl1 = d.get_field(\"employee_table\");\n                                                                \n                                                                while(d.fields_dict.employee_table.df.data[0] !=undefined)\n                                                                {\n                                                                    d.fields_dict.employee_table.grid.grid_rows.forEach(function(row)\n                                                                    {\n                                                                        row.remove();\n                                                                    }); \n                                                                }\n                                                                    d.get_field(\"employee_table\").grid.page_length=5\n                                                                    \n                                                                    \n                                                                $.each(doc1.message,function(i,v)\n                                                                {\n                                                                    tbl1.df.data.push({\"suject\":\"uuuuuuu\"})\n                                                                    tbl1.df.data[i].employee=v.name\n                                                                    tbl1.df.data[i].employee_name=v.employee_name\n                                                                })\n                                                                \n                                                                tbl1.refresh();\n                                                             }\n                                                         }) \n                                                    }\n                                                    //  else if(company1.value ==undefined)\n                                                    // {\n                                                    //   holiday1.value=\" \"\n                                                    //   designation1.value=\" \"\n                                                    //   department1.value=\" \"\n                                                    //   holiday1.refresh()\n                                                    //   designation1.refresh()\n                                                    //   department1.refresh()\n                                                    // }\n                                                             \n                                                         \n                                                \n                                                 trigger_tbl=2\n                                             }\n                                             else\n                                             {\n                                                trigger_tbl=1 \n                                             }\n                                             \n                                         },\n                         \t    },\n                         \t         {\"fieldtype\":\"Column Break\",},\n                                {\n                                        \"fieldtype\":\"Link\",\n                                \t\tfieldname: \"holiday\",\n                                \t\tlabel: __(\"Holiday List\"),\n                                \t\toptions:\"Holiday List\",\n                                \t\tfilters:{\n                                \t\t            company:ds\n                                \t\t        },\n                                \t\treqd:1\n                                \t\t\n                         \t    },\n                         \t        {\"fieldtype\":\"Column Break\",},\n                                {\n                                \t\tfieldtype: \"Link\",\n                                \t\tfieldname: \"designation\",\n                                \t\tlabel: __(\"Designation\"),\n                                \t\toptions:\"Designation\",\n                                        'onchange':() =>\n                                         { \n                                             if(trigger_tbl==1)\n                                             {\n                                                 console.log(\"d1\")\n                                                 holidaylist=[]\n                                                 var holiday1 = d.get_field(\"holiday\");\n                                                 var company1 = d.get_field(\"company\");\n                                                 var designation1 = d.get_field(\"designation\");\n                                                 var department1 = d.get_field(\"department\");\n\n                                                        while(d.fields_dict.employee_table.df.data[0] !=undefined)\n                                                        {\n                                                            d.fields_dict.employee_table.grid.grid_rows.forEach(function(row)\n                                                            {\n                                                                row.remove();\n                                                            }); \n                                                        }\n                                                    \n                                                    if(company1.value !=undefined&&designation1.value==undefined&&department1.value==undefined)\n                                                    {\n                                                         console.log(\"d2\")\n                                                        frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get_list\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Employee\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"company\":company1.value,\n                                                                        // \"designation\":designation1,\n                                                                        // \"department\":department1,\n                                                                        \"status\":\"Active\"\n                                                                    },\n                                                                    \n                                                                    fields:[\"name\",\"employee_name\"],\n                                                                    order_by:\"creation desc\",\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                             if(doc1.message[0])\n                                                             {\n                                                                var tbl1 = d.get_field(\"employee_table\");\n                                                                \n                                                                while(d.fields_dict.employee_table.df.data[0] !=undefined)\n                                                                {\n                                                                    d.fields_dict.employee_table.grid.grid_rows.forEach(function(row)\n                                                                    {\n                                                                        row.remove();\n                                                                    }); \n                                                                }\n                                                                    d.get_field(\"employee_table\").grid.page_length=5\n                                                                    \n                                                                    \n                                                                $.each(doc1.message,function(i,v)\n                                                                {\n                                                                    tbl1.df.data.push({\"suject\":\"uuuuuuu\"})\n                                                                    tbl1.df.data[i].employee=v.name\n                                                                    tbl1.df.data[i].employee_name=v.employee_name\n                                                                })\n                                                                \n                                                                tbl1.refresh();\n                                                             }\n                                                         }) \n                                                    }\n                                                    else if(company1.value !=undefined&&designation1.value!=undefined&&department1.value==undefined)\n                                                    {\n                                                         console.log(\"d3\")\n                                                        frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get_list\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Employee\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"company\":company1.value,\n                                                                        \"designation\":designation1.value,\n                                                                        // \"department\":department1,\n                                                                        \"status\":\"Active\"\n                                                                    },\n                                                                    \n                                                                    fields:[\"name\",\"employee_name\"],\n                                                                    order_by:\"creation desc\",\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                             if(doc1.message[0])\n                                                             {\n                                                                var tbl1 = d.get_field(\"employee_table\");\n                                                                \n                                                                while(d.fields_dict.employee_table.df.data[0] !=undefined)\n                                                                {\n                                                                    d.fields_dict.employee_table.grid.grid_rows.forEach(function(row)\n                                                                    {\n                                                                        row.remove();\n                                                                    }); \n                                                                }\n                                                                    d.get_field(\"employee_table\").grid.page_length=5\n                                                                    \n                                                                    \n                                                                $.each(doc1.message,function(i,v)\n                                                                {\n                                                                    tbl1.df.data.push({\"suject\":\"uuuuuuu\"})\n                                                                    tbl1.df.data[i].employee=v.name\n                                                                    tbl1.df.data[i].employee_name=v.employee_name\n                                                                })\n                                                                \n                                                                tbl1.refresh();\n                                                             }\n                                                         }) \n                                                    }\n                                                    else if(company1.value !=undefined&&designation1.value==undefined&&department1.value!=undefined)\n                                                    {\n                                                         console.log(\"d4\")\n                                                        frappe.call\n                                                        ({\n                                                            \"method\":\"frappe.client.get_list\",\n                                                            \"args\":\n                                                                {\n                                                                    \"doctype\":\"Employee\",\n                                                                    \"filters\":\n                                                                    {\n                                                                        \"company\":company1.value,\n                                                                        // \"designation\":designation1,\n                                                                        \"department\":department1.value,\n                                                                        \"status\":\"Active\"\n                                                                    },\n                                                                    \n                                                                    fields:[\"name\",\"employee_name\"],\n                                                                    order_by:\"creation desc\",\n                                                                },\n                                                        })\n                                                        .then(function(doc1)\n                                                         {\n                                                             if(doc1.message[0])\n                                                             {\n                                                                var tbl1 = d.get_field(\"employee_table\");\n                                                                \n                                                                while(d.fields_dict.employee_table.df.data[0] !=undefined)\n                                                                {\n                                                                    d.fields_dict.employee_table.grid.grid_rows.forEach(function(row)\n                                                                    {\n                                                                        row.remove();\n                                                                    }); \n                                                                }\n                                                                    d.get_field(\"employee_table\").grid.page_length=5\n                                                                    \n                                                                    \n                                                                $.each(doc1.message,function(i,v)\n                                                                {\n                                                      ",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Holiday List",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.826311",
  "module": null,
  "name": "Holiday List",
  "script": "frappe.ui.form.on('Holiday List',\n{\n\trefresh(frm)\n\t{\n\t cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t},\n\t\n\tafter_save(frm)\n\t{\n\t    frappe.set_route(\"List\",\"Holiday List\")\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Appointment Letter",
  "enabled": 0,
  "modified": "2023-03-23 09:00:58.862395",
  "module": null,
  "name": "Appointment Letter List",
  "script": "frappe.listview_settings['Appointment Letter'] = {\n hide_name_column: true,\n \n refresh: function(listview) {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t}\n    \n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Applicant",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.898535",
  "module": null,
  "name": "Job Applicant List",
  "script": "frappe.listview_settings['Job Applicant'] = {\n  hide_name_column: true,\n \n refresh: function(listview) {\n\t    $(\".comment-count\").hide();\n\t    //$(\".frappe-timestamp\").hide();\n\t    $(\".avatar-small\").hide();\n\t    $(\"div[data-fieldname = name]\").hide();\n\t}\n    \n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Opening",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.934752",
  "module": null,
  "name": "Job Opening List",
  "script": "\nfrappe.listview_settings['Job Opening'] = {\n     hide_name_column: true,\n refresh: function(listview) {\n$(\".comment-count\").hide();\n// $(\".frappe-timestamp\").hide();\n $(\".avatar-small\").hide();\n$(\"div[data-fieldname = name]\").hide();\n}\n};",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Staffing Plan",
  "enabled": 1,
  "modified": "2023-03-23 09:00:58.971201",
  "module": null,
  "name": "Staffing Plan List",
  "script": "frappe.listview\\_settings['Staffing Plan'] =  { refresh: function(listview)   {  document.querySelector(\"#page-List\\\\/Staffing\\\\ Plan\\\\/List > div.container.page-body > div.page-wrapper > div > div.row.layout-main > div.col.layout-main-section-wrapper > div.layout-main-section.frappe-card > div.frappe-list > div.result > header > div.level-left.list-header-subject > div:nth-child(3)\").style.visibility='hidden';  // items=document.getElementsByClassName(\"list-row-col hidden-xs ellipsis\")  // for (var i = 0; i <items.length; i ++) {  // console.log(items[i])  // }  var submitted\\_items=document.getElementsByClassName(\"indicator-pill blue filterable ellipsis\")  for (var i = 0; i < submitted\\_items.length; i ++) {  if(submitted\\_items[i].getAttribute('data-filter')=== 'docstatus,=,1'){  submitted\\_items[i].style.visibility = 'hidden';  }  }      cancelled\\_items=document.getElementsByClassName(\"indicator-pill red filterable ellipsis\")  for (var i = 0; i <cancelled\\_items.length; i ++) {  if(cancelled\\_items[i].getAttribute('data-filter')=== 'docstatus,=,2' || cancelled\\_items[i].getAttribute('data-filter')=== 'docstatus,=,0'){  cancelled\\_items[i].style.visibility = 'hidden';  }  }      // var submitted\\_items=document.getElementsByClassName(\"indicator-pill blue filterable ellipsis\")  // for (var i = 0; i < submitted\\_items.length; i ++) {  // submitted\\_items[i].style.visibility = 'hidden';  // }  } };  ",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Purchase Order",
  "enabled": 1,
  "modified": "2023-05-31 14:42:45.577271",
  "module": null,
  "name": "PO",
  "script": "var allowed_companies;\nvar taxes\n\nvar net_total=[]\nvar account=[]\nvar rate=[]\n\n\nvar items=[]\nvar container=[]\nvar names=[]\nvar purchase_order_id=[]\nvar quantity=[]\n\n\nvar a=[]\n\nfrappe.ui.form.on('Purchase Order', {\n\trefresh(frm) \n\t{\n\t    setTimeout(() =>\n            {\n    \t\t\tfrm.remove_custom_button('Link to Material Request', 'Tools');\n    \t\t\tfrm.remove_custom_button('Update Rate as per Last Purchase', 'Tools');\n    \t\t\tfrm.remove_custom_button('Material Request', 'Get Items From');\n    \t\t\tfrm.remove_custom_button('Supplier Quotation', 'Get Items From');\n    \t\t\tfrm.remove_custom_button('Product Bundle', 'Get Items From');\n    \t\t\t\n    \t\t\tfrm.remove_custom_button('Hold', 'Status');\n    \t\t\tfrm.remove_custom_button('Close', 'Status');\n    \t\t\t\n    \t\t\tfrm.remove_custom_button('Subscription', 'Create');\n    \t\t\tfrm.remove_custom_button('Payment Request', 'Create');\n    \t\t\tfrm.remove_custom_button('Purchase Receipt', 'Create');\n    \t\t\t\n    \t\t\tfrm.remove_custom_button('Update Items');\n    \t\t\t\n\t\t    },1000)\n\t    \n\t    \n\t\t// your code here\n\t\tif(frappe.user.has_role(\"Marketing Supervisor\") && frm.doc.status==\"To Receive and Bill\" ) \n\t\t\n    \t\t   {\n    \t\t       \n    \t\t      // console.log(\"Marketing Supervisor\")\n    \t\t       \n    \t\t       setTimeout(() =>\n                        {\n                \t\t       \n                \t\t       frm.remove_custom_button('Payment', 'Create');\n                \t\t       frm.remove_custom_button('Purchase Invoice', 'Create');\n                \t\t       frm.remove_custom_button('Update Items');\n                        },1000)\n                        \n                        \n                        if(frm.doc.proforma_created==0)\n                        {\n                        \n                        \n                        \n    \t\t    \n                \t\t    frm.add_custom_button('Create Proforma Invoice', () => \n                \t\t    \n                                 {\n                                     \n                                        frappe.route_options = {\"po_no\": frm.doc.name};\n                            \t\t\tdocument = frappe.new_doc(\"Sales Order\");\n                            \t\t\tfrappe.set_route(\"Form\", \"Sales Order\", document.name); \n                                     \n                                 })\n                                 frm.change_custom_button_type('Create Proforma Invoice', null, 'primary');\n                        }\n    \t\t   }\n    \t\t   \n    \t\t   \n    \t\t    \t\n                \t\t    \n                \t\t \n                \t\t    \n                \t\t    \n                \t\t    if(frappe.user.has_role(\"Purchase Manager\"))\n                \t\t       {\n                \t\t           \n                \t\t           if(frm.is_new())\n        \t\n                \t\t            {\n                \t\t            \n                \t\t        console.log(\"Purchase Manager\")\n                \t\t        \n                \t\t        frm.set_value(\"company\",\"Lamit\")\n                \t\t      //  frm.set_value(\"super_stockist\",\"Lamit\")\n                \t\t        frm.set_value(\"naming_series\",\"LMT-ORD-.YYYY.-\")\n                \t\t        \n                \t\t        frm.add_custom_button('Get Requested Products', () => \n                                             {\n                                                 \n                                                 cur_frm.clear_table(\"items\");\n                                                 cur_frm.refresh_fields();\n                                                 \n                                                //   console.log(\"ASDFGHJKL\")\n                                                 \n                                                 \n                                                 if(frm.doc.supplier)\n                                                 {\n                                                 \n                                                \n                                                 \n                                                  frappe.call\n                                                        ({\n                                                            method: \"frappe.client.get_list\",\n                                                            args: \n                                                            {\n                                                              'doctype':'Purchase Order',\n                                                              'fields':['name','payment_created','status1'], \n                                                                filters:\n                                                \t                {\n                                                                        \t                    \n                                                    \t                    'payment_created':1,\n                                                    \t                    \n                                                    \t                    'company': ['!=','Lamit'],\n                                                    \t                  \n                                                    \t                    'status1': [\"in\", ['Requested','Partialy Ordered']],\n                                                    \t                    'status':\"To Receive and Bill\",\n                                                                        \t \n                                                                    }\n                                                                    \n                                                            },\n                                                        callback:function(r) \n                                                            {\n                                                                if(r.message)\n                                                                {\n                                                                    //   console.log(r.message,\"11111111111\")\n                                                                    \n                                                                    \n                                                                    if(r.message.length>0)\n                                                                    {\n                                                                    \n                                                                    $.each(r.message,function(i,v)\n                                                                     {\n                                                                         \n                                                                         var id=v.name\n                                                                        \n                                                                         \n                                                                         frappe.call\n                                                                            ({\n                                                                                method: \"frappe.client.get\",\n                                                                                args: \n                                                                                {\n                                                                                  'doctype':'Purchase Order',\n                                                                                //   'fields':['company','tax_category','name'],\n                                                                                    filters:\n                                                                    \t                {\n                                                                                            \t                    \n                                                                        \t                    'name':id,\n                                                                                            \t \n                                                                                        }\n                                                                                        \n                                                                                },\n                                                                                callback:function(r) \n                                                                                {\n                                                                                    if(r.message)\n                                                                                    {\n                                                                                          console.log(r.message.items,\"2222222222222\")\n                                                                                        \n                                                                                        $.each(r.message.items,function(i,v)\n                                                                                            {\n                                                                                                if(v.ordered==0)\n                                                                                                {\n                                                                                                    console.log(v.item_code)\n                                                                                                    // items[i]=v.item_code\n                                                                                                    // container[i]=v.container\n                                                                                                    // purchase_order_id[i]=v.parent\n                                                                                                    // names[i]=v.name1\n                                                                                                    // quantity[i]=v.qty\n                                                                                                    \n                                                                                                    \n                                                                                                      var child = cur_frm.add_child(\"items\");\n                                                                                                    frappe.model.set_value(child.doctype, child.name, \"item_code\",v.item_code);\n                                                                                                    frappe.model.set_value(child.doctype, child.name, \"description\",v.item_code);\n                                                                                                    frappe.model.set_value(child.doctype, child.name, \"container\",v.container);\n                                                                                                    frappe.model.set_value(child.doctype, child.name, \"purchase_order_id\",v.parent);\n                                                                                                    frappe.model.set_value(child.doctype, child.name, \"sales_order_id\",v.sales_order_id);\n                                                                                                    frappe.model.set_value(child.doctype, child.name, \"name1\",v.name1);\n                                                                                                    frappe.model.set_value(child.doctype, child.name, \"qty\",v.qty);\n                                                                                                    \n                                                                                                            \n                                                                                                    cur_frm.refresh_field(\"items\");\n                                                                                                \n                                                                                                    \n                                                                                                    \n                                                                                                }\n                                                                                                \n                                                                                                // items[i]=v.item_code\n                                                                                                // container[i]=v.container\n                                                                                                // purchase_order_id[i]=v.parent\n                                                                                                // quantity[i]=v.qty\n                                                                                                \n                                                                                                //  var child = cur_frm.add_child(\"items\");\n                                                                                                //     frappe.model.set_value(child.doctype, child.name, \"item_code\",items[i]);\n                                                                                                //     frappe.model.set_value(child.doctype, child.name, \"container\",container[i]);\n                                                                                                //     frappe.model.set_value(child.doctype, child.name, \"purchase_order_id\",purchase_order_id[i]);\n                                                                                                //     frappe.model.set_value(child.doctype, child.name, \"qty\",quantity[i]);\n                                                                                                            \n                                                                                                //     cur_frm.refresh_field(\"items\");\n                                                                                                \n                                                                                                \n                                                                                                \n                                                                                                  \n                                                                                                \n                                                                                                \n                                                                                            })\n                                                                                            \n                                                                                            // items=[]\n                                                                                            // container=[]\n                                                                                            // purchase_order_id=[]\n                                                                                        \n                                                                                        \n                                                                                        \n                                                                                    }\n                                                                                }\n                                                                            })\n                                                                         \n                                                                         \n                                                                     })\n                                                                     \n                                                                    }\n                                                                    \n                                                                    else\n                                                                    {\n                                                                        msgprint(\"There is NO pending PO Against any SuperStockist\")\n                                                                    }\n                                                                     \n                                                                     \n                                                                     \n                                                                    \n               \n                                                                    \n                                                                    \n                                                                }\n                                                            }\n                                                        });\n                                                 }\n                                                 \n                                                 else\n                                                 {\n                                                     \n                                                     msgprint(\"Plz Select Supplier,Purchase Type & Required By First\")\n                                                     \n                                                 }\n                                                 \n                                                 \n                                                 \n                                                 \n                                                \n                                                    \n                                                 \n                                             })\n                                             \n                                             \n                                             \n                                            //  purchase_order_id[i]=v.name\n                                            //  console.log(purchase_order_id,\"8123456789o123456789\")\n                                             \n                                             \n                \t\t        frm.change_custom_button_type('Get Requested Products', null, 'primary');\n                \t\t        \n                \t\t        \n                \t\t        \n                \t\t        \n                \t\t        \n                \t\t    }\n                \t\t    \n                \t\n                \t\t  \n                \t\t \n                \t\t    \n                \t\t    \n                \t\t}\n            \t\t   \n    \t\t   \n    \t\t  \n\t},\n\t\n\tonload(frm)\n\t{\n\t     setTimeout(() =>\n            {\n    \t\t\tfrm.remove_custom_button('Link to Material Request', 'Tools');\n    \t\t\tfrm.remove_custom_button('Update Rate as per Last Purchase', 'Tools');\n    \t\t\tfrm.remove_custom_button('Material Request', 'Get Items From');\n    \t\t\tfrm.remove_custom_button('Supplier Quotation', 'Get Items From');\n    \t\t\tfrm.remove_custom_button('Product Bundle', 'Get Items From');\n    \t\t\t\n    \t\t\tfrm.remove_custom_button('Hold', 'Status');\n    \t\t\tfrm.remove_custom_button('Close', 'Status');\n    \t\t\t\n    \t\t\tfrm.remove_custom_button('Subscription', 'Create');\n    \t\t\tfrm.remove_custom_button('Payment Request', 'Create');\n    \t\t\tfrm.remove_custom_button('Purchase Receipt', 'Create');\n    \t\t\tfrm.remove_custom_button('Update Items');\n    \t\t\t\n    \t\t\t\n\t\t    },1000)\n\t    \n\t    \n\t      if(frappe.user.has_role(\"Sales Admin\"))\n\t      \n\t      {\n\t          frm.set_df_property('purchase_type',  'hidden',1);\n\t          \n    \t     if(frm.is_new())\n    \t     \n        \t            {\n        \t      \n        \t            frappe.call\n                            ({\n                                    method: \"frappe.client.get_list\",\n                                    args: \n                                    {\n                                        doctype: \"Super Stockist\",\n                                        fields: [\"name\"],\n                                       \n                                       \n                                    },\n                                    callback:function(r) \n                                    {\n                                        if(r.message)\n                                        {\n                                            \n                                           \n                                             \n                                              frm.set_value(\"company\",r.message[0].name)\n                                              frm.set_value(\"super_stockist\",r.message[0].name)\n                                              frm.set_df_property('company',  'read_only',1);\n                                              \n                                              \n                                              \n                                            \n                                              if(r.message[0].name==\"ISHA\")\n                                              {\n                                                  frm.set_value(\"naming_series\",\"ISHA-ORD-.YYYY.-\")\n                                                  frm.set_df_property('naming_series',  'read_only',1);\n                                              }\n                                              else if(r.message[0].name==\"KP\")\n                                              {\n                                                  frm.set_value(\"naming_series\",\"KP-ORD-.YYYY.-\")\n                                              }\n                                            //   if(r.message[0].name==\"ISHA\")\n                                            //   {\n                                            //       frm.set_value(\"naming_series\",\"ISHA-ORD-.YYYY.-\")\n                                            //   }\n                                            //   if(r.message[0].name==\"AALAM\")\n                                            //   {\n                                            //       frm.set_value(\"naming_series\",\"ISHA-ORD-.YYYY.-\")\n                                            //   }\n                                            //   if(r.message[0].name==\"T COM\")\n                                            //   {\n                                            //       frm.set_value(\"naming_series\",\"ISHA-ORD-.YYYY.-\")\n                                            //   }\n                                            //   if(r.message[0].name==\"NR\")\n                                            //   {\n                                            //       frm.set_value(\"naming_series\",\"ISHA-ORD-.YYYY.-\")\n                                            //   }\n                                            //   if(r.message[0].name==\"PRIDE\")\n                                            //   {\n                                            //       frm.set_value(\"naming_series\",\"ISHA-ORD-.YYYY.-\")\n                                            //   }\n                                            //   if(r.message[0].name==\"ROOF TECH\")\n                                            //   {\n                                            //       frm.set_value(\"naming_series\",\"ISHA-ORD-.YYYY.-\")\n                                            //   }\n                                               \n                                            \n                                              \n                                                        frappe.call\n                                                            ({\n                                                                method: \"frappe.client.get_list\",\n                                                                args: \n                                                                {\n                                                                    doctype: \"Supplier\",\n                                                                     fields: [\"internal_supplier\",\"name\"],\n                                                                    filters:{\n                                                                        \"internal_supplier\":1,\n                                                                        // \"user\":frappe.session.user,\n                                                                    },\n                                                                   \n                                                                },\n                                                                callback:function(r) \n                                                                {\n                                                                    if(r)\n                                                                    {\n                                                                        console.log(r,\"kkkkkkkkkkkkkkk\")\n                                                                        if(r.message.length==0)\n                                                                        {\n                                                                            msgprint(\"Please create a supplier in supplier list and verify the intersupplier is true\")\n                                                                        }\n                                                                        else\n                                                                        {\n                                                                        \n                                                                            frm.set_value(\"supplier\",r.message[0].name)\n                                                                          frm.set_df_property('supplier',  'read_only',1);\n                                                                        }\n                                                                    }\n                                                                }\n                                                            })\n                                              \n                                              \n                                              \n                                              \n                                        }\n                                        \n                                        \n                                        \n                                    \n                                    \n                                    }\n                                })\n                                \n                            frm.set_df_property('name',  'hidden',1); \n                                \n                                \n                               \n        \t             }\n\t      }\n\t      \n\t      \n\t      \n\t      if(frm.is_new())\n            \n            {\n           \n            \n            \n                console.log(frm.doc.transaction_date,\"------------\")\n                var g=flt(frm.doc.transaction_date.split(\"-\")[1])\n                console.log(g,\"--------------\")\n                \n                // \n                \n                if(g==\"1\")\n                {\n                frm.set_value(\"month\",\"January\")\n                }\n                \n                else if(g==\"2\")\n                {\n                frm.set_value(\"month\",\"February\")\n                }\n                else if(g==\"3\")\n                {\n                frm.set_value(\"month\",\"March\")\n                }\n                else if(g==\"4\")\n                {\n                frm.set_value(\"month\",\"April\")\n                }\n                else if(g==\"5\")\n                {\n                frm.set_value(\"month\",\"May\")\n                }\n                else if(g==\"6\")\n                {\n                frm.set_value(\"month\",\"June\")\n                }\n                else if(g==\"7\")\n                {\n                frm.set_value(\"month\",\"July\")\n                }\n                else if(g==\"8\")\n                {\n                frm.set_value(\"month\",\"August\")\n                }\n                else if(g==\"9\")\n                {\n                frm.set_value(\"month\",\"September\")\n                }\n                else if(g==\"10\")\n                {\n                frm.set_value(\"month\",\"October\")\n                }\n                else if(g==\"11\")\n                {\n                frm.set_value(\"month\",\"November\")\n                }\n                else if(g==\"12\")\n                {\n                frm.set_value(\"month\",\"December\")\n                }\n    \t\t    \n            }\n\t      \n\t      \n\t      \n\t      \n\t},\n\t\n\t\n    company:function(frm)\n\t{\n\t    frm.set_value(\"super_stockist\",frm.doc.company)\n\t},\n\t\n\ttransaction_date:function(frm)\n{\n\n                console.log(frm.doc.transaction_date,\"------------\")\n                var g=flt(frm.doc.transaction_date.split(\"-\")[1])\n                console.log(g,\"--------------\")\n                \n                // \n                \n                if(g==\"1\")\n                {\n                frm.set_value(\"month\",\"January\")\n                }\n                \n                else if(g==\"2\")\n                {\n                frm.set_value(\"month\",\"February\")\n                }\n                else if(g==\"3\")\n                {\n                frm.set_value(\"month\",\"March\")\n                }\n                else if(g==\"4\")\n                {\n                frm.set_value(\"month\",\"April\")\n                }\n                else if(g==\"5\")\n                {\n                frm.set_value(\"month\",\"May\")\n                }\n                else if(g==\"6\")\n                {\n                frm.set_value(\"month\",\"June\")\n                }\n                else if(g==\"7\")\n                {\n                frm.set_value(\"month\",\"July\")\n                }\n                else if(g==\"8\")\n                {\n                frm.set_value(\"month\",\"August\")\n                }\n                else if(g==\"9\")\n                {\n                frm.set_value(\"month\",\"September\")\n                }\n                else if(g==\"10\")\n                {\n                frm.set_value(\"month\",\"October\")\n                }\n                else if(g==\"11\")\n                {\n                frm.set_value(\"month\",\"November\")\n                }\n                else if(g==\"12\")\n                {\n                frm.set_value(\"month\",\"December\")\n                }\n\n\n\n\n\n},\n\t\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Landing Cost Calculation",
  "enabled": 1,
  "modified": "2023-06-01 10:55:19.332016",
  "module": null,
  "name": "Landing Cost Calculation",
  "script": "\nvar id;\nvar array=[]\nvar total;\n\nvar id1;\nvar array2=[];\nvar array22=[];\nfrappe.ui.form.on('Landing Cost Calculation', {\n\trefresh(frm)\n\t{\n\t\t// your code here\n\t},\n\t\n\t\n\tselling_without_gst:function(frm)\n\t\n\t{\n\t    if(frm.doc.selling_without_gst)\n\t    {\n\t   \n\t    total=frm.doc.selling_without_gst*frm.doc.number_of_pieces\n\t    frm.set_value(\"selling_value_total\",total)\n\t    \n\t    \n\t    var margin=flt(total)-flt(frm.doc.total_value_landing)\n\t    frm.set_value(\"margin\",margin.toFixed(2))\n\t    \n\t    \n\t    var percentage=(margin/total)*100\n\t    frm.set_value(\"margin_percentage\",percentage.toFixed(2))\n\t    }\n\t    \n\t   // sum=total\n\t    \n\t     \n\t    \n\t    \n\t},\n\t\n\t\n\t\n\tafter_save:function(frm)\n\t{\n\t    \n\t   console.log(frm.doc.grand_total_value,\"iiiiiiiiiii\")\n\t    \n\t    if(frm.doc.selling_value_total)\n\t    {\n\t    \n\t    var sum=0\n\t    \n\t    frappe.call\n                            ({\n                                    method: \"frappe.client.get_list\",\n                                    args: \n                                    {\n                                        doctype: \"Landing Cost Calculation\",\n                                        \n                                        fields: [\"name\",\"purchase_invoice_id\",\"purchase_type\",\"selling_value_total\"],\n                                        filters:{\n                                            \"purchase_invoice_id\":frm.doc.purchase_invoice_id,\n                                            \"selling_value_total\":[\"!=\", \"\"],\n                                            \"selling_value_total\":[\"!=\",undefined],\n                                            \"selling_value_total\":[\">\",0]\n                                            \n                                        },\n                                        \n                                       \n                                    },\n                                    callback:function(r) \n                                    {\n                                        if(r.message)\n                                        {\n                                            console.log(r.message,\"filter with no selling value total > 0\")\n                                            \n                                            $.each(r.message,function(i,v)\n                                                {\n                                                                         \n                                                    id=v.selling_value_total\n                                                    array[i]=v.name\n                                                    \n                                                    console.log(id)\n                                                    \n                                                    sum=flt(sum)+flt(id)\n                                                    \n                                                    \n                                                    \n                                                    \n                                                    \n                                                    \n                                                    \n                                                })\n                                                  console.log(sum,\"ooo\")\n                                                \n                                                // var total1=flt(sum)+flt(total)\n                                                // console.log(total1,\"999999999\")\n                                                \n                                                console.log(array)\n                                                \n                                              \n                                                        for(var i=0;i<array.length;i++)\n                                                    \n                                                        {\n                                                            frappe.db.set_value('Landing Cost Calculation', array[i], 'grand_selling_value_total',sum)\n                                                        }\n                                               \n                                                   \n                                        }\n                                        \n                                        array=[];\n                                        var id;\n                                    }\n                            })\n                            \n\t    }\n\t    \n\t    if(frm.doc.total_value_landing)\n\t    {\n\t       \n\t       if(frm.doc.selling_value_total)\n\t       {\n\t           \n\t            if(frm.doc.grand_total_value_landing==undefined || frm.doc.grand_total_value_landing==\"\")\n\t            {\n\t                var sum1=0\n\t        \n\t         frappe.call\n                            ({\n                                    method: \"frappe.client.get_list\",\n                                    args: \n                                    {\n                                        doctype: \"Landing Cost Calculation\",\n                                        \n                                        fields: [\"name\",\"purchase_invoice_id\",\"purchase_type\",\"selling_value_total\",\"total_value_landing\"],\n                                        filters:{\n                                            \"purchase_invoice_id\":frm.doc.purchase_invoice_id,\n                                            \n                                            \n                                        },\n                                        \n                                       \n                                    },\n                                    callback:function(r) \n                                    {\n                                        if(r.message)\n                                        {\n                                            console.log(r.message,\"update grand_total_value_landing\")\n                                            $.each(r.message,function(i,v)\n                                                {\n                                                                         \n                                                    id1=v.total_value_landing\n                                                    array2[i]=v.name\n                                                    \n                                                    console.log(id1)\n                                                    \n                                                    sum1=flt(sum1)+flt(id1)\n                                                    \n                                                   \n                                                })\n                                                \n                                                console.log(sum1,\"7777777777\")\n                                                console.log(array2)\n                                                \n                                                 for(var i=0;i<array2.length;i++)\n                                                    \n                                                        {\n                                                            frappe.db.set_value('Landing Cost Calculation', array2[i], 'grand_total_value_landing',sum1)\n                                                        }\n                                                   \n                                                \n                                                \n                                        }\n                                        \n                                        array2=[];\n                                        id1;\n                                    }\n                            })\n\t            }\n\t            \n\t            \n\t            if(frm.doc.grand_total_value_landing && frm.doc.grand_selling_value_total)\n\t            {\n\t                console.log(frm.doc.grand_total_value_landing,\"frm.doc.grand_total_value_landing\")\n\t                console.log(frm.doc.grand_selling_value_total,\"frm.doc.grand_selling_value_total\")\n\t                var te=flt(frm.doc.grand_selling_value_total)-flt(frm.doc.grand_total_value_landing)\n\t                \n\t                console.log(te,\"2222222222222\")\n\t                \n\t                frappe.call\n                            ({\n                                    method: \"frappe.client.get_list\",\n                                    args: \n                                    {\n                                        doctype: \"Landing Cost Calculation\",\n                                        \n                                        fields: [\"name\",\"purchase_invoice_id\",\"purchase_type\",\"selling_value_total\",\"total_value_landing\"],\n                                        filters:{\n                                            \"purchase_invoice_id\":frm.doc.purchase_invoice_id,\n                                            \n                                            \n                                        },\n                                        \n                                       \n                                    },\n                                    callback:function(r) \n                                    {\n                                        if(r.message)\n                                        {\n                                            console.log(r.message,\"update total_margin\")\n                                            $.each(r.message,function(i,v)\n                                                {\n                                                                         \n                                                  \n                                                    array22[i]=v.name\n                                                    \n                                                   \n                                                    \n                                                   \n                                                })\n                                                \n                                                // console.log(sum1,\"7777777777\")\n                                                console.log(array22,\"==========\")\n                                                \n                                                 for(var i=0;i<array22.length;i++)\n                                                    \n                                                        {\n                                                            frappe.db.set_value('Landing Cost Calculation', array22[i], 'grand_profit',te)\n                                                        }\n                                                   \n                                                \n                                                \n                                        }\n                                    }\n                                    \n                            })\n\t                \n\t                \n\t            }\n                            \n\t        }\n\t        \n\t    }\n\t    \n\t}\n\t\n\t\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Job Applicant",
  "enabled": 1,
  "modified": "2023-06-16 14:46:23.690858",
  "module": null,
  "name": "Job applicant interview schedule",
  "script": "frappe.ui.form.on('Job Applicant', {\n\trefresh(frm) \n\t{\n\t    \n\t    \n\t    frm.set_df_property('applicant_name',  'hidden', 1);\n\t    \n\t    \n\t    \n\t    $('li').removeClass(\"disabled\");\n\t    cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    \n\t    setTimeout(() =>\n\t      {\n            frm.remove_custom_button('Job Offer','Create');\n            frm.remove_custom_button('Interview','Create');\n       \n          }, 10);\n          \n          \n        //   if(frm.doc.status==\"Sele\")\n          \n          \n          \n          \n          \n          \n\t    \n\t     if (!frm.is_new())\n        {\n             if(frm.doc.status!==\"Selected\")\n            {\n            \n            \n        \n            frm.add_custom_button(\"Schedule Interview\", () => \n            {\n                    let d = new frappe.ui.Dialog\n                    ({\n                                        title: 'Enter Interview Details ',\n                                        fields: [\n                                            \n                                           \n                                             {\n                                                 label: 'Interview Type',\n                                                 fieldname: 'interview_type',\n                                                fieldtype: 'Select',\n                                                options :'Direct\\nGoogle Meet',\n                                                 \"reqd\": 1,\n                                               \n                                             },\n                                             \n                                          \n                                            {\n                                                label: 'Place',\n                                                fieldname: 'place',\n                                                fieldtype: 'Link',\n                                                'depends_on': \"eval:doc.interview_type===\\\"Direct\\\"\",\n                                                'mandatory_depends_on': \"eval:doc.interview_type===\\\"Direct\\\"\",\n                                                \"reqd\": 1,\n                                                options :'Address',\n                                                \n                                                get_query: function() {\n                                                            return {\n                                                              filters: {\n                                                                        'name': ['in', ['Lamit-Office', 'Hotel Periyaar-Office']]\n                                                                    }\n                                                            };\n                                                          }\n                                                \n                                                \n                                                \n                                            },\n                                             \n                                             {\n                                                label: 'Google Meet Link',\n                                                fieldname: 'meet_link',\n                                                fieldtype: 'Data',\n                                                'depends_on': \"eval:doc.interview_type===\\\"Google Meet\\\"\",\n                                                'mandatory_depends_on':'eval:doc.interview_type===\\\"Google Meet\\\"'\n                                             },\n                                             \n                                             {\n                                                label: 'Interview Date',\n                                                fieldname: 'interview_date',\n                                                fieldtype: 'Date',\n                                                'depends_on':'interview_type',\n                                                \"reqd\": 1,\n                                             },\n                                             \n                                           \n                                             {\n                                                  fieldtype: 'Section Break',\n                                             },\n                                             \n                                              {\n                                                label: 'Hour',\n                                                fieldname: 'time1',\n                                                fieldtype: 'Select',\n                                                options :'01\\n02\\n03\\n04\\n05\\n06\\n07\\n08\\n09\\n10\\n11\\n12',\n                                                // 'depends_on':'interview_type',\n                                                \"reqd\": 1,\n                                             },\n                                            \n                                             \n                                             {\n                                                  fieldtype: 'Column Break',\n                                              },\n                                              \n                                              {\n                                                label: 'Min',\n                                                fieldname: 'time2',\n                                                fieldtype: 'Select',\n                                                 options :'00\\n05\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\\n55',\n                                                // 'depends_on':'interview_type',\n                                                \"reqd\": 1,\n                                             },\n                                             \n                                            {\n                                                  fieldtype: 'Column Break',\n                                              },\n                                                 {\n                                                 label: 'Meridian',\n                                                 fieldname: 'time3',\n                                                fieldtype: 'Select',\n                                                options :'AM\\nPM',\n                                                // 'depends_on':'interview_type',\n                                                 \"reqd\": 1,\n                                               \n                                             },\n                                             \n                                             {\n                                                  fieldtype: 'Section Break',\n                                             },\n                                                \n                                            \n                                                     \n                                            \n                \n                                            {\n                        \t\t\t            fieldtype:'Table', fieldname: 'interview_panel',\n                        \t\t\t            description: __('Interview Panel'),\n                                    \t\t\tfields:\n                                    \t\t\t[\n                                    \t\t\t\t{fieldtype:'Link', fieldname:'employee',label: __('Employee'),options:\"Employee\",in_list_view:1,columns:1.2,},\n                                    \t\t\t],\n                                            },\n                                        ],\n                                        primary_action_label: 'Submit',\n                                        primary_action(values) \n                                        {\n                                            console.log(values,\"kkkk\")\n                                            \n                                            frm.set_value('status',\"Interview Scheduled\");\n                                            \n                                            \n                                            if(values.interview_type==\"Direct\")\n                                            {\n                                                \n                                                 \n                                                frm.set_value('interview_type1',values.interview_type);\n                                                frm.set_value('interview_date1',values.interview_date);\n                                                \n                                                frm.set_value('place1',values.place);\n                                                frm.set_value('interview_time1',values.interview_time);\n                                                frm.set_value('time1',values.time1+\":\"+values.time2+\":\"+values.time3);\n                                                \n                                                console.log(\"Direct\")\n                                               \n                                            }\n                                            else if(values.interview_type==\"Google Meet\")\n                                            {\n                                                  frm.set_value('interview_type1',values.interview_type);\n                                                  frm.set_value('interview_date1',values.interview_date);\n                                                  frm.set_value('meeting_link1',values.meet_link);\n                                                \n                                                  frm.set_value('place1',values.place);\n                                                 frm.set_value('time1',values.time1+\":\"+values.time2+\":\"+values.time3);\n                                                  console.log(\"Meet\")\n                                                \n                                            }\n                                            \n                                            cur_frm.clear_table(\"interview_panel\");\n                                            cur_frm.refresh_fields();\n                                              \n                                              $.each(values.interview_panel,function(i,v)\n                                              {\n                                                 var child = cur_frm.add_child(\"interview_panel\");\n                                                 frappe.model.set_value(child.doctype, child.name, \"employee\",v.employee); \n                                                 cur_frm.refresh_field(\"interview_panel\");\n                                                 console.log(v.employee)\n                                              })\n                                            \n                                           \n                                          \n                                            frm.save();\n                                            d.hide();\n                                            \n                                           \n                                        }\n                    \n                    });\n                    d.show();\n                    \n                    // cur_frm.save();\n            })\n            frm.change_custom_button_type('Schedule Interview', null, 'success');\n            \n             }\n             \n             \n             \n            frm.add_custom_button(\"Applicant Status\", () => \n            {\n                 var trigger_tbl=1\n                    let d = new frappe.ui.Dialog\n                    ({\n                                fields: [\n                                             {\n                                                label: 'Status',\n                                                 fieldname: 'status1',\n                                                fieldtype: 'Select',\n                                                options:[\"No Response\",\"Hold\",\"Selected\",\"Rejected\",\"Selected & Awaiting Response\"],\n                                                 \"reqd\": 1,\n                                                'onchange':() =>\n                                                 { \n                                                     if(trigger_tbl==1)\n                                                     {\n                                                         var status1 = d.get_field(\"status1\");\n                                                         var remark = d.get_field(\"remark\");\n                                                         \n                                                         if(status1.value==\"Rejected\")\n                                                         {\n                                                             remark.value=frm.doc.reason_for_rejection\n                                                         }\n                                                         else\n                                                         {\n                                                             remark.value=frm.doc.remark\n                                                         }\n                                                         remark.refresh()\n                                                         \n                                                         trigger_tbl=2\n                                                     }\n                                                     else\n                                                     {\n                                                        trigger_tbl=1 \n                                                     }\n                                                     \n                                                 },\n                                             },\n                                             {\n                                                 label: 'Remark',\n                                                 fieldname: 'remark',\n                                                fieldtype: 'Small Text',\n                                                \"reqd\": 1,\n                                                'mandatory_depends_on':'eval:doc.status1===\"Rejected\"'\n                                               \n                                             },\n                                        ],\n                                        primary_action_label: 'Submit',\n                                        primary_action(values)\n                                        {\n                                            frm.set_value('status',values.status1);\n                                            if(values.status1==\"Rejected\")\n                                            {\n                                                frm.set_value('reason_for_rejection',values.remark)\n                                            }\n                                            else\n                                            {\n                                                frm.set_value('remark',values.remark)\n                                            }\n                                            cur_frm.save();\n                                            d.hide();\n                                        }\n                                        \n                                        \n                                        \n                    });\n                    d.show();\n            })\n            frm.change_custom_button_type('Applicant Status', null, 'success');\n             \n            \n            \n         }\n        \n        if(!frm.is_new()&&frm.doc.interview_type1)\n        {\n            console.log(frm.doc.status,\"klklk\")\n            if(frm.doc.status!==\"Selected\")\n            {\n            \n            frm.add_custom_button(\"Reschedule Interview\", () => \n            {\n                    let d = new frappe.ui.Dialog\n                    ({\n                                        title: 'Enter Interview Details ',\n                                        fields: [\n                                            \n                                            \n                                             {\n                                                 label: 'Interview Type',\n                                                 fieldname: 'interview_type',\n                                                fieldtype: 'Select',\n                                                options :'Direct\\nGoogle Meet',\n                                                 \"reqd\": 1,\n                                               \n                                             },\n                                              {\n                                                label: 'Place',\n                                                fieldname: 'place',\n                                                fieldtype: 'Link',\n                                                'depends_on': \"eval:doc.interview_type===\\\"Direct\\\"\",\n                                                'mandatory_depends_on': \"eval:doc.interview_type===\\\"Direct\\\"\",\n                                                \"reqd\": 1,\n                                                options :'Address',\n                                                \n                                                get_query: function() {\n                                                            return {\n                                                              filters: {\n                                                                // name: 'Lamit-Office',\n                                                                'name': ['in', ['Lamit-Office', 'Hotel Periyaar-Office']]\n                                                              }\n                                                            };\n                                                          }\n                                                \n                                                \n                                                \n                                            },\n                                             \n                                             {\n                                                 label: 'Google Meet Link',\n                                                 fieldname: 'meet_link',\n                                                fieldtype: 'Data',\n                                                'depends_on': \"eval:doc.interview_type===\\\"Google Meet\\\"\",\n                                                'mandatory_depends_on':'eval:doc.interview_type===\\\"Google Meet\\\"'\n                                             },\n                                            \n                                             {\n                                                label: 'Interview Date',\n                                                 fieldname: 'interview_date',\n                                                fieldtype: 'Date',\n                                                'depends_on':'interview_type',\n                                                 \"reqd\": 1,\n                                             },\n                                              {\n                                                  fieldtype: 'Section Break',\n                                             },\n                                             \n                                              {\n                                                label: 'Hour',\n                                                fieldname: 'time1',\n                                                fieldtype: 'Select',\n                                                options :'01\\n02\\n03\\n04\\n05\\n06\\n07\\n08\\n09\\n10\\n11\\n12',\n                                                // 'depends_on':'interview_type',\n                                                \"reqd\": 1,\n                                             },\n                                            \n                                             \n                                             {\n                                                  fieldtype: 'Column Break',\n                                              },\n                                              \n                                              {\n                                                label: 'Min',\n                                                fieldname: 'time2',\n                                                fieldtype: 'Select',\n                                                 options :'00\\n05\\n10\\n15\\n20\\n25\\n30\\n35\\n40\\n45\\n50\\n55',\n                                                // 'depends_on':'interview_type',\n                                                \"reqd\": 1,\n                                             },\n                                             \n                                                {\n                                                  fieldtype: 'Column Break',\n                                                },\n                                                \n                                                {\n                                                 label: 'Meridian',\n                                                 fieldname: 'time3',\n                                                fieldtype: 'Select',\n                                                options :'AM\\nPM',\n                                                // 'depends_on':'interview_type',\n                                                 \"reqd\": 1,\n                                               \n                                             },\n                                             \n                                             {\n                                                  fieldtype: 'Section Break',\n                                             },\n                                             \n                                              {\n                        \t\t\t            fieldtype:'Table', fieldname: 'interview_panel',\n                        \t\t\t            description: __('Interview Panel'),\n                                    \t\t\tfields:\n                                    \t\t\t[\n                                    \t\t\t\t{fieldtype:'Link', fieldname:'employee',label: __('Employee'),options:\"Employee\",in_list_view:1,columns:1.2,},\n                                    \t\t\t],\n                                            },\n\n                                        ],\n                                        primary_action_label: 'Submit',\n                                        primary_action(values) \n                                        {\n                                            \n                                              frm.set_value('status',\"Rescheduled Interview\");\n                                            \n                                            \n                                            if(values.interview_type==\"Direct\")\n                                            {\n                                                \n                                                 \n                                                frm.set_value('interview_type1',values.interview_type);\n                                                frm.set_value('interview_date1',values.interview_date);\n                                                \n                                                frm.set_value('place1',values.place);\n                                                frm.set_value('time1',values.time1+\":\"+values.time2+\":\"+values.time3);\n                                                \n                                                console.log(values.time1)\n                                                \n                                               \n                                                \n                                            }\n                                            else if(values.interview_type==\"Google Meet\")\n                                            {\n                                                  frm.set_value('interview_type1',values.interview_type);\n                                                  frm.set_value('interview_date1',values.interview_date);\n                                                  frm.set_value('meeting_link1',values.meet_link);\n                                                \n                                                  frm.set_value('place1',values.place);\n                                                  frm.set_value('time1',values.time1+\":\"+values.time2+\":\"+values.time3);\n                                                //   console.log(\"NOOO\")\n                                                \n                                            }\n                                            \n                                             cur_frm.clear_table(\"interview_panel\");\n                                             cur_frm.refresh_fields();\n                                              \n                                              \n                                              $.each(values.interview_panel,function(i,v)\n                                              {\n                                                 var child = cur_frm.add_child(\"interview_panel\");\n                                                 frappe.model.set_value(child.doctype, child.name, \"employee\",v.employee); \n                                                 cur_frm.refresh_field(\"interview_panel\");\n                                                 console.log(v.employee)\n                                              })\n                                            \n                                           \n                                          \n                                            frm.save();\n                                            d.hide();\n                                            \n                                        }\n                                  \n                    });\n                    d.show();\n                    \n                   \n            });\n            frm.change_custom_button_type('Reschedule Interview', null, 'success');\n            \n            frm.add_custom_button(\"Interview Status\", () => \n            {\n                    let d = new frappe.ui.Dialog\n                    ({\n                                        title: 'Enter Interview Details ',\n                                        fields: [\n                                            \n                                           \n                                             {\n                                                 label: 'Status',\n                                                 fieldname: 'status1',\n                                                 fieldtype: 'Select',\n                                                 options:[\"No Response\",\"Selected\",\"Hold\",\"Failed\"],\n                                                 \"reqd\": 1,\n                                             },\n                                             \n                                             {\n                                                 label:'Rating',\n                                                 fieldname: 'rating',\n                                                 fieldtype: 'Rating',\n                                                 'mandatory_depends_on':'eval:doc.status1===\"Selected\"||doc.status1===\"Failed\"'\n                                             },\n                                             {\n                                                 label:'Remark',\n                                                 fieldname: 'remark',\n                                                 fieldtype: 'Small Text',\n                                                 'mandatory_depends_on':'eval:doc.status1===\"Selected\"||doc.status1===\"Failed\"'\n                                             },\n\n\n                                        ],\n                                        primary_action_label: 'Submit',\n                                        primary_action(values) \n                                        {\n                                            console.log(\"values.rating   \",values.rating)\n                                            \n                                            if(values.status1==\"No Response\")\n                                            {\n                                                frm.set_value('status',values.status1);\n                                                 \n                                              \n                                            \n                                            }\n                                            else if(values.status1==\"Hold\")\n                                            {\n                                               \n                                                frm.set_value('status',\"Hold\");\n                                                \n                                            }\n                                            else if(values.status1==\"Selected\")\n                                            {\n                                                \n                                                frm.set_value('status',\"Selected\");\n                                                frm.set_value('rating1',values.rating);\n                                              \n                                                frm.set_value('remark1',values.remark);\n                                                \n                                            }\n                                            else if(values.status1==\"Failed\")\n                                            {\n                                                frm.set_value('status',\"Rejected\");\n                                                frm.set_value('rating1',values.rating);\n                                              \n                                                frm.set_value('remark1',values.remark);\n                                            }\n\n                                            // if(frm.doc.interview_round==1)\n                                            // {\n                                            //   frm.set_value('rating1',values.rating);\n                                            //   frm.set_value('status1',values.status1);\n                                            //   frm.set_value('remark1',values.remark);\n                                            // }\n                                            // else if(frm.doc.interview_round==2)\n                                            // {\n                                            //       frm.set_value('rating2',values.rating);\n                                            //       frm.set_value('status2',values.status1);\n                                            //       frm.set_value('remark2',values.remark);\n                                            // }\n                                            // else if(frm.doc.interview_round==3)\n                                            // {\n                                            //       frm.set_value('rating3',values.rating);\n                                            //       frm.set_value('status3',values.status1);\n                                            //       frm.set_value('remark3',values.remark);\n                                            // }\n                                            // else if(frm.doc.interview_round==4)\n                                            // {\n                                            //       frm.set_value('rating4',values.rating);\n                                            //       frm.set_value('status4',values.status1);\n                                            //       frm.set_value('remark4',values.remark);\n                                            // }\n\n                                                cur_frm.save();\n                                                d.hide();\n                                        }\n                                  \n                    });\n                    d.show();\n                    \n                    \n                    \n            });\n            \n            frm.change_custom_button_type('Interview Status', null, 'success');\n            \n             }\n            \n            // frm.add_custom_button(\"Applicant Status\", () => \n            // {\n            //     var trigger_tbl=1\n            //         let d = new frappe.ui.Dialog\n            //         ({\n            //                     fields: [\n            //                                  {\n            //                                     label: 'Status',\n            //                                     fieldname: 'status1',\n            //                                     fieldtype: 'Select',\n            //                                     options:[\"No Response\",\"Hold\",\"Selected\",\"Rejected\",\"Selected & Awaiting Response\"],\n            //                                     \"reqd\": 1,\n            //                                     'onchange':() =>\n            //                                      { \n            //                                          if(trigger_tbl==1)\n            //                                          {\n            //                                              var status1 = d.get_field(\"status1\");\n            //                                              var remark = d.get_field(\"remark\");\n                                                         \n            //                                              if(status1.value==\"Rejected\")\n            //                                              {\n            //                                                 remark.value=frm.doc.reason_for_rejection\n            //                                              }\n            //                                              else\n            //                                              {\n            //                                                 remark.value=frm.doc.remark\n            //                                              }\n                                                         \n            //                                              remark.refresh()\n                                                         \n            //                                              trigger_tbl=2\n            //                                          }\n            //                                          else\n            //                                          {\n            //                                             trigger_tbl=1 \n            //                                          }\n                                                     \n            //                                      },\n            //                                  },\n                                             \n            //                                  {\n            //                                     label: 'Remark',\n            //                                     fieldname: 'remark',\n            //                                     fieldtype: 'Small Text',\n            //                                     \"reqd\": 1,\n            //                                     'mandatory_depends_on':'eval:doc.status1===\"Rejected\"'\n                                               \n            //                                  },\n            //                             ],\n            //                             primary_action_label: 'Submit',\n            //                             primary_action(values)\n            //                             {\n            //                                 frm.set_value('status',values.status1);\n            //                                 if(values.status1==\"Rejected\")\n            //                                 {\n            //                                     frm.set_value('reason_for_rejection',values.remark)\n            //                                 }\n            //                                 else\n            //                                 {\n            //                                     frm.set_value('remark',values.remark)\n            //                                 }\n            //                                 cur_frm.save();\n            //                                 d.hide();\n            //                             }\n                                        \n                                        \n                                        \n            //         });\n            //         d.show();\n            // })\n            \n            \n            \n            \n                   \n      \n            \n        \n         } \n         \n         \n         \n         if(frm.doc.status==\"Selected\")\n         {\n         \n\t\t    frm.add_custom_button(__('Employee'), function()\n            {\n                frappe.route_options = \n                {\n                    \"company\":\"Lamit\",\n                    \"salutation\":frm.doc.salutation,\n                    \"first_name\":frm.doc.first_name,\n                    \"last_name\":frm.doc.last_name,\n                    \"employee_name\":frm.doc.applicant_name,\n                    \"personal_email\":frm.doc.email_id,\n                    \"cell_number\":frm.doc.phone_number,\n                    \"designation\":frm.doc.designation1,\n                    \"job_applicant\":frm.doc.name,\n                    \"job_applicant1\":frm.doc.name,\n                };\n                \n                document = frappe.new_doc(\"Employee\");\n                frappe.set_route(\"Form\",\"Employee\", document.name);\n            });\n            frm.change_custom_button_type('Employee', null, 'success');\n         }\n         \n          \n\t},\n\t\n\tfirst_name:function(frm)\n\t{\n\t    frm.set_value(\"applicant_name\",frm.doc.first_name)\n\t    \n\t},\n\t\n\t\n\tonload:function(frm)\n\t{\n\t    \n\t    frm.set_df_property('applicant_name',  'hidden', 1);\n\t    \n\t    setTimeout(() =>\n\t      {\n            frm.remove_custom_button('Job Offer','Create');\n            frm.remove_custom_button('Interview','Create');\n       \n          }, 10);\n          \n          $('li').removeClass(\"disabled\");\n\t    cur_frm.dashboard.hide()\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Stock Entry",
  "enabled": 1,
  "modified": "2023-06-14 18:06:53.637906",
  "module": null,
  "name": "stock entry",
  "script": "frappe.ui.form.on('Stock Entry', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\tcompany:function(frm)\n\t{\n\t    frm.set_value(\"super_stockist\",frm.doc.company)\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Account",
  "enabled": 1,
  "modified": "2023-06-26 16:02:58.981044",
  "module": null,
  "name": "account",
  "script": "frappe.ui.form.on('Account', {\n\trefresh(frm) {\n\t\t// your code here\n\t},\n\tcompany1:function(frm)\n\t{\n\t    console.log(\"JKLJKL\")\n\t    frm.set_value(\"company\",frm.doc.company1)\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payroll Process",
  "enabled": 0,
  "modified": "2023-10-16 13:05:25.723692",
  "module": null,
  "name": "Payroll Process",
  "script": "var onload;\nvar trigger=1;\nvar start_date;\nvar end_date;\nvar create_slip=\" \";\nvar save=\" \";\nvar active_salary_structure=\" \";\nvar daysInMonth;\nvar month;\nvar year;\nvar emp_hold=\" \";\n\nfrappe.ui.form.on('Payroll Process', \n{\n\tonload(frm)\n\t{\n\t   // console.log(\"KLKLK\")\n\t    \n\t    \n\t    frm.set_query(\"payroll_payable\",function(){\n\t        return {\n            \"filters\": {\n                \"account_type\": \"Bank\",\n                \"company\": \"Lamit\",\n                \"is_group\":0\n            }\n        };\n\t    \n\t    })\n\t    \n\t    frm.set_query(\"company\",function(){\n\t        return {\n            \"filters\": {\n                \n                \"name\": \"Lamit\",\n                \n            }\n        };\n\t    \n\t    })\n\t    \n\t    \n\t    \n\t    \n\t    create_slip=\" \";\n\t    active_salary_structure=\" \"\n\t    save=\" \";\n\t    emp_hold=\" \";\n\t    \n\t    if(frm.is_new())\n\t    {\n    \t    var year1=[];\n            var month_list=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n            \n            const currentDate = new Date();\n            const currentYear = currentDate.getFullYear();\n            const currentMonth1 = currentDate.getMonth();\n            const currentMonth=month_list[currentMonth1]\n            \n            frm.set_value(\"year\",currentYear)\n\t    }\n\t    \n\t    \n\t    else\n\t    {\n\t        frm.set_df_property('company',  'read_only', 1);\n\t         frm.set_df_property('posting_date',  'read_only', 1);\n\t          frm.set_df_property('payroll_name',  'read_only', 1);\n\t           frm.set_df_property('payroll_payable',  'read_only', 1);\n\t       frm.set_df_property('year',  'read_only', 1);\n\t       frm.set_df_property('month',  'read_only', 1);\n\t       frm.set_df_property('designation',  'read_only', 1);\n\t       frm.set_df_property('employee',  'read_only', 1);\n\t        frm.set_df_property('create_salary_slip',  'read_only', 1);\n\t        frm.set_df_property('submit_salary_slip',  'read_only', 1);\n\t        frm.set_df_property('make_bank_entry',  'read_only', 1);\n\t        frm.set_df_property('create_journal',  'read_only', 1);\n\t        frm.set_df_property('full_and_final_settlement',  'read_only', 1);\n\t    }\n\t},\n\t\n\trefresh(frm)\n\t{\n\t   // frm.disable_save() \n\t    \n\t    if(!frm.is_new())\n\t    {\n\t         var year1=[]\n\t         var month_list=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\n\t          \n\t         year1[0]=flt(frm.doc.year)-2\n             year1[1]=flt(frm.doc.year)-1\n             year1[2]=flt(frm.doc.year)\n             \n            for(var i=1;i<10;i++)\n            {\n                year1.push(frm.doc.year+i)\n            }\n            \n            \n        var report= frm.add_custom_button('Quick Salary Statement Report',\n\t    function()\n\t    {\n\t        frappe.set_route('query-report', 'Salary Slip Report');\n\t        \n\t    })\n\n\t    }\n\t    \n\t    if(frm.is_new())\n\t    {\n\t        \n\n    \t    var create= frm.add_custom_button('Process Salary',\n    \t    function()\n    \t    {\n    \t       // console.log(\"SUCCESS\")\n    \t        create_slip=\"true \";\n    \t       \n                if(frm.doc.payroll_entry_child.length>0)\n                {\n        \t        if(frm.doc.payroll_name !=undefined)\n        \t        {\n        \t            if(frm.doc.payroll_name.length>0)\n        \t            {\n        \t                \n        \t                \n        \t                \n        \t               \n        \t                \n        \t                \n        \t                \n        \t                \n        \t               //\n        \t                save==\" \"\n        \t                emp_hold=\" \"\n        \t                active_salary_structure==\" \"\n        \t               //  create.hide()\n        \t               //  f_and_f.hide()\n        \t                \n        \t                if(frm.is_new())\n        \t                {\n        \t                     \n        \t                    frappe.call\n                                ({\n                                            \"method\":\"frappe.client.get_list\",\n                                            \"args\":\n                                                {\n                                                    \"doctype\":\"Payroll Process\",\n                                                    \"filters\":\n                                                    {\n                                                        name:frm.doc.payroll_name,\n                                                    },\n                                                },\n                                            callback:function(d)\n                                            {\n                                                if(d.message[0])\n                                                {\n                                                    // console.log(d.message)\n                                                        msgprint('Document name already exist!');\n                                                        // create.show()\n                                                }\n                                                else\n                                                {\n                                                     console.log(\"SUCCESS\")\n                                                     \n            \t                                     frm.save()\n                                                    $.each(frm.doc.payroll_entry_child,function(i,v)\n                                                    { \n                                            \t        frappe.call\n                                                        ({\n                                                                            \"method\":\"frappe.client.get_list\",\n                                                                            \"args\":\n                                                                                {\n                                                                                    \"doctype\":\"Salary Structure Assignment\",\n                                                                                    \"filters\":\n                                                                                    {\n                                                                                              employee:v.employee_id,\n                                                                                              docstatus:1,\n                                                                                              from_date: ['<=', start_date],\n                                                                                    },\n                                                                                },\n                                                                            callback:function(s)\n                                                                            {\n                                                                                if(s.message)\n                                                                                {\n                                                                                      console.log(s.message,\"have_salary_structure\")\n                                                                                     v.have_salary_structure=1\n                                                                                    \n                                                                                    frm.save()\n                                                                                }\n                                                                                else\n                                                                                {\n                                                                                    console.log(s.message,\"NO_have_salary_structure\")\n                                                                                    active_salary_structure=\"false\"\n                                                                                    v.have_salary_structure=0\n                                                                                    msgprint(\"Please set salary structure for all employees1\")\n                                                                                }\n                                                                            }\n                                                        })\n                                                        \n                                                        if(!v.payroll_payable)\n                                                        {\n                                                            save=\"false\";\n                                                            msgprint(\"Please Add Salary payable Accounts in \"+v.employee)\n                                                        }\n                                                        \n                                                        if(frm.doc.full_and_final_settlement != 1)\n                                                        {\n                                                            if(v.status==\"Suspended\"|| v.status==\"Separation\")\n                                                            {\n                                                                emp_hold=\"true\"\n                                                            }\n                                                        }\n                                                        \n                                                    });\n                                                    \n                                                    setTimeout(function()\n                                        \t        {\n                                        \t           // msgprint(\"ssssss\"+\"---\"+save+\"---\"+active_salary_structure+\"ssssssss\")\n                                                        if (active_salary_structure==\" \")\n                                            \t        {\n                                            \t            if(emp_hold==\"true\")\n                                            \t            {\n                                            \t                frappe.confirm('This payroll entry includes employees with status Separation. Do you want to continue the process?', \n                                            \t                function() \n                                            \t                {\n                                                                    frm.save() \n                                                                    // create.hide()\n                                                                },\n                                                                function()\n                                                                {\n                                                                    // create.show()\n                                                                });\n                                                            }\n                                            \t            else\n                                            \t            {\n                                            \t               frm.save() \n                                            \t            }\n                                            \t        }\n                                            \t        else if(active_salary_structure!=\" \")\n                                            \t        {\n                                            \t            msgprint(\"Please set salary structure for all employees1\")\n                                            \t           // create.show()\n                                            \t        }\n                                            \t        \n                                            \t        save=\" \"\n                                            \t        active_salary_structure=\" \"\n                                            \t        \n                                                    }, 1000); \n                                                    \n                                                    \n                                                    \n                                                    \n                                                    \n                                                    \n                                                    \n                                                   \n                                            \t      \n                                                }\n                                            }\n                                })\n        \t                }\n        \t               // else\n        \t               // {\n        \t               //                         $.each(frm.doc.payroll_entry_child,function(i,v)\n                        //                             { \n                        //                     \t        frappe.call\n                        //                                 ({\n                        //                                                     \"method\":\"frappe.client.get_list\",\n                        //                                                     \"args\":\n                        //                                                         {\n                        //                                                             \"doctype\":\"Salary Structure Assignment\",\n                        //                                                             \"filters\":\n                        //                                                             {\n                        //                                                                       employee:v.employee_id,\n                        //                                                                       docstatus:1,\n                        //                                                                       from_date: ['<=', start_date],\n                        //                                                             },\n                        //                                                         },\n                        //                                                     callback:function(s)\n                        //                                                     {\n                        //                                                         if(s.message[0])\n                        //                                                         {\n                        //                                                              v.have_salary_structure=1\n                        //                                                         }\n                        //                                                         else\n                        //                                                         {\n                        //                                                             active_salary_structure=\"false\"\n                        //                                                             v.have_salary_structure=0\n                        //                                                         }\n                        //                                                     }\n                        //                                 })\n                                                        \n                        //                                 // if(!v.payroll_payable)\n                        //                                 // {\n                        //                                 //     save=\"false\";\n                        //                                 // }\n                                                        \n                        //                                 if(frm.doc.full_and_final_settlement != 1)\n                        //                                 {\n                        //                                     if(v.status==\"Suspended\"|| v.status==\"Separation\")\n                        //                                     {\n                        //                                         emp_hold=\"true\"\n                        //                                     }\n                        //                                 }\n                                                        \n                        //                             });\n                                                    \n                        //                             setTimeout(function()\n                        //                 \t        {\n                        //                 \t           // msgprint(\"ssssss\"+\"---\"+save+\"---\"+active_salary_structure+\"ssssssss\")\n                        //                                 if (active_salary_structure==\" \")\n                        //                     \t        {\n                        //                     \t            if(emp_hold==\"true\")\n                        //                     \t            {\n                        //                     \t                frappe.confirm('This payroll entry includes employees with status Separation. Do you want to continue the process?', \n                        //                     \t                function() \n                        //                     \t                {\n                        //                                             frm.save() \n                        //                                             //  create.hide()\n                        //                                         },\n                        //                                         function()\n                        //                                         {\n                        //                                             //  create.show()\n                        //                                         });\n                        //                                     }\n                        //                     \t            else\n                        //                     \t            {\n                        //                     \t               frm.save() \n                        //                     \t            }\n                        //                     \t        }\n                        //                     \t        else if(active_salary_structure!=\" \")\n                        //                     \t        {\n                        //                     \t            msgprint(\"Please set salary structure for all employees\")\n                        //                     \t           //  create.show()\n                        //                     \t        }\n                                            \t        \n                        //                     \t        save=\" \"\n                        //                     \t        active_salary_structure=\" \"\n                                            \t        \n                        //                             }, 1000); \n        \t               // }\n        \t                \n        \t                \n        \t            }\n        \t           // else\n        \t           // {\n        \t           //     create.show()\n        \t           //     f_and_f.show()\n        \t           // }\n        \t        }\n        \t       // else\n        \t       // {\n        \t       //     create.show()\n        \t       //     f_and_f.show()\n        \t       // }\n        \t        \n        \t       // create.hide()\n                }\n                else\n                {\n                    msgprint(\"Please Add employees\")\n                    // create.show()\n                }\n    \t        \n    \t        \n            });\n\t    \n        \n        var f_and_f= frm.add_custom_button('Full And Final Settlement',\n\t    function()\n\t    {\n\t        frm.set_value(\"full_and_final_settlement\",1)\n            frm.set_value(\"payroll_name\",undefined)\n            frm.set_value(\"year\",undefined)\n            frm.set_value(\"month\",undefined)\n            // frm.set_value(\"branch\",undefined)\n            frm.set_value(\"employee\",undefined)\n            frm.clear_table('payroll_entry_child');\n            frm.refresh_field(\"payroll_entry_child\")\n            f_and_f.hide()\n        });\n        \n       \n\t    }\n        \n        \n         frm.change_custom_button_type('Quick Salary Statement Report', null, 'primary');\n         frm.change_custom_button_type('Process Salary', null, 'primary');\n         frm.change_custom_button_type('Full And Final Settlement', null, 'primary');\n        \n        \n        \n       \n        \n        \n            // if(frm.doc.create_salary_slip==1)\n            // {\n            //     create.hide()\n            //     f_and_f.hide()\n            // }\n            // else\n            // {\n            //     console.log(\"z3\")\n            //      create.show()\n            //     if(frm.doc.full_and_final_settlement==1)\n            //     {\n            //         f_and_f.show()\n            //     }\n            // }\n     \n        \n            \n\t},\n\t\n\tyear(frm)\n\t{\n\t    if(frm.doc.full_and_final_settlement !=1)\n\t    {\n    \t    if(frm.doc.year !=undefined && frm.doc.month !=undefined)\n    \t    {\n    \t        if(frm.doc.month.length>0)\n        \t    {\n        \t        frm.trigger(\"filter_employees\") \n        \t        frm.set_value(\"payroll_name\",frm.doc.month+\" - \"+frm.doc.year)\n        \t    }\n        \t    else\n        \t    {\n                    frm.clear_table('payroll_entry_child');\n                    frm.refresh_field(\"payroll_entry_child\")\n                     frm.set_value(\"payroll_name\",\" \")\n        \t    }\n    \t    }\n    \t    else\n    \t    {\n                frm.clear_table('payroll_entry_child');\n                frm.refresh_field(\"payroll_entry_child\")\n                 frm.set_value(\"payroll_name\",\" \")\n    \t    }\n\t    }\n\t},\n\t\n\tmonth(frm)\n\t{\n\t    console.log(frm.doc.designation,\"designationMONTH\")\n\t    console.log(frm.doc.employee,\"employeeMONTH\")\n\t    \n\t   // console.log(frm.doc.full_and_final_settlement,\"11111111\")\n\t   if(frm.doc.full_and_final_settlement !=1)\n\t    {\n    \t    if(frm.doc.year !=undefined && frm.doc.month !=undefined)\n    \t    {\n    \t        if(frm.doc.month.length>0)\n        \t    {\n        \t        frm.trigger(\"filter_employees\") \n        \t        frm.set_value(\"payroll_name\",frm.doc.month+\" - \"+frm.doc.year)\n        \t    }\n        \t    else\n        \t    {\n                    frm.clear_table('payroll_entry_child');\n                    frm.refresh_field(\"payroll_entry_child\")\n                     frm.set_value(\"payroll_name\",\" \")\n        \t    }\n    \t    }\n    \t    else\n    \t    {\n                frm.clear_table('payroll_entry_child');\n                frm.refresh_field(\"payroll_entry_child\")\n                frm.set_value(\"payroll_name\",\" \")\n    \t    }\n\t    }\n\t},\n\t\n\tdesignation(frm)\n\t{\n\t   // if(frm.doc.month.length==0 && frm.doc.employee==undefined)\n\t   // {\n\t   //     msgprint(\"Select Month\")\n\t   // }\n\t   //// console.log(frm.doc.month,\"iii\")\n\t   //// console.log(frm.doc.employee,\"ooo\")\n\t    \n\t   // else\n\t   // {\n\t         frm.trigger(\"filter_employees\") \n\t   // }\n\t   \n\t   console.log(frm.doc.employee,\"employeeDESIGNATION\")\n\t   console.log(frm.doc.designation,\"designationDESIGNATION\")\n\t   \n\t},\n\t\n\temployee(frm)\n\t{\n\t    \n\t    if(frm.doc.employee)\n\t    {\n\t        frm.clear_table('payroll_entry_child');\n            frm.refresh_field(\"payroll_entry_child\")\n            \n\t                    frappe.call\n                                ({\n                                    \"method\":\"frappe.client.get_list\",\n                                    \"args\":\n                                        {\n                                            \"doctype\":\"Employee\",\n                                            \"filters\":\n                                            {\n                                              name:frm.doc.employee,  \n                                              \n                                            },\n                                          \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                        //   limit_page_length:1000,\n                                        },\n                                    callback:function(d)\n                                    {\n                                        if(d.message[0])\n                                        {\n                                            console.log(d.message[0].name,\"namename\")\n                                            \n                                             frappe.call\n                                                ({\n                                                    \"method\":\"frappe.client.get_list\",\n                                                    \"args\":\n                                                        {\n                                                            \"doctype\":\"Salary Slip\",\n                                                            \"filters\":\n                                                            {\n                                                              \"employee\":d.message[0].name,\n                                                              \"year2\":year,\n                                                              \"month1\":month,\n                                                              \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                            },\n                                                        },\n                                                        callback:function(s)\n                                                        {\n                                                            if(!s.message[0])\n                                                            {\n                                                                if(d.message[0].salary_payable)\n                                                                {\n                                                                \n                                                                var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                child_row.employee = d.message[0].employee_name;\n                                                                child_row.employee_id= d.message[0].name;\n                                                                 child_row.payroll_payable= d.message[0].salary_payable;\n                                                                child_row.status= d.message[0].status;\n                                                                 child_row.designation= d.message[0].designation;\n                                                                 frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                            }\n                                                        }\n                                                })\n                                        \n                                            \n        \n        \t                             }\n        \t               \n        \t                         }\n        \t                    });\n\t        \n\t    }\n\t    \n\t    else\n\t    {\n\t         frm.trigger(\"filter_employees\")  \n\t    }\n\t     \n                                    \n    \t                    \n                \t      \n              \n\t},\n\t\n\temployee_1(frm)\n\t{\n\t    frm.trigger(\"filter_employees\")  \n\t},\n\t\n\tsettlement_start_date(frm)\n\t{\n\t        if(frm.doc.settlement_start_date !=undefined)\n            {\n                if(frm.doc.settlement_start_date.length>0)\n                {\n                    start_date=frm.doc.settlement_start_date\n                }\n                else\n                {\n                    start_date=\" \"\n                }\n            }\n            else\n            {\n                start_date=\" \"\n            }\n\t},\n\t\n\tsettlement_end_date(frm)\n\t{\n\t        if(frm.doc.settlement_end_date !=undefined)\n            {\n                if(frm.doc.settlement_end_date.length>0)\n                {\n                    end_date=frm.doc.settlement_end_date\n                }\n                else\n                {\n                    end_date=\" \"\n                }\n            }\n            else\n            {\n                end_date=\" \"\n            }\n\t},\n\t\n\tbefore_save(frm)\n\t{\n\t    if(frm.doc.full_and_final_settlement==1 && frm.doc.settlement_start_date !=undefined)\n\t    {\n\t        if(frm.doc.settlement_start_date.length>0)\n\t        {\n        \t        var month_list=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n        \t        var startdate1=frm.doc.settlement_start_date\n        \t        var month1=startdate1.split(\"-\")[1]\n            \t    year=startdate1.split(\"-\")[0]\n            \t    month=month1.replace(/^0+/, \"\");\n            \t    const currentMonth=month_list[month-1]\n\n                    frm.set_value(\"year\",year)\n                    frm.set_value(\"month\",currentMonth)\n\t        }\n\t    }\n\t},\n\n// \tafter_save(frm)\n// \t{\n// \t   // frm.trigger(\"add_additional_salary\")\n// \t   //frappe.set_route('query-report', 'Salary Slip Report');\n// \t   //frm.reload_doc();\n\t   \n\t  \n\t   \n\n\n//   if (frm.doc.month && frm.doc.year) {\n      \n      \n//     const month_map = {\n//         'January': 1, 'February': 2, 'March': 3, 'April': 4, 'May': 5, 'June': 6,\n//         'July': 7, 'August': 8, 'September': 9, 'October': 10, 'November': 11, 'December': 12\n//     };\n//     const month_number = month_map[frm.doc.month];\n\n//     // Calculate the first day of the selected month\n//     const from_date = `${frm.doc.year}-${month_number.toString().padStart(2, '0')}-01`;\n\n//     // Calculate the last day of the selected month\n//     const last_day_of_month = new Date(frm.doc.year, month_number, 0).getDate();\n//     const to_date = `${frm.doc.year}-${month_number.toString().padStart(2, '0')}-${last_day_of_month.toString().padStart(2, '0')}`;\n\n  \n    \n    \n    \n//      if(frm.doc.payroll_entry_child.length>0)\n// \t   {\n// \t       if(frm.doc.full_and_final_settlement==1)\n//         \t                {\n        \t                    \n//         \t                       $.each(frm.doc.payroll_entry_child,function(i,v)\n//                                 \t       {\n//                                 \t           //console.log(v.employee_id)\n//                                 \t           //console.log(v.employee)\n//                                 \t           frappe.db.insert\n//                                 \t           ({\n//                                                   \"doctype\": \"Salary Slip\",\n//                                                   \"employee\": v.employee_id,\n//                                                   \"employee_name\": v.employee,\n//                                                   \"posting_date\":frm.doc.posting_date,\n//                                                   \"year2\":frm.doc.year,\n//                                                   \"month1\":frm.doc.month,\n//                                                   \"company\":\"Lamit\",\n//                                                   \"currency\":\"INR\",\n//                                                   \"payroll_frequency\":\"Daily\",\n//                                                   \"process_payroll\":frm.doc.payroll_name,\n//                                                   \"bank\":frm.doc.payroll_payable,\n//                                                   \"f_and_f1\":1,\n                                                \n//                                                   \"start_date\":frm.doc.settlement_start_date,\n//                                                   \"end_date\":frm.doc.settlement_end_date\n                                                   \n//                                                 });\n//                                 \t       })\n                                \t       \n//                                 \t       msgprint(\"Salary slip created Successfully\")\n                                \n                                \n//                                 // console.log(\"KL\")\n        \t                       \n        \t                    \n        \t                    \n        \t                    \n//         \t                }\n        \t                \n        \t                \n//         \t else\n//         \t {\n\t       \n// \t       $.each(frm.doc.payroll_entry_child,function(i,v)\n// \t       {\n// \t           console.log(v.employee_id)\n// \t           console.log(v.employee)\n// \t           frappe.db.insert\n// \t           ({\n//                   \"doctype\": \"Salary Slip\",\n//                   \"employee\": v.employee_id,\n//                   \"employee_name\": v.employee,\n//                   \"posting_date\":frm.doc.posting_date,\n//                   \"year2\":frm.doc.year,\n//                   \"month1\":frm.doc.month,\n//                   \"company\":\"Lamit\",\n//                   \"currency\":\"INR\",\n//                   \"payroll_frequency\":\"Monthly\",\n//                   \"process_payroll\":frm.doc.payroll_name,\n//                   \"bank\":frm.doc.payroll_payable,\n//                 //   \"salary_structure\":\"M987\",\n//                   \"start_date\":from_date,\n//                   \"end_date\":to_date\n                   \n//                 });\n// \t       })\n\t       \n// \t       msgprint(\"Salary slip created Successfully\")\n\t       \n//         \t }\n\t     \n// \t   }\n    \n    \n    \n// }\n\n\n\n\n\n\n\n\t   \n\t   \n\n\n\t   \n// \t},\n\t\n\tfilter_employees:function(frm)\n\t{\n\t    \n\t   \n\t    var month_list=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\n\t    var emp=\" \"\n\t    var branch;\n\t    var desi=\" \"\n\t  \n\t   \n       \n     \n        \n        frm.clear_table('payroll_entry_child');\n        frm.refresh_field(\"payroll_entry_child\")\n        \n        if(frm.doc.full_and_final_settlement==1)\n        {\n        //   console.log(\"11111\")\n            // end_date=frm.doc.settlement_end_date\n            \n            if(frm.doc.employee_1 !=undefined)\n            {\n                if(frm.doc.employee_1.length>0)\n                {\n                    emp=frm.doc.employee_1\n                }\n                else\n                {\n                    emp=\" \"\n                }\n            }\n            else\n            {\n                emp=\" \"\n            }\n            \n            if(emp !=\" \")\n            {\n                \n                console.log()\n                \n                    frappe.call\n                        ({\n                            \"method\":\"frappe.client.get_list\",\n                            \"args\":\n                                {  //\n                                    \"doctype\":\"Employee\",\n                                    \"filters\":\n                                    {\n                                    //   date_of_joining: ['<=',start_date],\n                                      name:emp,\n                                    //   relieving_date:['>=',end_date],  \n                                        \n                                    },\n                                \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                },\n                            callback:function(d)\n                            {\n                              \n                                if(d.message[0])\n                                {\n                                    \n                                    // console.log(\"22222\")\n                                       \n                                                        var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                        child_row.employee = d.message[0].employee_name;\n                                                        child_row.employee_id= d.message[0].name;\n                                                        child_row.payroll_payable= d.message[0].salary_payable;\n                                                        child_row.status= d.message[0].status;\n                                                        child_row.designation=d.message[0].designation;\n                                                        frm.refresh_field('payroll_entry_child');\n                                       \n                                    \n                                  \n                                }\n\t                         }\n\t                    }); \n            }\n\t                    \n        }\n        else\n        {\n            // console.log(\"33333\")\n            // console.log(frm.doc.designation,\"designationdesignation\")\n         \n            month=frm.doc.month\n    \t    year=frm.doc.year\n    \t    var idx=month_list.indexOf(month)+1;\n    \t    daysInMonth = new Date(year, idx, 0).getDate();\n            const month1 = idx.toString().padStart(2, '0');\n            start_date=year+\"-\"+month1+\"-\"+\"01\"\n            end_date=year+\"-\"+month1+\"-\"+daysInMonth\n            \n               \n                \n                if(frm.doc.employee !=undefined)\n                {\n                    if(frm.doc.employee.length>0)\n                    {\n                        emp=frm.doc.employee\n                    }\n                    else\n                    {\n                        emp=\" \"\n                    }\n                }\n                else\n                {\n                    emp=\" \"\n                }\n                \n                \n                \n                if(frm.doc.designation !=undefined)\n                {\n                    if(frm.doc.designation.length>0)\n                    {\n                        desi=frm.doc.designation\n                    }\n                    else\n                    {\n                        desi=\" \"\n                    }\n                }\n                else\n                {\n                    emp=\" \"\n                }\n                \n                \n                \n                \n                \n            if(desi==\" \"&& emp==\" \")\n            {\n                console.log(start_date,\"start_datestart_date\")\n                console.log(end_date,\"end_dateend_date\")\n                \n                console.log(\"11111111111\")\n                frappe.call\n                ({\n                                    \"method\":\"frappe.client.get_list\",\n                                    \"args\":\n                                        {\n                                            \"doctype\":\"Employee\",\n                                            \"filters\":\n                                            {\n                                              date_of_joining: ['between', [start_date,end_date]],  \n                                              \"status1\": [\"in\", [\"Active\", \"Seperation\"]] ,\n                                              \"company\":\"Lamit\"\n                                            },\n                                          \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status1\",\"designation\"],\n                                          limit_page_length:100000,\n                                        },\n                                    callback:function(d)\n                                    {\n                                        if(d.message[0])\n                                        {\n                                            // console.log(d.message)\n                                            // console.log(d.message[i].name)\n                                            \n                                            $.each(d.message,function(i,v)\n                                            {\n                                                 frappe.call\n                                                ({\n                                                    \"method\":\"frappe.client.get_list\",\n                                                    \"args\":\n                                                        {\n                                                            \"doctype\":\"Salary Slip\",\n                                                            \"filters\":\n                                                            {\n                                                              \"employee\":d.message[i].name,\n                                                              \"year2\":year,\n                                                              \"month1\":month,\n                                                              \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                            },\n                                                        },\n                                                        callback:function(s)\n                                                        {\n                                                            if(!s.message[0])\n                                                            {\n                                                                if(v.salary_payable)\n                                                                {\n                                                                \n                                                                var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                child_row.employee = d.message[i].employee_name;\n                                                                child_row.employee_id= d.message[i].name;\n                                                                 child_row.payroll_payable= d.message[i].salary_payable;\n                                                                child_row.status= d.message[i].status1;\n                                                                 child_row.designation= d.message[i].designation;\n                                                                frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                            }\n                                                        }\n                                                })\n                                            });\n                                            \n                                            // frm.refresh_field('payroll_entry_child');\n        \n        \t                             }\n        \t               \n        \t                         }\n        \t                    });    \n    \t                    \n    \t        frappe.call\n                ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          relieving_date: ['between', [start_date,end_date]],\n                                          status1: [\"in\", [\"Seperation\",\"Active\"]] ,\n                                          \"company\":\"Lamit\"\n                                        },\n                                         \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status1\",\"designation\"],\n                                         limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        console.log(d.message,\"ll\")\n                                        $.each(d.message,function(i,v)\n                                        {\n                                            frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Slip\",\n                                                        \"filters\":\n                                                        {\n                                                          \"employee\":d.message[i].name,\n                                                          \"year2\":year,\n                                                          \"month1\":month,\n                                                          \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                        },\n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(!s.message[0])\n                                                        {\n                                                            if(v.salary_payable)\n                                                                {\n                                                            \n                                                            var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                            child_row.employee = d.message[i].employee_name;\n                                                            child_row.employee_id= d.message[i].name;\n                                                            child_row.payroll_payable= d.message[i].salary_payable;\n                                                            child_row.status= d.message[i].status1;\n                                                             child_row.designation= d.message[i].designation;\n                                                            frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n    \n    \t                             }\n    \t               \n    \t                         }\n    \t                    }); \n         \n    \t                   frappe.call({\n                                    \"method\": \"frappe.client.get_list\",\n                                    \"args\": {\n                                        \"doctype\": \"Employee\",\n                                        \"filters\": [\n                                            [\"date_of_joining\", \"<\", start_date],\n                                            [\"relieving_date\", \">\", end_date],\n                                            [\"status1\", \"in\", [\"Seperation\", \"Active\"]\n                                            \n                                            ],\n                                            [\"company\",\"=\",\"Lamit\"]\n                                            // \"company\":\"Lamit\"\n                                        ],\n                                        \"fields\": [\"name\", \"employee_name\", \"salary_payable\", \"status1\", \"designation\"],\n                                        \"limit_page_length\": 1000\n                                    },\n                                    \"callback\": function(d) {\n                                        if (d.message && d.message.length > 0) {\n                                            console.log(d.message);\n                                        $.each(d.message,function(i,v)\n                                        {\n                                            frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Slip\",\n                                                        \"filters\":\n                                                        {\n                                                          \"employee\":d.message[i].name,\n                                                          \"year\":year,\n                                                          \"month\":month,\n                                                          \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                        },\n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        console.log(d.message)\n                                                        if(!s.message[0])\n                                                        {\n                                                            if(v.salary_payable)\n                                                                {\n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = d.message[i].employee_name;\n                                                                    child_row.employee_id= d.message[i].name;\n                                                                     child_row.payroll_payable= d.message[i].salary_payable;\n                                                                    child_row.status= d.message[i].status1;\n                                                                     child_row.designation= d.message[i].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                            \n                                                                }\n                                                        }\n                                                    }\n                                            })\n                                        });\n                                        \n                                        \n                                    }\n    \t                         }\n    \t                    }); \n    \t                    \n    \t                    \n    \t                     frappe.call({\n                                    \"method\": \"frappe.client.get_list\",\n                                    \"args\": {\n                                        \"doctype\": \"Employee\",\n                                        \"filters\": [\n                                            [\"date_of_joining\", \"<\", start_date],\n                                            [\"relieving_date\", \"in\", undefined],\n                                            [\"status1\", \"in\", [\"Seperation\", \"Active\"]\n                                            \n                                            ],\n                                             [\"company\",\"=\",\"Lamit\"]\n                                            \n                                        ],\n                                        \"fields\": [\"name\", \"employee_name\", \"salary_payable\", \"status1\", \"designation\"],\n                                        \"limit_page_length\": 1000\n                                    },\n                                    \"callback\": function(d) {\n                                        if (d.message && d.message.length > 0) {\n                                            console.log(d.message);\n                                        $.each(d.message,function(i,v)\n                                        {\n                                            frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Slip\",\n                                                        \"filters\":\n                                                        {\n                                                          \"employee\":d.message[i].name,\n                                                          \"year\":year,\n                                                          \"month\":month,\n                                                          \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                        },\n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(!s.message[0])\n                                                        {\n                                                            if(v.salary_payable)\n                                                                {\n                                                            var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                            child_row.employee = d.message[i].employee_name;\n                                                            child_row.employee_id= d.message[i].name;\n                                                            child_row.payroll_payable= d.message[i].salary_payable;\n                                                            child_row.status= d.message[i].status1;\n                                                             child_row.designation= d.message[i].designation;\n                                                            frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                    }\n                                            })\n                                        });\n                                    }\n    \t                         }\n    \t                    }); \n    \t       \n    \t       \n    \t       \n    \t       \n    \t      \n\n    \t       \n    \t       \n    \t                    \n            }\n            \n            \n            \n            \n            \n            else if(desi==\" \" && emp!=\" \")\n            {\n                console.log(\"222222222222\")\n                \n                // console.log(\"frm.doc.employee\",frm.doc.employee)\n                                frappe.call\n                                ({\n                                    \"method\":\"frappe.client.get_list\",\n                                    \"args\":\n                                        {\n                                            \"doctype\":\"Employee\",\n                                            \"filters\":\n                                            {\n                                              date_of_joining: ['between', [start_date,end_date]],  \n                                              name:emp,\n                                              \"company\":\"Lamit\"\n                                            },\n                                          \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                          limit_page_length:1000,\n                                        },\n                                    callback:function(d)\n                                    {\n                                        if(d.message[0])\n                                        {\n                                            console.log(d.message,\"dateofjoining\")\n                                            // $.each(d.message,function(i,v)\n                                            // {\n                                            //      frappe.call\n                                            //     ({\n                                            //         \"method\":\"frappe.client.get_list\",\n                                            //         \"args\":\n                                            //             {\n                                            //                 \"doctype\":\"Salary Slip\",\n                                            //                 \"filters\":\n                                            //                 {\n                                            //                   \"employee\":d.message[i].name,\n                                            //                   \"year\":year,\n                                            //                   \"month\":month,\n                                            //                   \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                            //                 },\n                                            //             },\n                                            //             callback:function(s)\n                                            //             {\n                                            //                 if(!s.message[0])\n                                            //                 {\n                                            //                     if(v.salary_payable)\n                                            //                     {\n                                            //                     var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                            //                     child_row.employee = d.message[i].employee_name;\n                                            //                     child_row.employee_id= d.message[i].name;\n                                            //                     child_row.payroll_payable= d.message[i].salary_payable;\n                                            //                      child_row.status= d.message[i].status;\n                                            //                      child_row.designation=d.message[i].designation;\n                                            //                     frm.refresh_field('payroll_entry_child');\n                                            //                     }\n                                            //                 }\n                                                            \n                                                            \n                                            //             }\n                                            //     })\n                                            // });\n                                            \n                                            // frm.refresh_field('payroll_entry_child');\n        \n        \t                             }\n        \t               \n        \t                         }\n        \t                    });    \n    \t                    \n                \t        frappe.call\n                            ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          relieving_date: ['between', [start_date,end_date]],  \n                                          name:emp,\n                                        },\n                                      \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        console.log(\"relieving_daterelieving_date\")\n                                        $.each(d.message,function(i,v)\n                                        {\n                                             frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Slip\",\n                                                        \"filters\":\n                                                        {\n                                                          \"employee\":d.message[i].name,\n                                                          \"year\":year,\n                                                          \"month\":month,\n                                                          \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                        },\n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(!s.message[0])\n                                                        {\n                                                            if(v.salary_payable)\n                                                                {\n                                                            var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                            child_row.employee = d.message[i].employee_name;\n                                                            child_row.employee_id= d.message[i].name;\n                                                            child_row.payroll_payable= d.message[i].salary_payable;\n                                                            child_row.status= d.message[i].status;\n                                                            child_row.designation=d.message[i].designation;\n                                                            frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n    \n    \t                             }\n    \t               \n    \t                         }\n    \t                    }); \n         \n    \t                    frappe.call\n                            ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          date_of_joining: ['<',start_date],\n                                          name:emp,\n                                          relieving_date:['>',end_date],  \n                                            \n                                        },\n                                    \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        console.log(\"date_of_joining=relieving_date\")\n                                        $.each(d.message,function(i,v)\n                                        {\n                                             frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Slip\",\n                                                        \"filters\":\n                                                        {\n                                                          \"employee\":d.message[i].name,\n                                                          \"year\":year,\n                                                          \"month\":month,\n                                                          \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                        },\n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(!s.message[0])\n                                                        {\n                                                            if(v.salary_payable)\n                                                                {\n                                                            var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                            child_row.employee = d.message[i].employee_name;\n                                                            child_row.employee_id= d.message[i].name;\n                                                            child_row.payroll_payable= d.message[i].salary_payable;\n                                                            child_row.status= d.message[i].status;\n                                                            child_row.designation=d.message[i].designation;\n                                                            frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n                                    }\n    \t                         }\n    \t                    }); \n    \t                    \n    \t                     frappe.call\n                            ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          date_of_joining: ['<',start_date],\n                                          name:emp,\n                                          relieving_date: ['in',undefined]\n                                        //   relieving_date:undefined,  \n                                            \n                                        },\n                                     \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        // console.log(\"d.message[0].name\",d.message)\n                                        console.log(d.message[0].name,\"date_of_joining and relieving_date undefined\")\n                                        \n                                        $.each(d.message,function(i,v)\n                                        {\n                                             frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Slip\",\n                                                        \"filters\":\n                                                        {\n                                                          \"employee\":d.message[i].name,\n                                                          \"year\":year,\n                                                          \"month\":month,\n                                                          \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                          \n                                                        },\n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(!s.message[0])\n                                                        {\n                                                            if(v.salary_payable)\n                                                                {\n                                                            \n                                                                    console.log(\"SSSSSSSSSSS\")\n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = d.message[i].employee_name;\n                                                                    child_row.employee_id= d.message[i].name;\n                                                                    child_row.payroll_payable= d.message[i].salary_payable;\n                                                                    child_row.status= d.message[i].status;\n                                                                    child_row.designation=d.message[i].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                            \n                                                        }\n                                                        // else\n                                                        \n                                                        // {\n                                                        //     msgprint(\"Salary Slip is Created For this Employee \")\n                                                        // }\n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n                                    }\n    \t                         }\n    \t                    }); \n            }\n            else if(desi!=\" \" && emp==\" \")\n            {\n                console.log(\"33333333333333\")\n                frappe.call\n                ({\n                                    \"method\":\"frappe.client.get_list\",\n                                    \"args\":\n                                        {\n                                            \"doctype\":\"Employee\",\n                                            \"filters\":\n                                            {\n                                              date_of_joining: ['between', [start_date,end_date]],  \n                                              designation:frm.doc.designation,\n                                              \"company\":\"Lamit\"\n                                            },\n                                          \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                          limit_page_length:1000,\n                                        },\n                                    callback:function(d)\n                                    {\n                                        if(d.message[0])\n                                        {\n                                            $.each(d.message,function(i,v)\n                                            {\n                                                 frappe.call\n                                                ({\n                                                    \"method\":\"frappe.client.get_list\",\n                                                    \"args\":\n                                                        {\n                                                            \"doctype\":\"Salary Slip\",\n                                                            \"filters\":\n                                                            {\n                                                              \"employee\":d.message[i].name,\n                                                              \"year\":year,\n                                                              \"month\":month,\n                                                              \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                            },\n                                                        },\n                                                        callback:function(s)\n                                                        {\n                                                            if(!s.message[0])\n                                                            {\n                                                                if(v.salary_payable)\n                                                                {\n                                                                var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                child_row.employee = d.message[i].employee_name;\n                                                                child_row.employee_id= d.message[i].name;\n                                                                child_row.payroll_payable= d.message[i].salary_payable;\n                                                                child_row.status= d.message[i].status;\n                                                                child_row.designation= d.message[i].designation;\n                                                                frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                            }\n                                                        }\n                                                })\n                                            });\n                                            \n                                            frm.refresh_field('payroll_entry_child');\n        \n        \t                             }\n        \t               \n        \t                         }\n        \t                    });    \n    \t                    \n    \t        frappe.call\n                ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          relieving_date: ['between', [start_date,end_date]],  \n                                          designation:frm.doc.designation,\n                                        },\n                                      \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        $.each(d.message,function(i,v)\n                                        {\n                                             frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Slip\",\n                                                        \"filters\":\n                                                        {\n                                                          \"employee\":d.message[i].name,\n                                                          \"year\":year,\n                                                          \"month\":month,\n                                                          \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                        },\n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(!s.message[0])\n                                                        {\n                                                            if(v.salary_payable)\n                                                                {\n                                                            var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                            child_row.employee = d.message[i].employee_name;\n                                                            child_row.employee_id= d.message[i].name;\n                                                            child_row.payroll_payable= d.message[i].salary_payable;\n                                                             child_row.status= d.message[i].status;\n                                                             child_row.designation= d.message[i].designation;\n                                                            frm.refresh_field('payroll_entry_child');\n                                                            \n                                                                }\n                                                        }\n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n    \n    \t                             }\n    \t               \n    \t                         }\n    \t                    }); \n         \n    \t        frappe.call\n                ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          date_of_joining: ['<',start_date],\n                                          designation:frm.doc.designation,\n                                          relieving_date:['>',end_date],  \n                                            \n                                        },\n                                    \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        $.each(d.message,function(i,v)\n                                        {\n                                             frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Slip\",\n                                                        \"filters\":\n                                                        {\n                                                          \"employee\":d.message[i].name,\n                                                          \"year\":year,\n                                                          \"month\":month,\n                                                          \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                        },\n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(!s.message[0])\n                                                        {\n                                                            if(v.salary_payable)\n                                                                {\n                                                            var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                            child_row.employee = d.message[i].employee_name;\n                                                            child_row.employee_id= d.message[i].name;\n                                                            child_row.payroll_payable= d.message[i].salary_payable;\n                                                            child_row.status= d.message[i].status;\n                                                            child_row.designation= d.message[i].designation;\n                                                            frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                    }\n                                            })\n                                        });\n                                        \n                                        \n                                        frm.refresh_field('payroll_entry_child');\n                                    }\n    \t                         }\n    \t                    }); \n    \t                    \n    \t        frappe.call\n                ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          date_of_joining: ['<',start_date],\n                                          designation:frm.doc.designation,\n                                         relieving_date: ['in',undefined]\n                                            \n                                        },\n                                    \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        $.each(d.message,function(i,v)\n                                        {\n                                             frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Slip\",\n                                                        \"filters\":\n                                                        {\n                                                          \"employee\":d.message[i].name,\n                                                          \"year\":year,\n                                                          \"month\":month,\n                                                          \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                        },\n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(!s.message[0])\n                                                        {\n                                                            if(v.salary_payable)\n                                                                {\n                                                            var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                            child_row.employee = d.message[i].employee_name;\n                                                            child_row.employee_id= d.message[i].name;\n                                                            child_row.payroll_payable= d.message[i].salary_payable;\n                                                            child_row.designation= d.message[i].designation;\n                                                             child_row.status= d.message[i].status;\n                                                            frm.refresh_field('payroll_entry_child');\n                                                            \n                                                                }\n                                                        }\n                                                    }\n                                            })\n                                        })\n                                        \n                                        \n                                        frm.refresh_field('payroll_entry_child');\n                                    }\n    \t                         }\n    \t                    }); \n            }\n            else if(desi!=\" \" && emp!=\" \")\n            {\n                console.log(\"444444444444444\")\n                 frappe.call\n                ({\n                                    \"method\":\"frappe.client.get_list\",\n                                    \"args\":\n                                        {\n                                            \"doctype\":\"Employee\",\n                                            \"filters\":\n                                            {\n                                              date_of_joining: ['between', [start_date,end_date]],  \n                                              designation:frm.doc.designation,\n                                              name:emp,\n                                              \"company\":\"Lamit\"\n                                            },\n                                          \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                          limit_page_length:1000,\n                                        },\n                                    callback:function(d)\n                                    {\n                                        if(d.message[0])\n                                        {\n                                            $.each(d.message,function(i,v)\n                                            {\n                                                 frappe.call\n                                                ({\n                                                    \"method\":\"frappe.client.get_list\",\n                                                    \"args\":\n                                                        {\n                                                            \"doctype\":\"Salary Slip\",\n                                                            \"filters\":\n                                                            {\n                                                              \"employee\":d.message[i].name,\n                                                              \"year\":year,\n                                                              \"month\":month,\n                                                              \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                            },\n                                                        },\n                                                        callback:function(s)\n                                                        {\n                                                            if(!s.message[0])\n                                                            {\n                                                                if(v.salary_payable)\n                                                                {\n                                                                var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                child_row.employee = d.message[i].employee_name;\n                                                                child_row.employee_id= d.message[i].name;\n                                                                child_row.payroll_payable= d.message[i].salary_payable;\n                                                                child_row.status= d.message[i].status;\n                                                                child_row.designation= d.message[i].designation;\n                                                                frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                            }\n                                                        }\n                                                })\n                                            });\n                                            \n                                            frm.refresh_field('payroll_entry_child');\n        \n        \t                             }\n        \t               \n        \t                         }\n        \t                    });    \n    \t                    \n    \t        frappe.call\n                ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          relieving_date: ['between', [start_date,end_date]],  \n                                         designation:frm.doc.designation,\n                                          name:emp,\n                                        },\n                                      \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        $.each(d.message,function(i,v)\n                                        {\n                                             frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Slip\",\n                                                        \"filters\":\n                                                        {\n                                                          \"employee\":d.message[i].name,\n                                                          \"year\":year,\n                                                          \"month\":month,\n                                                          \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                        },\n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(!s.message[0])\n                                                        {\n                                                            if(v.salary_payable)\n                                                                {\n                                                            var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                            child_row.employee = d.message[i].employee_name;\n                                                            child_row.employee_id= d.message[i].name;\n                                                            child_row.payroll_payable= d.message[i].salary_payable;\n                                                            child_row.status= d.message[i].status;\n                                                            child_row.designation= d.message[i].designation;\n                                                            frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n    \n    \t                             }\n    \t               \n    \t                         }\n    \t                    }); \n         \n    \t        frappe.call\n                ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          date_of_joining: ['<',start_date],\n                                         designation:frm.doc.designation,\n                                          name:emp,\n                                          relieving_date:['>',end_date],  \n                                            \n                                        },\n                                    \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        $.each(d.message,function(i,v)\n                                        {\n                                             frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Slip\",\n                                                        \"filters\":\n                                                        {\n                                                          \"employee\":d.message[i].name,\n                                                          \"year\":year,\n                                                          \"month\":month,\n                                                          \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                        },\n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(!s.message[0])\n                                                        {\n                                                            if(v.salary_payable)\n                                                                {\n                                                            var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                            child_row.employee = d.message[i].employee_name;\n                                                            child_row.employee_id= d.message[i].name;\n                                                            child_row.payroll_payable= d.message[i].salary_payable;\n                                                             child_row.status= d.message[i].status;\n                                                             child_row.designation= d.message[i].designation;\n                                                            frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n                                    }\n    \t                         }\n    \t                    }); \n    \t                    \n    \t           frappe.call\n    \t           ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          date_of_joining: ['<',start_date],\n                                          designation:frm.doc.designation,\n                                          name:emp,\n                                          relieving_date: ['in',undefined]\n                                            \n                                        },\n                                    \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        $.each(d.message,function(i,v)\n                                        {\n                                            frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Slip\",\n                                                        \"filters\":\n                                                        {\n                                                          \"employee\":d.message[i].name,\n                                                          \"year\":year,\n                                                          \"month\":month,\n                                                          \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                        },\n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(!s.message[0])\n                                                        {\n                                                            if(v.salary_payable)\n                                                                {\n                                                            var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                            child_row.employee = d.message[i].employee_name;\n                                                            child_row.employee_id= d.message[i].name;\n                                                            child_row.payroll_payable= d.message[i].salary_payable;\n                                                            child_row.status= d.message[i].status;\n                                                            child_row.designation= d.message[i].designation;\n                                                            frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n                                    }\n    \t                         }\n    \t                    }); \n            }\n            \n            \n            \n        }\n        \n \n\n        \n    \t                 \n\t        \n\t        \n\t        \n\t                    \n\t                    \n\t},\n\t\n// \tadd_additional_salary:function(frm)\n// \t{\n\t   \n// \t    var full_and_final=0\n\t    \n// \t    if(frm.doc.full_and_final_settlement ==1)\n// \t    {\n// \t        full_and_final=1\n// \t    }\n// \t    else\n// \t    {\n// \t        full_and_final=0\n// \t    }\n\t    \n// \t    if(full_and_final==0)\n// \t    {\n// \t                                                frappe.call\n//                             \t                    ({\n//                                                         \"method\":\"add_additional_salary\",\n//                                                         \"args\":{\n//                                                                      payroll:frm.doc.name,\n//                                                                      company:frm.doc.company,\n//                                                                      start_date:start_date,\n//                                                                      daysInMonth:daysInMonth,\n//                                                                      full_and_final:0,\n//                                                                      end_date:end_date\n                                                                     \n//                                                                 },\n//                                                     })\n//                                                     .then(function()\n//                                                     {\n//                                                          frappe.set_route('query-report', 'Quick Salary Statement')\n//                                                     })\n// \t    }\n// \t    else\n// \t    {\n// \t       // $.each(frm.doc.payroll_entry_child,function(i,v)\n// \t       // {\n// \t       //      frappe.call\n//         //         ({\n//         //             method: 'frappe.client.get_list',\n//         //             args: {\n//         //                 doctype: 'Salary Structure Assignment',\n//         //                 filters: \n//         //                 {\n//         //                     employee:v.employee_id,\n//         //                     docstatus:1,\n//         //                     // from_date: ['<=', start_date],\n//         //                     // // to_date: ['>=', fromDate]\n//         //                 },\n//         //                 // fields: ['name']\n//         //             },\n//         //             callback: function(response)\n//         //             {\n//         //               if(d.message[0])\n//         //               {\n//         //                 //   frappe.db.set_value(\"doctype\":\"Salary Structure Assignment\",{\"payroll_frequancy\":\"Daily\"})\n                        \n//         //                 //   d.have_salary_structure=1\n//         //               }\n//         //             //   else\n//         //             //   {\n//         //             //       d.have_salary_structure=0\n//         //             //   }\n//         //             }\n//         //         })\n// \t       // })\n\t        \n\t        \n// \t         var start=frm.doc.settlement_start_date.split(\"-\")[1]\n// \t         var end=frm.doc.settlement_end_date.split(\"-\")[1]\n// \t         var dayscount\n\t         \n// \t         if(start==end)\n// \t         {\n//     \t        dayscount = new Date(year, start, 0).getDate(); \n    \t       \n    \t        \n// \t         }\n// \t         else\n// \t         {\n// \t              var startMs =new Date(frm.doc.settlement_start_date).getTime();\n//                   var endMs = new Date(frm.doc.settlement_end_date).getTime();\n//                   var diffMs = endMs - startMs;\n//                   var dayscount = (Math.floor(diffMs / (1000 * 60 * 60 * 24)))+1;\n// \t         }\n// \t                                                frappe.call\n//                             \t                    ({\n//                                                         \"method\":\"add_additional_salary\",\n//                                                         \"args\":{\n//                                                                      payroll:frm.doc.name,\n//                                                                      company:frm.doc.company,\n//                                                                      start_date:frm.doc.settlement_start_date,\n//                                                                      end_date:frm.doc.settlement_end_date,\n//                                                                      full_and_final:1,\n//                                                                      daysInMonth:dayscount\n                                                                     \n//                                                                 },\n//                                                     })\n//                                                     .then(function()\n//                                                     {\n//                                                          frappe.set_route('query-report', 'Quick Salary Statement')\n//                                                     })\n// \t    }\n\t                                               \n// \t},\n\n\n\n\n});\n\n// frappe.ui.form.on('Payroll Entry Child', \n// {\n// \temployee_id(frm,cdt,cdn)\n// \t{\n// \t    msgprint(\"ttttttttttt\")\n//         var d=locals [cdt][cdn];\n        \n//         if(d.employee_id)\n//         {\n//             frappe.call\n//             ({\n//                 method: 'frappe.client.get_list',\n//                 args: {\n//                     doctype: 'Salary Structure Assignment',\n//                     filters: \n//                     {\n//                         employee:d.employee_id,\n//                         docstatus:1,\n//                         from_date: ['<=', start_date],\n//                         // to_date: ['>=', fromDate]\n//                     },\n//                     fields: ['name']\n//                 },\n//                 callback: function(response)\n//                 {\n//                   if(d.message[0])\n//                   {\n//                       d.have_salary_structure=1\n//                   }\n//                   else\n//                   {\n//                       d.have_salary_structure=0\n//                   }\n//                 }\n//             })\n//         }\n//         else\n//         {\n            \n//         }\n// \t},\n\n// });\n\n\n\n\n\n\n\n",
  "view": "Form"
 },
 {
  "_liked_by": "[\"Administrator\"]",
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Salary Structure",
  "enabled": 1,
  "modified": "2023-08-30 13:58:49.157388",
  "module": null,
  "name": "New Salary structure",
  "script": "frappe.ui.form.on('Salary Structure',\n{\n    onload(frm)\n    {\n        if(frm.is_new())  \n        {\n            frm.set_value(\"company\",\"Lamit\");\n            \n        }\n        \n        console.log(frm.doc.payroll_frequency)\n        \n    },\n\trefresh(frm)\n\t{\n\t    \n\t    \n\t   // frm.set_df_property('deductions',  'read_only',  1);\n\t    \n\t    $('li').removeClass(\"disabled\");\n\t    cur_frm.dashboard.hide();\n\t    frm.page.sidebar.remove();\n\t    frm.page.wrapper.find(\".comment-box\").css({'display':'none'});\n\t    frm.set_df_property(\"company\",\"read_only\",1);\n\t    \n\t     setTimeout(() => {\n            frm.remove_custom_button('Preview Salary Slip');\n            \n            // ?frm.remove_custom_button('Interview','Create');\n       \n        }, 10);\n\t},\n\t\n\t\n// \tselect_pt_template:function(frm)\n// \t{\n// \t    if(frm.doc.select_pt_template)\n// \t    {\n// \t        frappe.call({\n// \t            method:\"frappe.client.get\",\n// \t            args:\n// \t            {\n// \t                doctype:\"PT\",\n// \t                filters:{\"name\":frm.doc.select_pt_template},\n// \t               // fields:[\"*\"]\n// \t            },\n// \t            callback:function(frm)\n// \t            {\n// \t                if(frm)\n// \t                {\n// \t                    console.log(frm.message.table,\"999999999\")\n\t                    \n// \t                    $.each(frm.message.table,function(i,v)\n// \t                    {\n\t                        \n// \t                         var child = cur_frm.add_child(\"deductions\");\n//                               frappe.model.set_value(child.doctype, child.name, \"salary_component\",v.salary_component);\n//                                 // frappe.model.set_value(child.doctype, child.name, \"per_working_day\",v.per_working_day);\n//                                 // frappe.model.set_value(child.doctype, child.name, \"amount1\",v.amount);\n//                                 frappe.model.set_value(child.doctype, child.name, \"condition\",v.condition);\n//                                 //  frappe.model.set_value(child.doctype, child.name, \"abbr\",v.abbr);\n                                \n                                \n                                              \n                            \n\t                        \n// \t                    })\n// \t                     cur_frm.refresh_field(\"deductions\");\n// \t                }\n\t                \n// \t            }\n// \t        })\n// \t    }\n\t    \n// \t}\n\t\n\t\n\n\n\n// select_pt_template: function (frm) {\n//     if (frm.doc.select_pt_template) {\n        \n//          cur_frm.clear_table('deductions');\n//         cur_frm.refresh_field('deductions');\n        \n//         frappe.call({\n//             method: \"frappe.client.get\",\n//             args: {\n//                 doctype: \"PT\",\n//                 filters: { \"name\": frm.doc.select_pt_template },\n//             },\n//             callback: function (response) {\n//                 if (response && response.message && response.message.table) {\n//                     var deductions_table = frm.doc.deductions || [];\n                    \n//                     console.log(deductions_table,\"ppppp\")\n                    \n                    \n//                     $.each(response.message.table, function (i, v) {\n//                         var child = {\n//                             salary_component: v.salary_component,\n//                             condition: v.condition,\n//                             formula:v.formula,\n//                             amount:v.amount,\n//                             amount1:v.amount1\n//                         };\n//                         deductions_table.push(child);\n//                     });\n\n//                     frm.doc.deductions = deductions_table;  \n//                     frm.refresh_field(\"deductions\");\n//                 }\n//             }\n//         });\n//     }\n    \n    \n//     else\n//     {\n        \n//         console.log(\"NO COMPONENT\")\n//         cur_frm.clear_table('deductions');\n\n                       \n//         cur_frm.refresh_field('deductions');\n        \n//     }\n// }\n\n\nselect_pt_template: function (frm) {\n    var template = frm.doc.select_pt_template;\n\n    frm.clear_table('deductions');\n    frm.refresh_field('deductions');\n\n    if (template) {\n        frappe.call({\n            method: \"frappe.client.get\",\n            args: {\n                doctype: \"PT\",\n                filters: { \"name\": template },\n            },\n            callback: function (response) {\n                if (response?.message?.table) {\n                    var deductions_table = response.message.table.map(function(v) {\n                        return {\n                            salary_component: v.salary_component,\n                            condition: v.condition,\n                            formula: v.formula,\n                            amount: v.amount,\n                            amount1: v.amount1\n                        };\n                    });\n\n                    frm.set_value(\"deductions\", deductions_table);\n                }\n            }\n        });\n    } else {\n        console.log(\"NO COMPONENT\");\n    }\n}\n\n\n\n\n\n\n\n\n\n\t\n});\n\nfrappe.ui.form.on('Salary Detail',\n{\n    per_working_day:function(frm,cdt,cdn)\n\t{\n\t    var d=locals [cdt][cdn];\n\t    if(d.per_working_day)\n\t    {\n\t        var z=flt(d.per_working_day)*31;\n\t        frappe.model.set_value(cdt,cdn, \"amount1\",z);\n\t        frappe.model.set_value(cdt,cdn, \"amount_based_on_formula\",1);\n\t        frappe.model.set_value(cdt,cdn, \"formula\",\"days\"+\"*\"+d.per_working_day);\n\t    }\n\t    else\n\t    {\n\t        frappe.model.set_value(cdt,cdn, \"amount_based_on_formula\",0);\n\t        frappe.model.set_value(cdt,cdn, \"formula\",undefined);\n\t    }\n\t},\n\t\n\n\t\n\tamount1:function(frm,cdt,cdn)\n\t{\n\t    var d=locals [cdt][cdn];\n\t    if(d.per_working_day)\n\t    {\n\t        var z=flt(d.per_working_day)*31;\n\t        frappe.model.set_value(cdt,cdn, \"amount1\",z);\n\t        \n\t    }\n\t    frappe.model.set_value(cdt,cdn, \"amount\",d.amount1);\n\t},\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2023-08-31 10:09:07.526298",
  "module": null,
  "name": "Verification Check Box",
  "script": "\n\n\n\n\n\n\n\nfrappe.ui.form.on('Employee',                                      //modified code Administrator can edit and unedit employee details \n{\n  onload: function(frm) {\n    frm.set_query('user', function() \n    {\n      return{\n        filters: [\n          ['User', 'name', '!=', 'Administrator'] // Exclude 'Administrator' user from the Employee form's user field\n        ]\n      };\n    });\n  },\n  refresh: function(frm) {\n    frappe.call({\n      method: 'frappe.client.get_value',\n      args: {\n        doctype: 'User',\n        filters: {\n          name: frappe.session.user\n        },\n        fieldname: 'designation'\n      },\n      callback: function(r) \n      {\n        var designation = r.message.designation;\n        var isVerified = frm.doc.verified;\n\n        // Set the fields as read-only or editable based on 'verified' checkbox value and user designation\n        if (isVerified && designation !== 'HR Manager' && designation !== 'Administrator') {\n          setFieldsReadOnly(frm);\n        } else {\n          setFieldsUnreadOnly(frm);\n        }\n\n        // Show/hide 'verified' field based on the designation and whether it's an Administrator user\n        var showVerified = designation === 'HR Manager' || designation === 'HR User' || frappe.user.has_role('Administrator');\n        frm.toggle_display('verified', showVerified);\n        frm.fields_dict.verified.df.read_only = !showVerified;\n        frm.fields_dict.verified.refresh();\n      }\n    });\n  }\n});\n\nfunction setFieldsReadOnly(frm)\n{\n  if (!frappe.user.has_role('Administrator')) \n  {\n    $.each(frm.fields_dict, function(fieldname, field) \n    {\n      if (fieldname !== 'verified') \n      {\n        field.df.read_only = true;\n        field.refresh();\n      }\n    });\n  }\n}\n\nfunction setFieldsUnreadOnly(frm) {\n  if (!frappe.user.has_role('Administrator')) {\n    $.each(frm.fields_dict, function(fieldname, field) {\n      if (fieldname !== 'verified') {\n        field.df.read_only = false;\n        field.refresh();\n      }\n    });\n  }\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Promotion",
  "enabled": 1,
  "modified": "2023-08-24 16:03:50.339619",
  "module": null,
  "name": "Promotion",
  "script": "frappe.ui.form.on('Promotion', {\n\trefresh(frm)\n\t\n\t{\n\t\t// your code here\n\t\t\n// \t\t if (frm.doc.status === \"Approved\") {\n//             frm.remove_custom_button('Apply Promotion');\n//             console.log(\"Custom button removed\");\n//         }\n\t\t\n\t\tif(frm.doc.status!==\"Approved\")\n\t\t{\n\t\t    \n\t\t    \n\t\t\n        \t\tfrm.add_custom_button(\"Apply Promotion\",()=>\n        \t\t{\n        \t\t    console.log(frm.doc.designation,\"ll\")\n        \t\t    \n        \t\t    \n        \t\t    if(frm.doc.select_employee)\n\t\t                {\n        \t\t    \n        \t\t    \n        \t\t    \n        \t\t    \n                \t\t    let d = new frappe.ui.Dialog({\n                            title: 'Enter details',\n                            fields: [\n                                {\n                                    label: 'Select Category',\n                                    fieldname: 'select_category',\n                                    fieldtype: 'Select',\n                                    options:'Department\\nDesignation\\nGrade\\nSalary',\n                                },\n                                \n                                \n                                \n                                {\n                                    label: 'Current Monthly Salary',\n                                    fieldname: 'old_monthly_salary',\n                                    fieldtype: 'Data',\n                                    mandatory_depends_on: 'eval:doc.select_category==\"Salary\"',\n                                    \n                                    depends_on: 'eval:doc.select_category==\"Salary\"'\n                                },\n                                \n                                 {\n                                    label: 'New Monthly Salary',\n                                    fieldname: 'monthly_salary',\n                                    fieldtype: 'Data',\n                                   mandatory_depends_on: 'eval:doc.select_category==\"Salary\"',\n                                    \n                                    depends_on: 'eval:doc.select_category==\"Salary\"'\n                                },\n                                \n                                \n                                \n                                \n                                {\n                                    label: 'Current Department',\n                                    fieldname: 'old_department',\n                                    fieldtype: 'Link',\n                                    options: 'Department',\n                                    depends_on: 'eval:doc.select_category==\"Department\"',\n                                    mandatory_depends_on: 'eval:doc.select_category==\"Department\"',\n                                    default: frm.doc.department,\n                                    get_query: function(doc, cdt, cdn) {\n                                        return {\n                                            filters: {\n                                               company:\"Lamit\"\n                                            }\n                                        };\n                                    }\n                                    \n                                    \n                                },\n                                {\n                                    label: 'New Department',\n                                    fieldname: 'new_department',\n                                    fieldtype: 'Link',\n                                    options: 'Department',\n                                    depends_on: 'eval:doc.select_category==\"Department\"',\n                                    mandatory_depends_on: 'eval:doc.select_category==\"Department\"',\n                                     get_query: function(doc, cdt, cdn) {\n                                        return {\n                                            filters: {\n                                               company:\"Lamit\"\n                                            }\n                                        };\n                            }\n                                   \n                                },\n                                \n                                {\n                                    label: 'Current Grade',\n                                    fieldname: 'old_grade',\n                                    fieldtype: 'Link',\n                                    options: 'Employee Grade',\n                                    depends_on: 'eval:doc.select_category==\"Grade\"',\n                                    mandatory_depends_on: 'eval:doc.select_category==\"Grade\"',\n                                    default: frm.doc.grade,\n                                },\n                                \n                                {\n                                    label: 'New Grade',\n                                    fieldname: 'new_grade',\n                                    fieldtype: 'Link',\n                                    options: 'Employee Grade',\n                                    depends_on: 'eval:doc.select_category==\"Grade\"',\n                                    mandatory_depends_on: 'eval:doc.select_category==\"Grade\"',\n                                },\n                                 {\n                                    label: 'Current Designation',\n                                    fieldname: 'old_designation',\n                                    fieldtype: 'Link',\n                                    options: 'Designation',\n                                    depends_on: 'eval:doc.select_category==\"Designation\"',\n                                    mandatory_depends_on: 'eval:doc.select_category==\"Designation\"',\n                                    default: frm.doc.designation,\n                                },\n                                \n                                {\n                                    label: 'New Designation',\n                                    fieldname: 'new_designation',\n                                    fieldtype: 'Link',\n                                    options: 'Designation',\n                                    depends_on: 'eval:doc.select_category==\"Designation\"',\n                                    mandatory_depends_on: 'eval:doc.select_category==\"Designation\"',\n                                }\n                            ],\n                            size: 'small', // small, large, extra-large \n                            primary_action_label: 'Submit',\n                            primary_action(values)\n                            \n                            {\n                                console.log(values);\n                                \n                                \n                                frm.set_value(\"category\",values.select_category)\n                                \n                                frm.clear_table(\"promotion_child\");\n                                frm.refresh_field(\"promotion_child\");\n                                \n                                \n                                \n                                if(values.select_category==\"Department\")\n                                {\n                                \n                                     var child = cur_frm.add_child(\"promotion_child\");\n                                     frappe.model.set_value(child.doctype, child.name, \"property\",values.select_category);\n                                     frappe.model.set_value(child.doctype, child.name, \"current\",values.old_department);\n                                     frappe.model.set_value(child.doctype, child.name, \"new\",values.new_department);\n                                     \n                                     cur_frm.refresh_field(\"promotion_child\");\n                                     \n                                }\n                                \n                                else if(values.select_category==\"Designation\")\n                                {\n                                \n                                     var child = cur_frm.add_child(\"promotion_child\");\n                                     frappe.model.set_value(child.doctype, child.name, \"property\",values.select_category);\n                                     frappe.model.set_value(child.doctype, child.name, \"current\",values.old_designation);\n                                     frappe.model.set_value(child.doctype, child.name, \"new\",values.new_designation);\n                                     \n                                     cur_frm.refresh_field(\"promotion_child\");\n                                     \n                                }\n                                \n                                else if(values.select_category==\"Grade\")\n                                {\n                                \n                                     var child = cur_frm.add_child(\"promotion_child\");\n                                     frappe.model.set_value(child.doctype, child.name, \"property\",values.select_category);\n                                     frappe.model.set_value(child.doctype, child.name, \"current\",values.old_grade);\n                                     frappe.model.set_value(child.doctype, child.name, \"new\",values.new_grade);\n                                     \n                                     cur_frm.refresh_field(\"promotion_child\");\n                                     \n                                }\n                                \n                                \n                                else if(values.select_category==\"Salary\")\n                                {\n                                    \n                                     var child = cur_frm.add_child(\"promotion_child\");\n                                     frappe.model.set_value(child.doctype, child.name, \"property\",values.select_category);\n                                     frappe.model.set_value(child.doctype, child.name, \"current\",values.old_monthly_salary);\n                                     frappe.model.set_value(child.doctype, child.name, \"new\",values.monthly_salary);\n                                     \n                                     cur_frm.refresh_field(\"promotion_child\");\n                                    \n                                \n                                     frm.set_value(\"monthly_salary\",values.monthly_salary)\n                                     \n                                }\n                                \n                                \n                               \n                                \n                                \n                                \n                                \n                                d.hide();\n                            }\n                        });\n                        \n                        d.show();\n                \n\t\t                }\n\t\t                \n\t\t                else\n\t\t                {\n\t\t                     msgprint(\"Please Select Employee first\")\n\t\t                }\n        \n        \t\t    \n        \t\t})\n        \t\t\n\t\t    \n\t\t    \n\t\t  //  else\n\t\t  //  {\n\t\t  //      msgprint(\"Please Select Employee first\")\n\t\t  //  }\n\t\t\n\t\t}\n\t\tif(frm.doc.monthly_salary)\n\t\t{\n\t\t     frm.set_df_property('deductions',  'read_only', 1);\n\t\t}\n\t\t\n\t\t\n\t\t\n\t\t\n\t\t\n\t\tfrm.set_df_property('deductions',  'read_only', 1);\n\t\t\n\t\t\n\t},\n\t\n\t\n\t\n\tdeduction_template: function (frm) \n\t\n\t{\n    if (frm.doc.deduction_template) {\n        \n         cur_frm.clear_table('deductions');\n        cur_frm.refresh_field('deductions');\n        \n        frappe.call({\n            method: \"frappe.client.get\",\n            args: {\n                doctype: \"PT\",\n                filters: { \"name\": frm.doc.select_pt_template },\n            },\n            callback: function (response) {\n                if (response && response.message && response.message.table) {\n                    var deductions_table = frm.doc.deductions || [];\n                    \n                    console.log(deductions_table,\"ppppp\")\n                    \n                    \n                    $.each(response.message.table, function (i, v) {\n                        var child = {\n                            salary_component: v.salary_component,\n                            condition: v.condition,\n                            formula:v.formula,\n                            amount:v.amount,\n                            amount1:v.amount1\n                        };\n                        deductions_table.push(child);\n                    });\n\n                    frm.doc.deductions = deductions_table;  \n                    frm.refresh_field(\"deductions\");\n                }\n            }\n        });\n    }\n    \n    \n   \n},\n\n\n    effective_from:function(frm)\n    \n    {\n        if(frm.doc.effective_from<frappe.datetime.get_today())\n        {\n            frm.set_value(\"effective_from\",undefined)\n        }\n        \n    },\n    \n    \n    onload:function(frm)\n    \n    {\n        \n        frm.set_query(\"select_employee\",function()\n        {\n            return{\n                filters:{\n                    \"company\":\"Lamit\"\n                }\n            };\n            \n        })\n        \n        frm.set_query(\"company\",function()\n        {\n            return{\n                filters:{\n                    \"name\":\"Lamit\"\n                }\n            };\n            \n        })\n        \n        \n//         if(frm.doc.status==\"Approved\")\n// \t\t{\n// \t\t    frm.remove_custom_button('Apply Promotion');\n// \t\t}\n\t\t\n        \n    }\n\t\n\t\n})\n\n\n\nfrappe.ui.form.on('Salary Detail',\n{\n    per_working_day:function(frm,cdt,cdn)\n\t{\n\t    \n\t     console.log(\"KKKKKK\")\n\t    var d=locals [cdt][cdn];\n\t    if(d.per_working_day)\n\t    {\n\t        var z=flt(d.per_working_day)*31;\n\t        frappe.model.set_value(cdt,cdn, \"amount1\",z);\n\t        frappe.model.set_value(cdt,cdn, \"amount_based_on_formula\",1);\n\t        frappe.model.set_value(cdt,cdn, \"formula\",\"days\"+\"*\"+d.per_working_day);\n\t    }\n\t    else\n\t    {\n\t        frappe.model.set_value(cdt,cdn, \"amount_based_on_formula\",0);\n\t        frappe.model.set_value(cdt,cdn, \"formula\",undefined);\n\t    }\n\t},\n\t\n\n\tamount1:function(frm,cdt,cdn)\n\t{\n\t    var d=locals [cdt][cdn];\n\t    if(d.per_working_day)\n\t    {\n\t        var z=flt(d.per_working_day)*31;\n\t        frappe.model.set_value(cdt,cdn, \"amount1\",z);\n\t        \n\t    }\n\t    frappe.model.set_value(cdt,cdn, \"amount\",d.amount1);\n\t},\n\t\n\t\n\t\n\t\n\t\n\t\n\t\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Alert",
  "enabled": 1,
  "modified": "2023-08-24 16:28:35.634859",
  "module": null,
  "name": "Alert",
  "script": "frappe.ui.form.on('Alert', {\n    refresh: function(frm) {\n        // Track selected values to prevent duplicates\n        var selectedEmployee = null;\n        var selectedDesignation = null;\n        var selectedDepartment = null;\n\n        function updateEmployeeData(employee) {\n            if (employee && employee !== selectedEmployee) {\n                selectedEmployee = employee;\n                fetchEmployeeData({ employee: employee });\n            }\n        }\n\n        function updateDesignationData(designation) {\n            if (designation && designation !== selectedDesignation) {\n                selectedDesignation = designation;\n                // frm.clear_table('receipient_details');\n                fetchEmployeeData({ designation: designation });\n            }\n        }\n\n        function updateDepartmentData(department) {\n            if (department && department !== selectedDepartment) {\n                selectedDepartment = department;\n                // frm.clear_table('receipient_details');\n                fetchEmployeeData({ department: department });\n            }\n        }\n        \n      function fetchEmployeeData(filters) {\n            frappe.call({\n                method: 'frappe.client.get_list',\n                args: {\n                    doctype: 'Employee', // Replace with the actual doctype name\n                    filters: filters,\n                    limit_page_length: 100,\n                    limit_start: 0,\n                    fields: ['first_name', 'user_id']\n                },\n                callback: function(response) {\n                    if (response.message) {\n                        var employeeData = response.message;\n\n                        if (employeeData.length > 0) {\n                            // Check if the child table exists\n                            if (!frm.doc.receipient_details) {\n                                frm.set_value('receipient_details', []);\n                            }\n\n                            // Create a new row in the child table for each employee\n                            employeeData.forEach(function(data) {\n                                var row = frappe.model.add_child(frm.doc, 'receipient_details', 'receipient_details');\n                                row.name1 = data.first_name;\n                                row.email = data.user_id;\n                            });\n\n                            // Refresh the child table\n                            frm.refresh_field('receipient_details');\n                        }\n                    }\n                }\n            });\n        } \n        \n        \n\n        // Employee field change event\n        frm.fields_dict['employee'].df.onchange = function() {\n            var employee = frm.doc.employee;\n            updateEmployeeData(employee);\n        };\n\n        // Designation field change event\n        frm.fields_dict['designation1'].df.onchange = function() {\n            var designation = frm.doc.designation1;\n            updateDesignationData(designation);\n        };\n\n        // Department field change event\n        frm.fields_dict['department1'].df.onchange = function() {\n            var department = frm.doc.department1;\n            updateDepartmentData(department);\n        };\n    }\n});",
  "view": "Form"
 },
 {
  "_liked_by": "[\"Administrator\"]",
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Leave Application",
  "enabled": 1,
  "modified": "2023-08-30 15:09:45.812095",
  "module": null,
  "name": "Leave Application1",
  "script": "frappe.ui.form.on('Leave Application', \n{\n\n\n\n\n// employee:function(frm)\n// {\n//     if(frm.doc.employee)\n//     {\n        \n//         cur_frm.clear_table(\"salary_detail\");\n//         cur_frm.refresh_field(\"salary_detail\");\n            \n            \n//         frappe.call({\n//             method:\"frappe.client.get_list\",\n//             args:{\n//                 doctype:\"Leave Allocation\",\n//                 filters:{\"employee\":frm.doc.employee},\n//                 fields:[\"*\"]\n//             },\n//             callback:function(res)\n//             {\n//                 if(res.message.length>0)\n//                 {\n//                     console.log(res.message)\n//                     $.each(res.message,function(i,v)\n//                     {\n//                         var child = cur_frm.add_child(\"leave_balance_table\");\n//                                     frappe.model.set_value(child.doctype, child.name, \"leave_type\",v.leave_type);\n//                                     frappe.model.set_value(child.doctype, child.name, \"leave_alloted\",v.total_leaves_allocated);\n//                                     frappe.model.set_value(child.doctype, child.name, \"leave_taken\",v.taken_leave);\n//                                     frappe.model.set_value(child.doctype, child.name, \"leave_balance\",v.balance_leave);\n                                                   \n                               \n                        \n//                     })\n//                      cur_frm.refresh_field(\"leave_balance_table\");\n                    \n//                 }\n                \n//             }\n//         })\n//     }\n// },\n\n\n\n\n    employee: function(frm) {\n        if (frm.doc.employee) {\n            frm.clear_table(\"leave_balance_table\");\n            \n            frappe.call({\n                method: \"frappe.client.get_list\",\n                args: {\n                    doctype: \"Leave Allocation\",\n                    filters: { \"employee\": frm.doc.employee },\n                    fields: [\"leave_type\", \"total_leaves_allocated\", \"taken_leave\", \"balance_leave\"]\n                },\n                callback: function(res) {\n                    if (res.message && res.message.length > 0) {\n                        console.log(res.message)\n                        $.each(res.message, function(i, v) {\n                            var child = frappe.model.add_child(frm.doc, \"leave_balance_table\");\n                            frappe.model.set_value(child.doctype, child.name, \"leave_type\", v.leave_type);\n                            frappe.model.set_value(child.doctype, child.name, \"leave_alloted\", v.total_leaves_allocated);\n                            frappe.model.set_value(child.doctype, child.name, \"leave_taken\", v.taken_leave);\n                            frappe.model.set_value(child.doctype, child.name, \"leave_balance\", v.balance_leave);\n                        });\n\n                        frm.refresh_field(\"leave_balance_table\");\n                    }\n                }\n            });\n        }\n    }\n\n\n\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Resignation",
  "enabled": 1,
  "modified": "2023-08-30 17:02:01.180193",
  "module": null,
  "name": "Resignation",
  "script": "\nfrappe.ui.form.on('Resignation', \n{\n    onload: function(frm) \n    {\n        frm.trigger('check_hr_manager');\n\n        \n    \n    },\n     \n\n  \n\n    check_hr_manager: function(frm)\n    {\n        // Check if the current user has the role 'HR Manager'\n        const hrManagerDesignation = 'HR Manager';\n\n        frappe.call({\n            method: 'frappe.client.get_value',\n            args: {\n                doctype: 'User',\n                filters:\n                {\n                    name: frappe.session.user\n                },\n                fieldname: 'designation'\n            },\n            callback: function(response) \n            {\n                if (response.message && response.message.designation === hrManagerDesignation)\n                {\n                    // Only show the 'Approve' button to HR Manager users\n                    frm.add_custom_button(__('Approve'), function()\n                    \n                    \n                    \n                    {\n                         if (!frm.doc.accepted_date || !frm.doc.relieving_date || !frm.doc.notice_period)\n                         {\n                            frappe.msgprint(__('Please fill in All the Required fields.'));\n                            return;\n                        }\n                        frappe.confirm(__('Are you sure you want to Approve this Resignation?'), function() \n                        {\n                            // Update the status to 'Approved' on the client side\n                            // if(frm.doc.accepted_date || frm.doc.notice_period)\n                            // {\n                            frm.set_value('status', 'Approved');\n                             frm.save();\n                            // }\n                  \n                        });\n                    }).addClass('btn-primary').attr('disabled', frm.doc.status === 'Approved');\n        if(frm.doc.status==\"Approved\" )\n\t    {\n\t        cur_frm.page.remove_inner_button(__('Approve'));\n\t       \n\t    }\n\n                    // Show the 'accepted_date' and 'notice_period' fields to HR Manager users\n                    frm.toggle_display(['accepted_date', 'notice_period','relieving_date'], true);\n                    //  frm.set_df_property('feedback', 'read_only', true);\n                     frm.set_df_property('status','read_only',true)\n                    //  frm.set_df_property('reason_for_leaving','read_only',true)\n                    //   frm.set_df_property('employee','read_only',true)\n                    //   frm.set_df_property('employee_number','read_only',true)\n                    //   frm.set_df_property('designation','read_only',true)\n                    frm.set_df_property('accepted_date','reqd',1)\n                    frm.set_df_property('notice_period','reqd',1)\n                    frm.set_df_property('relieving_date','reqd',1)\n                    \n           \n      \n            frm.fields_dict['accepted_date'].get_query = function(doc) {\n                return {\n                    filters: {\n                        'employee': frm.doc.employee\n                    }\n                };\n            };\n\n            frm.fields_dict['accepted_date'].df.onchange = function() {\n                calculateRelievingDate(frm);\n            };\n\n            frm.fields_dict['notice_period'].df.onchange = function() {\n                calculateRelievingDate(frm);\n            };\n                  \n                ///////////////////    \n frm.fields_dict['notice_period'].df.onchange = function() {\n            const noticePeriod = frm.doc.notice_period;\n            if (noticePeriod !== null && noticePeriod !== \"\" && !Number.isInteger(Number(noticePeriod))) {\n                frappe.msgprint(__('Notice period should be an integer value.'));\n                frm.set_value('notice_period', null);\n            } else {\n                calculateRelievingDate(frm);\n            }\n        };\n                    \n              //////////////////////////////////////////      \n                }\n                else \n                {\n                    // Hide the 'accepted_date' and 'notice_period' fields from non-HR Manager users\n                    frm.toggle_display(['accepted_date', 'notice_period','relieving_date'], false);\n                     frm.set_df_property('feedback', 'read_only', true);\n                      frm.set_df_property('status', 'read_only', true);\n                       frm.set_df_property('employee', 'read_only', true);\n                        frm.set_df_property('designation', 'read_only', true);\n                     frm.set_df_property('employee_number', 'read_only', true);\n                     frm.set_df_property('resignation_letter_date', 'read_only', true);\n                     frm.set_df_property('reason_for_leaving', 'read_only', true);\n                    //  frm.set_df_property(\"relieving_date\",\"read_only\",true)\n                     \n                }\n           ////////////////////////     \n            \n       \n/////////////  \n         \n                \n                \n            \n            \n    }\n        });\n    }\n    \n   \n\n});\n\n\nfunction calculateRelievingDate(frm) {\n    const acceptedDate = frm.doc.accepted_date;\n    const noticePeriod = frm.doc.notice_period;\n    if (acceptedDate && noticePeriod) {\n        const acceptedDateObj = frappe.datetime.str_to_obj(acceptedDate);\n        const relievingDateObj = frappe.datetime.add_days(acceptedDateObj, noticePeriod);\n        const relievingDateFormatted = frappe.datetime.obj_to_user(relievingDateObj, 'DD-MM-YYYY');\n        frm.set_value('relieving_date', relievingDateFormatted);\n    }\n}\n\n// //////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Employee",
  "enabled": 1,
  "modified": "2023-09-01 15:06:27.650927",
  "module": null,
  "name": "Employee Resignation",
  "script": "    \nfrappe.ui.form.on('Employee',\n{\n  refresh: function(frm) {\n    // var current_user = frappe.session.user;\n    // var viewed_user = frm.doc.user_id || frm.doc.email_id\n    \n    // if (current_user === viewed_user) \n    // {\n    //   frm.toggle_display('apply', true);\n    // } else {\n    //   frm.toggle_display('apply', false);\n    // }\n\n    $('button[data-fieldname=\"apply\"]').css({\n      'color': '#FFFFFF',\n      'background-color': '#77DD77',\n      'font-size': '16px',\n      'padding': '10px 20px'\n    });\n\n    // Check if a resignation document already exists for the current employee\n    frappe.call({\n      method: 'frappe.client.get_value',\n      args: \n      {\n        doctype: 'Resignation',\n        filters: { 'employee': frm.doc.first_name },\n        fieldname: 'name'\n      },\n      callback: function(response) \n      {\n        if (response && response.message && response.message.name) \n        {\n          frm.toggle_display('apply', false); // Hide the \"Apply\" button if a resignation exists\n        } \n        // else {\n        //   frm.toggle_display('apply', true); // Show the \"Apply\" button if no resignation exists\n        // }\n      }\n    });\n  },\n\n\n  apply: function(frm) \n  {\n        frappe.prompt([\n            {\n                fieldname: 'resignation_letter',\n                label: 'Resignation Letter Date',\n                fieldtype: 'Date',\n                reqd:1\n            },\n            \n            {\n                fieldname: 'reason',\n                label: 'Reason For Leaving',\n                fieldtype: 'Text',\n                reqd: 1\n            },\n            \n            {\n                fieldname: 'feedback',\n                label: 'Feedback',\n                fieldtype: 'Text',\n            }\n              \n        ],\n        function(values) \n        {\n            var doc = frappe.model.get_new_doc('Resignation'); \n\n           \n            doc.reason_for_leaving = values.reason;\n            // doc.accepted_date = values.accepted;\n            // doc.notice_period = values.notice_period;\n            doc.feedback = values.feedback;\n            doc.resignation_letter_date=values.resignation_letter;\n            //  doc.resignation_letter=values.resignation_letter_date;\n\n            \n            frappe.db.get_value('Employee', frm.docname, ['first_name', 'designation','employee_number'], function(data) \n            {\n                if (data)\n                {\n                    doc.employee = data.first_name;\n                    doc.designation = data.designation;\n                    doc.employee_number=data.employee_number\n                  \n                    frappe.db.insert(doc).then(function(response) \n                    {\n                        if (response && response.name) \n                        {\n                            frappe.msgprint('Resignation Request Created Successfully.');\n                            frm.reload_doc(); \n                        \n                        }\n                    });\n                }\n            });\n           \n        },\n        'Create Resignation', 'Apply');\n   \n    }\n\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Attendance",
  "enabled": 1,
  "modified": "2023-09-23 15:30:38.322974",
  "module": null,
  "name": "Attendance1",
  "script": "frappe.ui.form.on('Attendance', {\n\trefresh(frm) {\n\t\t// your code here\\\n\t\t if(frm.doc.longitude && frm.doc.latitude){\n\t        frm.set_df_property('my_location','options','<div class=\"mapouter\"><div class=\"gmap_canvas\"><iframe width=100% height=\"300\" id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q='+frm.doc.latitude+','+frm.doc.longitude+'&t=&z=17&ie=UTF8&iwloc=&output=embed\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe><br><style>.mapouter{position:relative;text-align:right;height:300px;width:100%;}</style><style>.gmap_canvas {overflow:hidden;background:none!important;height:300px;width:100%;}</style></div></div>');\n            frm.refresh_field('my_location');\n\t    }\n\t},\n\t\n\tonload(frm)\n\t{\n\t     if(frm.doc.longitude && frm.doc.latitude){\n\t        frm.set_df_property('my_location','options','<div class=\"mapouter\"><div class=\"gmap_canvas\"><iframe width=100% height=\"300\" id=\"gmap_canvas\" src=\"https://maps.google.com/maps?q='+frm.doc.latitude+','+frm.doc.longitude+'&t=&z=17&ie=UTF8&iwloc=&output=embed\" frameborder=\"0\" scrolling=\"no\" marginheight=\"0\" marginwidth=\"0\"></iframe><br><style>.mapouter{position:relative;text-align:right;height:300px;width:100%;}</style><style>.gmap_canvas {overflow:hidden;background:none!important;height:300px;width:100%;}</style></div></div>');\n            frm.refresh_field('my_location');\n\t    }\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payroll Process",
  "enabled": 1,
  "modified": "2023-10-16 15:59:50.069041",
  "module": null,
  "name": "Test",
  "script": "var onload;\nvar trigger=1;\nvar start_date;\nvar end_date;\nvar create_slip=\" \";\nvar save=\" \";\nvar active_salary_structure=\" \";\nvar daysInMonth;\nvar month;\nvar year;\nvar emp_hold=\" \";\n\nfrappe.ui.form.on('Payroll Process', \n{\n\tonload(frm)\n\t{\n\t   // console.log(\"KLKLK\")\n\t    \n\t    \n\t    frm.set_query(\"payroll_payable\",function(){\n\t        return {\n            \"filters\": {\n                \"account_type\": \"Bank\",\n                \"company\": \"Lamit\",\n                \"is_group\":0\n            }\n        };\n\t    \n\t    })\n\t    \n\t    frm.set_query(\"company\",function(){\n\t        return {\n            \"filters\": {\n                \n                \"name\": \"Lamit\",\n                \n            }\n        };\n\t    \n\t    })\n\t    \n\t    \n\t    \n\t    \n\t    create_slip=\" \";\n\t    active_salary_structure=\" \"\n\t    save=\" \";\n\t    emp_hold=\" \";\n\t    \n\t    if(frm.is_new())\n\t    {\n    \t    var year1=[];\n            var month_list=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n            \n            const currentDate = new Date();\n            const currentYear = currentDate.getFullYear();\n            const currentMonth1 = currentDate.getMonth();\n            const currentMonth=month_list[currentMonth1]\n            \n            frm.set_value(\"year\",currentYear)\n\t    }\n\t    \n\t    \n\t    else\n\t    {\n\t        frm.set_df_property('company',  'read_only', 1);\n\t         frm.set_df_property('posting_date',  'read_only', 1);\n\t          frm.set_df_property('payroll_name',  'read_only', 1);\n\t           frm.set_df_property('payroll_payable',  'read_only', 1);\n\t       frm.set_df_property('year',  'read_only', 1);\n\t       frm.set_df_property('month',  'read_only', 1);\n\t       frm.set_df_property('designation',  'read_only', 1);\n\t       frm.set_df_property('employee',  'read_only', 1);\n\t        frm.set_df_property('create_salary_slip',  'read_only', 1);\n\t        frm.set_df_property('submit_salary_slip',  'read_only', 1);\n\t        frm.set_df_property('make_bank_entry',  'read_only', 1);\n\t        frm.set_df_property('create_journal',  'read_only', 1);\n\t        frm.set_df_property('full_and_final_settlement',  'read_only', 1);\n\t    }\n\t},\n\t\n\trefresh(frm)\n\t{\n\t   // frm.disable_save() \n\t   \n\t   \n\t   \n\t   \n        \t   \n\t   \n\t    \n\t    if(!frm.is_new())\n\t    {\n\t         var year1=[]\n\t         var month_list=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\n\t          \n\t         year1[0]=flt(frm.doc.year)-2\n             year1[1]=flt(frm.doc.year)-1\n             year1[2]=flt(frm.doc.year)\n             \n            for(var i=1;i<10;i++)\n            {\n                year1.push(frm.doc.year+i)\n            }\n            \n            \n        var report= frm.add_custom_button('Quick Salary Statement Report',\n\t    function()\n\t    {\n\t        frappe.set_route('query-report', 'Salary Slip Report');\n\t        \n\t    })\n\n\t    }\n\t    \n\t    if(frm.is_new())\n\t    {\n\t        \n\n    \t   // var create= frm.add_custom_button('Process Salary',\n    \t   // function()\n    \t   // {\n    \t   //    // console.log(\"SUCCESS\")\n    \t   //     create_slip=\"true \";\n    \t       \n        //         if(frm.doc.payroll_entry_child.length>0)\n        //         {\n        // \t        if(frm.doc.payroll_name !=undefined)\n        // \t        {\n        // \t            if(frm.doc.payroll_name.length>0)\n        // \t            {\n        \t                \n        \t                \n        \t                \n        \t               \n        \t                \n        \t                \n        \t               \n        // \t                if(frm.is_new())\n        // \t                {\n        \t                     \n        // \t                    frappe.call\n        //                         ({\n        //                                     \"method\":\"frappe.client.get_list\",\n        //                                     \"args\":\n        //                                         {\n        //                                             \"doctype\":\"Payroll Process\",\n        //                                             \"filters\":\n        //                                             {\n        //                                                 name:frm.doc.payroll_name,\n        //                                             },\n        //                                         },\n        //                                     callback:function(d)\n        //                                     {\n        //                                         if(d.message[0])\n        //                                         {\n        //                                             // console.log(d.message)\n        //                                                 msgprint('Document name already exist!');\n        //                                                 // create.show()\n        //                                         }\n        //                                         // else\n        //                                         // {\n        //                                         //      console.log(\"SUCCESS\")\n                                                     \n        //     \t                                   //  frm.save()\n        //                                         //     // $.each(frm.doc.payroll_entry_child,function(i,v)\n        //                                         //     // { \n        //                                     \t   //    // frappe.call\n        //                                         //     //     ({\n        //                                         //     //                         \"method\":\"frappe.client.get_list\",\n        //                                         //     //                         \"args\":\n        //                                         //     //                             {\n        //                                         //     //                                 \"doctype\":\"Salary Structure Assignment\",\n        //                                         //     //                                 \"filters\":\n        //                                         //     //                                 {\n        //                                         //     //                                           employee:v.employee_id,\n        //                                         //     //                                           docstatus:1,\n        //                                         //     //                                           from_date: ['<=', start_date],\n        //                                         //     //                                 },\n        //                                         //     //                             },\n        //                                         //     //                         callback:function(s)\n        //                                         //     //                         {\n        //                                         //     //                             if(s.message)\n        //                                         //     //                             {\n        //                                         //     //                                   console.log(s.message,\"have_salary_structure\")\n        //                                         //     //                                  v.have_salary_structure=1\n                                                                                    \n        //                                         //     //                                 frm.save()\n        //                                         //     //                             }\n        //                                         //     //                             else\n        //                                         //     //                             {\n        //                                         //     //                                 console.log(s.message,\"NO_have_salary_structure\")\n        //                                         //     //                                 active_salary_structure=\"false\"\n        //                                         //     //                                 v.have_salary_structure=0\n        //                                         //     //                                 msgprint(\"Please set salary structure for all employees1\")\n        //                                         //     //                             }\n        //                                         //     //                         }\n        //                                         //     //     })\n                                                        \n        //                                         //     //     if(!v.payroll_payable)\n        //                                         //     //     {\n        //                                         //     //         save=\"false\";\n        //                                         //     //         msgprint(\"Please Add Salary payable Accounts in \"+v.employee)\n        //                                         //     //     }\n                                                        \n        //                                         //     //     if(frm.doc.full_and_final_settlement != 1)\n        //                                         //     //     {\n        //                                         //     //         if(v.status==\"Suspended\"|| v.status==\"Separation\")\n        //                                         //     //         {\n        //                                         //     //             emp_hold=\"true\"\n        //                                         //     //         }\n        //                                         //     //     }\n                                                        \n        //                                         //     // });\n                                                    \n        //                                         //     setTimeout(function()\n        //                                 \t       // {\n        //                                 \t       //    // msgprint(\"ssssss\"+\"---\"+save+\"---\"+active_salary_structure+\"ssssssss\")\n        //                                         //         if (active_salary_structure==\" \")\n        //                                     \t   //     {\n        //                                     \t   //         if(emp_hold==\"true\")\n        //                                     \t   //         {\n        //                                     \t   //             frappe.confirm('This payroll entry includes employees with status Separation. Do you want to continue the process?', \n        //                                     \t   //             function() \n        //                                     \t   //             {\n        //                                         //                     frm.save() \n        //                                         //                     // create.hide()\n        //                                         //                 },\n        //                                         //                 function()\n        //                                         //                 {\n        //                                         //                     // create.show()\n        //                                         //                 });\n        //                                         //             }\n        //                                     \t   //         else\n        //                                     \t   //         {\n        //                                     \t   //            frm.save() \n        //                                     \t   //         }\n        //                                     \t   //     }\n        //                                     \t   //     else if(active_salary_structure!=\" \")\n        //                                     \t   //     {\n        //                                     \t   //         msgprint(\"Please set salary structure for all employees1\")\n        //                                     \t   //        // create.show()\n        //                                     \t   //     }\n                                            \t        \n        //                                     \t   //     save=\" \"\n        //                                     \t   //     active_salary_structure=\" \"\n                                            \t        \n        //                                         //     }, 1000); \n                                                    \n                                                    \n                                                    \n                                                    \n                                                    \n                                                    \n                                                    \n                                                   \n                                            \t      \n        //                                         // }\n        //                                     }\n        //                         })\n        // \t                }\n        \t              \n        \t                \n        \t                \n        // \t            }\n        \t          \n        // \t        }\n        \t     \n        //         }\n        //         // else\n        //         // {\n        //         //     msgprint(\"Please Add employees\")\n        //         //     // create.show()\n        //         // }\n    \t        \n    \t        \n        //     });\n\t    \n        \n        var f_and_f= frm.add_custom_button('Full And Final Settlement',\n\t    function()\n\t    {\n\t        frm.set_value(\"full_and_final_settlement\",1)\n            frm.set_value(\"payroll_name\",undefined)\n            frm.set_value(\"year\",undefined)\n            frm.set_value(\"month\",undefined)\n            // frm.set_value(\"branch\",undefined)\n            frm.set_value(\"employee\",undefined)\n            frm.clear_table('payroll_entry_child');\n            frm.refresh_field(\"payroll_entry_child\")\n            f_and_f.hide()\n        });\n        \n       \n\t    }\n        \n        \n         frm.change_custom_button_type('Quick Salary Statement Report', null, 'primary');\n        //  frm.change_custom_button_type('Process Salary', null, 'primary');\n         frm.change_custom_button_type('Full And Final Settlement', null, 'primary');\n         \n         \n         \n       \n         \n          if(!frm.is_new())\n          {\n         \n             if(frm.doc.docstatus==0)\n             {\n                   console.log(frm.doc.docstatus,\"9999999999\")\n                   \n                    frm.set_df_property('company',  'read_only', 1);\n                    frm.set_df_property('posting_date',  'read_only', 1);\n                     frm.set_df_property('payroll_name',  'read_only', 1);\n                      frm.set_df_property('payroll_payable',  'read_only', 1);\n                       frm.set_df_property('year',  'read_only', 1);\n                        frm.set_df_property('month',  'read_only', 1);\n                         frm.set_df_property('designation',  'read_only', 1);\n                          frm.set_df_property('employee',  'read_only', 1);\n                          frm.set_df_property('payroll_entry_child',  'read_only', 1);\n                   \n                   \n                   \n                   \n             }\n         \n          }\n        \n        \n        \n       \n        \n        \n            \n\t},\n\t\n\tyear(frm)\n\t{\n\t    if(frm.doc.full_and_final_settlement !=1)\n\t    {\n    \t    if(frm.doc.year !=undefined && frm.doc.month !=undefined)\n    \t    {\n    \t        if(frm.doc.month.length>0)\n        \t    {\n        \t        frm.trigger(\"filter_employees\") \n        \t        frm.set_value(\"payroll_name\",frm.doc.month+\" - \"+frm.doc.year)\n        \t    }\n        \t    else\n        \t    {\n                    frm.clear_table('payroll_entry_child');\n                    frm.refresh_field(\"payroll_entry_child\")\n                     frm.set_value(\"payroll_name\",\" \")\n        \t    }\n    \t    }\n    \t    else\n    \t    {\n                frm.clear_table('payroll_entry_child');\n                frm.refresh_field(\"payroll_entry_child\")\n                 frm.set_value(\"payroll_name\",\" \")\n    \t    }\n\t    }\n\t},\n\t\n\tmonth(frm)\n\t{\n\t    console.log(frm.doc.designation,\"designationMONTH\")\n\t    console.log(frm.doc.employee,\"employeeMONTH\")\n\t    \n\t   // console.log(frm.doc.full_and_final_settlement,\"11111111\")\n\t   if(frm.doc.full_and_final_settlement !=1)\n\t    {\n    \t    if(frm.doc.year !=undefined && frm.doc.month !=undefined)\n    \t    {\n    \t        if(frm.doc.month.length>0)\n        \t    {\n        \t        frm.trigger(\"filter_employees\") \n        \t        frm.set_value(\"payroll_name\",frm.doc.month+\" - \"+frm.doc.year)\n        \t    }\n        \t    else\n        \t    {\n                    frm.clear_table('payroll_entry_child');\n                    frm.refresh_field(\"payroll_entry_child\")\n                     frm.set_value(\"payroll_name\",\" \")\n        \t    }\n    \t    }\n    \t    else\n    \t    {\n                frm.clear_table('payroll_entry_child');\n                frm.refresh_field(\"payroll_entry_child\")\n                frm.set_value(\"payroll_name\",\" \")\n    \t    }\n\t    }\n\t},\n\t\n\tdesignation(frm)\n\t{\n\t   // if(frm.doc.month.length==0 && frm.doc.employee==undefined)\n\t   // {\n\t   //     msgprint(\"Select Month\")\n\t   // }\n\t   //// console.log(frm.doc.month,\"iii\")\n\t   //// console.log(frm.doc.employee,\"ooo\")\n\t    \n\t   // else\n\t   // {\n\t         frm.trigger(\"filter_employees\") \n\t   // }\n\t   \n\t   console.log(frm.doc.employee,\"employeeDESIGNATION\")\n\t   console.log(frm.doc.designation,\"designationDESIGNATION\")\n\t   \n\t},\n\t\n\temployee(frm)\n\t{\n\t    \n\t    if(frm.doc.employee)\n\t    {\n\t        frm.clear_table('payroll_entry_child');\n            frm.refresh_field(\"payroll_entry_child\")\n            \n\t                    frappe.call\n                                ({\n                                    \"method\":\"frappe.client.get_list\",\n                                    \"args\":\n                                        {\n                                            \"doctype\":\"Employee\",\n                                            \"filters\":\n                                            {\n                                              name:frm.doc.employee,  \n                                              \n                                            },\n                                          \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                        //   limit_page_length:1000,\n                                        },\n                                    callback:function(d)\n                                    {\n                                        if(d.message[0])\n                                        {\n                                            console.log(d.message[0].name,\"namename\")\n                                            \n                                             frappe.call\n                                                ({\n                                                    \"method\":\"frappe.client.get_list\",\n                                                    \"args\":\n                                                        {\n                                                            \"doctype\":\"Salary Slip\",\n                                                            \"filters\":\n                                                            {\n                                                              \"employee\":d.message[0].name,\n                                                              \"year2\":year,\n                                                              \"month1\":month,\n                                                              \"status\": [\"in\", [\"Draft\", \"Submitted\"]] \n                                                            },\n                                                        },\n                                                        callback:function(s)\n                                                        {\n                                                            if(!s.message[0])\n                                                            {\n                                                                if(d.message[0].salary_payable)\n                                                                {\n                                                                \n                                                                var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                child_row.employee = d.message[0].employee_name;\n                                                                child_row.employee_id= d.message[0].name;\n                                                                 child_row.payroll_payable= d.message[0].salary_payable;\n                                                                child_row.status= d.message[0].status;\n                                                                 child_row.designation= d.message[0].designation;\n                                                                 frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                            }\n                                                        }\n                                                })\n                                        \n                                            \n        \n        \t                             }\n        \t               \n        \t                         }\n        \t                    });\n\t        \n\t    }\n\t    \n\t    else\n\t    {\n\t         frm.trigger(\"filter_employees\")  \n\t    }\n\t     \n                                    \n    \t                    \n                \t      \n              \n\t},\n\t\n\temployee_1(frm)\n\t{\n\t    frm.trigger(\"filter_employees\")  \n\t},\n\t\n\tsettlement_start_date(frm)\n\t{\n\t        if(frm.doc.settlement_start_date !=undefined)\n            {\n                if(frm.doc.settlement_start_date.length>0)\n                {\n                    start_date=frm.doc.settlement_start_date\n                }\n                else\n                {\n                    start_date=\" \"\n                }\n            }\n            else\n            {\n                start_date=\" \"\n            }\n\t},\n\t\n\tsettlement_end_date(frm)\n\t{\n\t        if(frm.doc.settlement_end_date !=undefined)\n            {\n                if(frm.doc.settlement_end_date.length>0)\n                {\n                    end_date=frm.doc.settlement_end_date\n                }\n                else\n                {\n                    end_date=\" \"\n                }\n            }\n            else\n            {\n                end_date=\" \"\n            }\n\t},\n\t\n\tbefore_save(frm)\n\t{\n\t    if(frm.doc.full_and_final_settlement==1 && frm.doc.settlement_start_date !=undefined)\n\t    {\n\t        if(frm.doc.settlement_start_date.length>0)\n\t        {\n        \t        var month_list=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];\n        \t        var startdate1=frm.doc.settlement_start_date\n        \t        var month1=startdate1.split(\"-\")[1]\n            \t    year=startdate1.split(\"-\")[0]\n            \t    month=month1.replace(/^0+/, \"\");\n            \t    const currentMonth=month_list[month-1]\n\n                    frm.set_value(\"year\",year)\n                    frm.set_value(\"month\",currentMonth)\n\t        }\n\t    }\n\t    \n\t    \n\t    \n\t    \n\t    \n\t    \n\t    \n\t    \n\t},\n\t\n\t\n\tvalidate:function(frm)\n\t{\n\t       // if(frm.is_new())\n        // \t                {\n        \t                     \n        // \t                   // frappe.call\n        //                     //     ({\n        //                     //                 \"method\":\"frappe.client.get_list\",\n        //                     //                 \"args\":\n        //                     //                     {\n        //                     //                         \"doctype\":\"Payroll Process\",\n        //                     //                         \"filters\":\n        //                     //                         {\n        //                     //                             name:frm.doc.payroll_name,\n        //                     //                         },\n        //                     //                     },\n        //                     //                 callback:function(d)\n        //                     //                 {\n        //                     //                     if(d.message[0])\n        //                     //                     {\n                                                    \n        //                     //                         msgprint('Document name already exist!');\n        //                     //                           frappe.validated = false;\n                                                      \n        //                     //                     }\n                                              \n        //                     //                 }\n        //                     //     })\n        // \t                }\n        \n        frappe.show_progress('Loading..', 20,50,70, 100, 'Please wait');\n        \n\t},\n\n\n\t\n\tfilter_employees:function(frm)\n\t{\n\t    \n\t   \n\t    var month_list=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"]\n\t    var emp=\" \"\n\t    var branch;\n\t    var desi=\" \"\n\t  \n\t   \n       \n     \n        \n        frm.clear_table('payroll_entry_child');\n        frm.refresh_field(\"payroll_entry_child\")\n        \n        if(frm.doc.full_and_final_settlement==1)\n        {\n        //   console.log(\"11111\")\n            // end_date=frm.doc.settlement_end_date\n            \n            if(frm.doc.employee_1 !=undefined)\n            {\n                if(frm.doc.employee_1.length>0)\n                {\n                    emp=frm.doc.employee_1\n                }\n                else\n                {\n                    emp=\" \"\n                }\n            }\n            else\n            {\n                emp=\" \"\n            }\n            \n            if(emp !=\" \")\n            {\n                \n                console.log()\n                \n                    frappe.call\n                        ({\n                            \"method\":\"frappe.client.get_list\",\n                            \"args\":\n                                {  //\n                                    \"doctype\":\"Employee\",\n                                    \"filters\":\n                                    {\n                                    //   date_of_joining: ['<=',start_date],\n                                      name:emp,\n                                    //   relieving_date:['>=',end_date],  \n                                        \n                                    },\n                                \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                },\n                            callback:function(d)\n                            {\n                              \n                                if(d.message[0])\n                                {\n                                    \n                                    // console.log(\"22222\")\n                                       \n                                                        var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                        child_row.employee = d.message[0].employee_name;\n                                                        child_row.employee_id= d.message[0].name;\n                                                        child_row.payroll_payable= d.message[0].salary_payable;\n                                                        child_row.status= d.message[0].status;\n                                                        child_row.designation=d.message[0].designation;\n                                                        frm.refresh_field('payroll_entry_child');\n                                       \n                                    \n                                  \n                                }\n\t                         }\n\t                    }); \n            }\n\t                    \n        }\n        else\n        {\n            // console.log(\"33333\")\n            // console.log(frm.doc.designation,\"designationdesignation\")\n         \n            month=frm.doc.month\n    \t    year=frm.doc.year\n    \t    var idx=month_list.indexOf(month)+1;\n    \t    daysInMonth = new Date(year, idx, 0).getDate();\n            const month1 = idx.toString().padStart(2, '0');\n            start_date=year+\"-\"+month1+\"-\"+\"01\"\n            end_date=year+\"-\"+month1+\"-\"+daysInMonth\n            \n               \n                \n                if(frm.doc.employee !=undefined)\n                {\n                    if(frm.doc.employee.length>0)\n                    {\n                        emp=frm.doc.employee\n                    }\n                    else\n                    {\n                        emp=\" \"\n                    }\n                }\n                else\n                {\n                    emp=\" \"\n                }\n                \n                \n                \n                if(frm.doc.designation !=undefined)\n                {\n                    if(frm.doc.designation.length>0)\n                    {\n                        desi=frm.doc.designation\n                    }\n                    else\n                    {\n                        desi=\" \"\n                    }\n                }\n                else\n                {\n                    emp=\" \"\n                }\n                \n                \n                \n                \n                \n            if(desi==\" \"&& emp==\" \")\n            {\n                console.log(start_date,\"start_datestart_date\")\n                console.log(end_date,\"end_dateend_date\")\n                \n                console.log(\"11111111111\")\n                frappe.call\n                ({\n                                    \"method\":\"frappe.client.get_list\",\n                                    \"args\":\n                                        {\n                                            \"doctype\":\"Employee\",\n                                            \"filters\":\n                                            {\n                                              date_of_joining: ['between', [start_date,end_date]],  \n                                              \"status1\": [\"in\", [\"Active\", \"Seperation\"]] ,\n                                              \"company\":\"Lamit\"\n                                            },\n                                          \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status1\",\"designation\"],\n                                          limit_page_length:100000,\n                                        },\n                                    callback:function(d)\n                                    {\n                                        if(d.message[0])\n                                        {\n                                            // console.log(d.message)\n                                            // console.log(d.message[i].name)\n                                            \n                                            $.each(d.message,function(i,v)\n                                            {\n                                                  frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                            });\n                                            \n                                            // frm.refresh_field('payroll_entry_child');\n        \n        \t                             }\n        \t               \n        \t                         }\n        \t                    });    \n    \t                    \n    \t        frappe.call\n                ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          relieving_date: ['between', [start_date,end_date]],\n                                          status1: [\"in\", [\"Seperation\",\"Active\"]] ,\n                                          \"company\":\"Lamit\"\n                                        },\n                                         \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status1\",\"designation\"],\n                                         limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        console.log(d.message,\"ll\")\n                                        $.each(d.message,function(i,v)\n                                        {\n                                            frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n    \n    \t                             }\n    \t               \n    \t                         }\n    \t                    }); \n         \n    \t                   frappe.call({\n                                    \"method\": \"frappe.client.get_list\",\n                                    \"args\": {\n                                        \"doctype\": \"Employee\",\n                                        \"filters\": [\n                                            [\"date_of_joining\", \"<\", start_date],\n                                            [\"relieving_date\", \">\", end_date],\n                                            [\"status1\", \"in\", [\"Seperation\", \"Active\"]\n                                            \n                                            ],\n                                            [\"company\",\"=\",\"Lamit\"]\n                                            // \"company\":\"Lamit\"\n                                        ],\n                                        \"fields\": [\"name\", \"employee_name\", \"salary_payable\", \"status1\", \"designation\"],\n                                        \"limit_page_length\": 1000\n                                    },\n                                    \"callback\": function(d) {\n                                        if (d.message && d.message.length > 0) {\n                                            console.log(d.message);\n                                        $.each(d.message,function(i,v)\n                                        {\n                                             frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                        });\n                                        \n                                        \n                                    }\n    \t                         }\n    \t                    }); \n    \t                    \n    \t                    \n    \t                     frappe.call({\n                                    \"method\": \"frappe.client.get_list\",\n                                    \"args\": {\n                                        \"doctype\": \"Employee\",\n                                        \"filters\": [\n                                            [\"date_of_joining\", \"<\", start_date],\n                                            [\"relieving_date\", \"in\", undefined],\n                                            [\"status1\", \"in\", [\"Seperation\", \"Active\"]\n                                            \n                                            ],\n                                             [\"company\",\"=\",\"Lamit\"]\n                                            \n                                        ],\n                                        \"fields\": [\"name\", \"employee_name\", \"salary_payable\", \"status1\", \"designation\"],\n                                        \"limit_page_length\": 100000\n                                    },\n                                    \"callback\": function(d) {\n                                        if (d.message && d.message.length > 0) {\n                                            console.log(d.message);\n                                        $.each(d.message,function(i,v)\n                                        {\n                                            frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                        });\n                                    }\n    \t                         }\n    \t                    }); \n    \t       \n    \t       \n    \t       \n    \t       \n    \t      \n\n    \t       \n    \t       \n    \t                    \n            }\n            \n            \n            \n            \n            \n            else if(desi==\" \" && emp!=\" \")\n            {\n                console.log(\"222222222222\")\n                \n                // console.log(\"frm.doc.employee\",frm.doc.employee)\n                                frappe.call\n                                ({\n                                    \"method\":\"frappe.client.get_list\",\n                                    \"args\":\n                                        {\n                                            \"doctype\":\"Employee\",\n                                            \"filters\":\n                                            {\n                                              date_of_joining: ['between', [start_date,end_date]],  \n                                              name:emp,\n                                              \"company\":\"Lamit\"\n                                            },\n                                          \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                          limit_page_length:1000,\n                                        },\n                                    callback:function(d)\n                                    {\n                                        if(d.message[0])\n                                        {\n                                            console.log(d.message,\"dateofjoining\")\n                                            $.each(d.message,function(i,v)\n                                            {\n                                                  frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                            });\n                                            \n                                            // frm.refresh_field('payroll_entry_child');\n        \n        \t                             }\n        \t               \n        \t                         }\n        \t                    });    \n    \t                    \n                \t        frappe.call\n                            ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          relieving_date: ['between', [start_date,end_date]],  \n                                          name:emp,\n                                        },\n                                      \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        console.log(\"relieving_daterelieving_date\")\n                                        $.each(d.message,function(i,v)\n                                        {\n                                              frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n    \n    \t                             }\n    \t               \n    \t                         }\n    \t                    }); \n         \n    \t                    frappe.call\n                            ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          date_of_joining: ['<',start_date],\n                                          name:emp,\n                                          relieving_date:['>',end_date],  \n                                            \n                                        },\n                                    \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        console.log(\"date_of_joining=relieving_date\")\n                                        $.each(d.message,function(i,v)\n                                        {\n                                            frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n                                    }\n    \t                         }\n    \t                    }); \n    \t                    \n    \t                     frappe.call\n                            ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          date_of_joining: ['<',start_date],\n                                          name:emp,\n                                          relieving_date: ['in',undefined]\n                                        //   relieving_date:undefined,  \n                                            \n                                        },\n                                     \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        // console.log(\"d.message[0].name\",d.message)\n                                        console.log(d.message[0].name,\"date_of_joining and relieving_date undefined\")\n                                        \n                                        $.each(d.message,function(i,v)\n                                        {\n                                            frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n                                    }\n    \t                         }\n    \t                    }); \n            }\n            else if(desi!=\" \" && emp==\" \")\n            {\n                console.log(\"33333333333333\")\n                frappe.call\n                ({\n                                    \"method\":\"frappe.client.get_list\",\n                                    \"args\":\n                                        {\n                                            \"doctype\":\"Employee\",\n                                            \"filters\":\n                                            {\n                                              date_of_joining: ['between', [start_date,end_date]],  \n                                              designation:frm.doc.designation,\n                                              \"company\":\"Lamit\"\n                                            },\n                                          \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                          limit_page_length:1000,\n                                        },\n                                    callback:function(d)\n                                    {\n                                        if(d.message[0])\n                                        {\n                                            $.each(d.message,function(i,v)\n                                            {\n                                                frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                            });\n                                            \n                                            frm.refresh_field('payroll_entry_child');\n        \n        \t                             }\n        \t               \n        \t                         }\n        \t                    });    \n    \t                    \n    \t        frappe.call\n                ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          relieving_date: ['between', [start_date,end_date]],  \n                                          designation:frm.doc.designation,\n                                        },\n                                      \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        $.each(d.message,function(i,v)\n                                        {\n                                              frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n    \n    \t                             }\n    \t               \n    \t                         }\n    \t                    }); \n         \n    \t        frappe.call\n                ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          date_of_joining: ['<',start_date],\n                                          designation:frm.doc.designation,\n                                          relieving_date:['>',end_date],  \n                                            \n                                        },\n                                    \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        $.each(d.message,function(i,v)\n                                        {\n                                             frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                        });\n                                        \n                                        \n                                        frm.refresh_field('payroll_entry_child');\n                                    }\n    \t                         }\n    \t                    }); \n    \t                    \n    \t        frappe.call\n                ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          date_of_joining: ['<',start_date],\n                                          designation:frm.doc.designation,\n                                         relieving_date: ['in',undefined]\n                                            \n                                        },\n                                    \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        $.each(d.message,function(i,v)\n                                        {\n                                             frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                        })\n                                        \n                                        \n                                        frm.refresh_field('payroll_entry_child');\n                                    }\n    \t                         }\n    \t                    }); \n            }\n            else if(desi!=\" \" && emp!=\" \")\n            {\n                console.log(\"444444444444444\")\n                 frappe.call\n                ({\n                                    \"method\":\"frappe.client.get_list\",\n                                    \"args\":\n                                        {\n                                            \"doctype\":\"Employee\",\n                                            \"filters\":\n                                            {\n                                              date_of_joining: ['between', [start_date,end_date]],  \n                                              designation:frm.doc.designation,\n                                              name:emp,\n                                              \"company\":\"Lamit\"\n                                            },\n                                          \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                          limit_page_length:1000,\n                                        },\n                                    callback:function(d)\n                                    {\n                                        if(d.message[0])\n                                        {\n                                            $.each(d.message,function(i,v)\n                                            {\n                                                 frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                            });\n                                            \n                                            frm.refresh_field('payroll_entry_child');\n        \n        \t                             }\n        \t               \n        \t                         }\n        \t                    });    \n    \t                    \n    \t        frappe.call\n                ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          relieving_date: ['between', [start_date,end_date]],  \n                                         designation:frm.doc.designation,\n                                          name:emp,\n                                        },\n                                      \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        $.each(d.message,function(i,v)\n                                        {\n                                            frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n    \n    \t                             }\n    \t               \n    \t                         }\n    \t                    }); \n         \n    \t        frappe.call\n                ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          date_of_joining: ['<',start_date],\n                                         designation:frm.doc.designation,\n                                          name:emp,\n                                          relieving_date:['>',end_date],  \n                                            \n                                        },\n                                    \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        $.each(d.message,function(i,v)\n                                        {\n                                            frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n                                    }\n    \t                         }\n    \t                    }); \n    \t                    \n    \t           frappe.call\n    \t           ({\n                                \"method\":\"frappe.client.get_list\",\n                                \"args\":\n                                    {\n                                        \"doctype\":\"Employee\",\n                                        \"filters\":\n                                        {\n                                          date_of_joining: ['<',start_date],\n                                          designation:frm.doc.designation,\n                                          name:emp,\n                                          relieving_date: ['in',undefined]\n                                            \n                                        },\n                                    \"fields\":[\"name\",\"employee_name\",\"salary_payable\",\"status\",\"designation\"],\n                                      limit_page_length:1000,\n                                    },\n                                callback:function(d)\n                                {\n                                    if(d.message[0])\n                                    {\n                                        $.each(d.message,function(i,v)\n                                        {\n                                             frappe.call\n                                            ({\n                                                \"method\":\"frappe.client.get_list\",\n                                                \"args\":\n                                                    {\n                                                        \"doctype\":\"Salary Structure\",\n                                                        \"filters\": [\n                                                                [\"from_date\", \"<\", start_date],\n                                                                [\"employee\",\"=\",v.name],\n                                                                [\"docstatus\",\"=\",1]\n                                                               \n                                                                \n                                                                ],\n                                                        \"fields\":[\"*\"]\n                                                               \n                                                                \n                                                            \n                                                    },\n                                                    callback:function(s)\n                                                    {\n                                                        if(s.message.length>0)\n                                                        {\n                                                            \n                                                            \n                                                                if(v.salary_payable)\n                                                                {\n                                                                    // console.log(s.message,\"777777777777\")\n                                                                    \n                                                                    var child_row = frappe.model.add_child(frm.doc, 'payroll_entry_child');\n                                                                    child_row.employee = s.message[0].employee_name;\n                                                                    child_row.employee_id= s.message[0].employee;\n                                                                    child_row.payroll_payable= s.message[0].payable_account;\n                                                                    child_row.status= s.message[0].emp_status;\n                                                                    child_row.designation= s.message[0].designation;\n                                                                    frm.refresh_field('payroll_entry_child');\n                                                                }\n                                                        }\n                                                        \n                                                       \n                                                    }\n                                            })\n                                        });\n                                        \n                                        frm.refresh_field('payroll_entry_child');\n                                    }\n    \t                         }\n    \t                    }); \n            }\n            \n            \n            \n        }\n        \n \n\n        \n    \t                 \n\t        \n\t        \n\t        \n\t                    \n\t                    \n\t},\n\t\n\n\n\n\n});\n\n\n\n\n\n\n\n\n",
  "view": "Form"
 }
]